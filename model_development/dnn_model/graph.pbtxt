node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 69
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 800
          }
          dim {
            size: 69
          }
        }
        tensor_content: "o\275X=\357\201\266<p\276G@\336\323\363=\2200\r>\034\201\307>l\201\3509\216q\215=\226\336\227\301\001\235\326?\331\233\360=\247=\335>\347\340\251=\342\022\371>\365\235\035>\214\035W>\371\203\020\276\327\034\002\276\334\353 \274\375\001\210<\261\360\261\275lg\204:\212\320.:\343\333\323;\307+x;\027\030\217;~r\311:\220C4;[\313\301;\333\271\364:\0171t;\223\224\300:)\241\021;\332\216r;E)\221<4\202\362;\355\262\031>\251X`<a?\003<n.\035>J\361q9\211\305\353<\277\232G?.\234\233>\360\367\305>\220\304P>\372\217\200>\005\2568>\334z\215>\272\336f>\022I\034>\335\250&>N\016I>LAb>\006\255G>F,2:\265\035*:Q\016\004<\033U\341;\327\211\230;\202I\321:\025U\024;\362H\331;j\353\030;L\3466;i\221\364:\365{0;\274\"\033;\000\000\360B\030\203\027=\024\024\334<K\244I@|\267\311=\022\247\016>0\332>>v\261F:\314\333#=cD\235\301\307Y\023@\014%s>b\277[?J{\353>`\246>=bc\325;VR\024\274\375\337\033=z1\272=\223\300\302\274\372j\301\275_\025\250\275\244\340\260:\026(\025:%\241R;\334\037\247:;\2228;+\001X;\366\201\300:\320\0371;g\320\262:\317a\323:k\"\002; \370\255:v;\365:^\250\335;\264{\337;j\235\324=\036\322\001<\234{\032<\007o\213=\303\272\2049\242\376j<u\252\273>\250\316N>\262\031\005>\234Bl>J\3774>\013\335@>\005f0>\036\370\020>\036>\021>\276w\356=\017\304\001>\202G\377=\202\177\342=\254_\260:\241\355\":\356\334/;\332\313\254:_\271\032;\\\340s;\267\211\265:\203\320D;\255wS:\303\372\225:\374Y\347:$\002\206:?\210`:\000\000\026C\277\347\026=\017\274Q=\016,H@\333P\354=\240\270\036>\213o?>\363\360/:\023\300.=\001\213\224\301\320\264\030@FE\353<e\262\354>\216\323\311\275\334N*\275\304\213s>\3401]=\366\204\335=\355\371E>\205\003k\275\224B\323\275\026\016\022\2760\374\227:\237:9:\275\316\365:\0014\243:h\211\216;<\233\327:}\037\326:\301+%;3P^:\001\n\005;)\033\013;\243\235\215;\3255\034;\267(0<)6\025<>\320\334=\323\027\230<\243\357L<\210\261\264=\315\367\2279\203\331\177<\217Q\000?\311\245\313>E\250\006?W\\\256>\000\rt>\035\376x>b;5>Y\274\225>#\036\215>\334\332[>\r\254L>\214\335\201>\006\314J>\274\030\232:\377\2550:\365e,;\366\270\202:\366o\332;\251\223\001;-\022\324:\032\204?;k\306L:9j,;Y$\322:\2507\212;7O\344:\000\000\026C/\260\013=\245\216\316=S\273H@\305B\026>\360\0241>\034\"n>\326\235O9t\013f<)\224\224\301\360\241\350?]\017\310>\"pM?\237\307\304>\323S\247>4N\321<\031\346K=\003\356\030>\037Q\202\275\327 \212=\264\353><\177\337\336\275@B\3609\214\202\2359\"\202\032:\021(i:F\035\332;]\221\300:B\210\003:B\227i941\r:\020\335\002:\203V\213:\377\004);T\301\373:Z\251\371;_\'$<\266md=\350\203D<\230E\315;\201\335\236=\316\351\2568,K!<\246\001!>6\302e>\225\006\357=!l\236=\2724\302=\212\271\206=N\261\177=T\314T=\250\031_=7\241H=\354\270\177=\034]T=\353\300a=\245\307\2469\014\024i9\270\243x9\r\235\3139>\334\205;\324\2439:\222\246\2509\177 #9\252L\3309\267\036\3349]\021S:\033\357\t;Jt\205:\000\000\026C\362\226\234=s\324e=\305\234P@\243K\023>ZK\033>\370\372N?\276/R9\010}\002>.U\212\301X\304\201?TP\300>\r\205\032>;!\266=(\026\223>\372\325\331=\323\300n>\251~\364=S\271\237=\302\336\022\276\313\"\355<\341?\316=u#\001;\307R\222:\320\005\327:\240p\002;8\371p:\367\323\205:7&\212:\030\356\177:\261\345\032:i\2070:|R\262:\265i\277:o\375\205:W5\001<d\343\335;|G\n=\272c@<\212}&<\312\371\367=\335\026\2558q\242M<\2520\226>H\275d>\234\333\203>\216\035\'>D\363\016>n\253\342=R\213\255=\214\202\006>IJ(>D\206\374=\371\355\260=\262\341\311=\271\324\013>cC\276:O\027#:\000\234\357:\221\240<;\3163\3609fbm:e\026O:\005(\010:\202\004\2739\377\275\31693\013\322:\373\306\235:#\351O:UU\005C\341\005\231=\024\360\221=\344\315H@\004\032J>\037\305F>\003H!?\350\017k9\247\330\265=\363}\222\301\007\270\227?\"\375\305>\373\371\016?)\203\361>\313\004\230>\036\206D>,\211\213>\365\2121>\214-\341<\312\304\204=tA*=\300n\005>\200\240\3559\216\022\2049\313\2521;\302\'\243;\027\264\233:=\354\205:\236\306Z:\013?\302:\324w\253:`\370\2419\032\204\3449f\244U9\271\270\362:s\027\n<\235l\022<i\207z=[V\013<\023\305\241;X\367\333=9=\2748\032=\376<m\351\215>p\"B>\230JH>\211\367/>+\247\362=DR\027>YV\330=\340j!>\302\314\024>\242`!>\021m\035>]/\026>\357k\370=\007\333\3239Y\030\0359\322=\350:\376r\375;\024\316K:`\234\264:\017\353\3529<<\345:\211Z\234:m\215\"9\302\353\3549j\245\2438\\\306\375:\000\000\360B\337!\205=sN\344=\26234@\005\313\022>r\301\032>P|\035?[\020s9C\361\315=\236\315\206\3016e\251?S\031\243>\300\246\007?U\375\266>\215\336\350>\374~\025>\r\302\324=\270\375i\274h\367\n\273\347\003\241\275\016\016\024=W\354!\276\205\271\215:\305\3438:\244zR;*\216<;K%\356:\037\264\030;dNO;G\342\334:7\035\374:h\261\313:\206-\006<\251\355\226;EG4;A\266\\<}\322\027=\366\301\177>l#{<Q\345+<|\0004>\350\254\2618B\243\010=#3\000?\206\306\272>\374Q\365>\231n\217>\265 \232>\246\247\020>C6J>M#L>\177s$>\022\207\033>(\205\036>Ls\t>s\273\016>\000\367\037:dC\014:e3\321:\235\037\007;\236\353\237:\310\014\033;\202\220A;\227(\230:|\362\022;\215K\254:\306k\270;\017\254D;\251\356\247:\000\000HC\272+j=\276\276\362<m\376E@F\216\023>\007_.>7-\301>\265\177\2639\350pj=\247L\230\301V,\303?3=.>\n\025\302>\320=@>\243\215\347>\000\310W>3-\226=\201W3>J\357x>\326Zd\274\004\231\305\275}\272\006\276\366\351^:\261\035P:\320T\005;m9o;7\322\036;W1\322:v\351\202:\243\213\242:\027\306N;j\324\n; h\314:E\212\204:\027\006\322:\334\217\035<\017\255\320;)o\300=\2451=<\0301&<\372x\250=c\227\3518\243\345\215<gU\374>i\353R>\225\232\263>\"\341@>\2742q>\004\332n>z\2614>\\\'\227>\361Xy>cc\014>\374Wa>WC(>V]\037>\\ct:\354\246\022:]H\253:\323\201\033;\337\374\377:\361n\200:\216\225Y:\227\314\246:mo2;\335\236\016;\205\345\274:~e;:4\243/:\000\000HC\344z\247=]5j<jJL@-\276 >\316\304 >p\307R?\255J\2109\303\306\020>K\007\234\301\022\277\215?\316I\202\276\306\257a>\010M\222>\257\222\n>\031\240f>\r\332\352\275\023)\035\275\347\036\030>\312\210Q>\356\3578>;+\000=\346;\027:\327\337\010;*\221\017;\231\000(:\341. :\366\n\235:qk\004;\200\327\013;Y\323\213:\236D\3739\232\023\254:X\271\002:=z\332:m\231\260<\034\032\204;\210\255\255=\005\317\352<%\254\222<+\310\232>Z\334z9{\235l=e\tN?\322Q\363>\276\336\273>3\303\203>\202\3554>\361;_>lB\\>\330\247\235>-\263M>\366\034@>\346 \207>*ss>\230\300\365=:\021\3609\346g\260;\314h#;\324\177=:\007\222\023:\036\036z:bL=;\243\242\013;\260k\323:\250\256(:\363\030\325:\226?\000:\005\305\274:\214.\332B\204\317D=\274\224\036=0eO@\255\306\343=\362Q\016>\324!\271>SFC:\005\327\225=\350Q\230\301*\345\305?\207\366\332\276\261[\323<\2248\304\275\022\341\320<\237\024\354\273\353\232@;r\313\014\276{\201\216=\303`\021\276~B\025\275\230\337\370\274\360\003\273:\353\373\243:o\310\000;\205\213\327:\316^=:N\220\2779\207r\003:\003\235z:\343&\017;MA-:1=\3029\235\217\233:\305\007\335:\210\272O<\327\267\274<\230\207\312=\262\321\272<\334\241\275<\320g\'>\036\244\2179\325\227\347<vp\231?r?\273>@\301\316>\274v\251>\rI\224>f\256\247>|na>\0025\210>\343\343v>\032\005\220>\361\210\233>\223\202y>\"|\210>\305\t\031;|\202&;\251\214^;k%\372:A\263@:\245\316\3309RI\3649\236&\255:\241E\200;@\2211:\026\304\3059\326\243$;\241\273\241:\000\000\026C\177\272\302=-5\251=\243,L@$\352,>\230\3005>\003[G?\314*P9\246y\371=\027\364\204\301S\352\213?\315\341\304\275\302\346\231>&\3150>\205\224l>\363\317\236\276\276\333\240\276\"]\006\276\2443\235=\254u\243>\216\242\210>\324\017\262\275\324\213k;\201\276\224:L\332\276:\244\202\016;\364\270\366:\244\253i;*\276&;Bb.;\263\024\021;\316\204\307:\277U\345:\347 \254:V\006\020;\3053\260<\351\315R<\360x\304=\365\003\260<\231\326\200<\031nP>\326\rs8d\211\370<\360\314\310>W\320\202>\\\347\274>7H\244>u\0345>\207\315\202>#\316Q>\030\036Q>A1\\>\210\263\261>\232\335\302>\177\230s>t|\212>}R\330;Bu\227:\247O|:\222\336\026;\021\376\343:\002\365?;QA\007;\022\250U;\010\201\360:Dq\261:S\332\014;\272\226\306:2\265\330:UU\005C\300\327\202=\230\"\221=\355fO@\206J\006>>r\013>\021\317)?\255%\2429\026F\333=S\247\216\301\300\343h?C\262\366>]D\333>\340n\320>*e\220>+\251\246=\314s\241>.S\035>\255K\212=\347\243g>\327u\030>\223\320P=fo\036:_\266\2239\213I\023;\320i\253;\375\"\034;\3055\206;\026\256V:\275\337\206;D\360\23797)\3249\307\3114:\321\005\3419Wr5;\307\311\227<\320\017X<\342\260w=\350\376l<\001\3507<n\376\202>B\267\3758\357\333\000=\337\375\025?(\033\320>>\365\025?=nC>\346\345J>\261 \031>\013E\003>OJ2>\222\013\351=\237\302\">)i#>s\214$>\376>%>\261m\020:\250\274j9\253,\031;c\207\370;\337DA;\233\212\202;\234\351$:p]\236;\301\276\"9)t\3249\006\327\021:\2045\3159\204\215\002;\000\000\026C\320\007\222=\023J\315<\306\227F@\344\245\027>\275\023!>\371\311\037?wam9|\032\324=\2015\223\301\347\025\273?\313\003u\276o\372\241>\020\364/=\243\257\205>\004\017\330\274(\350\243\275\032\034\033>\301\264\354=\250\367p=g\213\376\275\327\212/\275\361\212\021<\033\rv:\233k\365;\262zl;\215\312^:\301=\274;\332DB;-\000\256;\235@\232:=u\234;\254R\355;\363h\3269\007\232\241;\304\361\210<\236\033\242;Z\010\346=\022}n<\2145*<e\2655>-?w8\351\034\t=\201\000\300>\211\027H>E\n{>Th&>\230\023\027>\202\373:>\210\3769>\252\364S>\316\2410>\001\314z>\316\213/>#\333Q>\226_+>\250\322\373;\2026\272:CF\017<\222\304s;B\r\r:\270\324\234;\215]\367:\226\212\211;&\"d:L\216\206;\221L\345;\330?\2149_c\001;\214.\332B\242o\307<\334(\023=(5L@k\274\342=\207t\">`\335\304=y\345\321:\370Q\327<\010\253\242\301\276\316.@\371\t\307=\221D\232\276z\242\227\276I\221\004>\275\243v\275\356<\344=W\237\">\327\260?>\365\365\t\276\306g\203\275\021}\007>f\201\021:\000\361\271:F-\263:\220\350\024:\t1\211:\310\242\2479\004\330\3439\211sa:\217\373\3449\n|\263:^\353\3369\030\257\3249\003\262\200:\013\254\271;]$\014<G%\363=\025 \231<\223\022\214<\001w\'=\213T6:\262\251\341;\260U\013?\324!\326>0\270\300><e7>\341\327\207>\217\014\245>\340V\267>?\236\216>mw\320>\346\220\323>Mx\254>L\370}>;\020J>\325\264\032:\327\266\200;Ox\304:\224\240a:\265\211\310:^t\206975\3459\277}\261:J\340\002:\375\277\351:\310\t-:i\212\3379\026R\214:\000\000\026C\3524\210=w\376\246=\031\364R@0+\035>(\271\'>j\376\032?\370\316\2029\305N\306=\243\360\212\301\323?\250?\255\003\"?\356\030\000?Dr\236<\224k\215>\240\303\000>Sxu>\317Or>Ui\266=\234\022^\275\260\360\355\275\334\023m=\205=\327:>w\006:\260.\377:#2\305;\253Q\030;K\322\225;\351\215e:\245\264p;\210\026{:\r\014\312:w\034\007;hV\206:\001\242E;2\3109<\ny\211<\253\033,<\302\254\265<\'\262\253<\027!\t>\221\347\2608\240\206\276<\037Y\024?\257@Q>\003dr>J\004;>_\313Y>\3259\014><n!>\225\365\313=\201\365\344=\307uA>R\003\021>\246\013\025>\343V/>\223[\222:\343y\2469\005{\360:\245\346%<C\333\342:\037\253\001<\323\241\025:1\266\240;\361\035;:T\345\200:\376\033\335:\002\371K:wiA;\000\000pC\335[M=zI`=\224sG@\313H\362=\315\247\030>\267\341\222>\001\225H:\323h\204=e\226\234\301b\324\035@}\335k\276I3y>\177Aq>-\030\320=@F\350:\322|\233\276\214t\273\275>\203]=wiM\275\2131c\275\344`q\275\207y\242:\006\270\034;j[\210;9.\222;G\031\000;\344U\207:\027n\027:\t\245\2639\212q\3629\332\367\241:\320\350\331;\377A\2619\014 \202;\023\271\t=\322C#=\274\334\255>\215\246(=T\352\316<jA\246>\313a\3309\204\033\\=\205\211\375?\200\361P?\277\003\020?\"t\330>\250\020\235>\2278\202>E\310\201>\021Q\224>\2240\201>L\352\207>`\035}>9\334J>\017\016\210>\332\245@;2\264\';\370D\265;\377\343\366;\343 7;\263\326\274:\217\2214:\344\240\3169\255J\3059\315y\033;\363=X<r\216\2209\021=Z;UU\005C\025.g=\216z2=\302\354K@\n\n\005>c\224\027>\033\215\375>t\234\2059\316\333\250=\250\237\216\301x\337\276?z\221\270>\\U\021?V\212B\276\351He\275fN\204>|\023)>\\\314\351\276sr\021=\016\216\032<\344\350\324\275Si\005\275~\315\035:\r\033\014:h\217\261:Fx\034;\337\227\252:m<(;r\202\246:\3403\362:\364H\317;i\244\030;\330\035\327:\301e\000;\003\'\362:\036i\227;\346l\311;\177,:=g%\266;x\271\276;\004\247\204=\367L\2178\340\027@<\317\373\213>6\033\026>RE\220=\326D\017>\023(\324=R\336\322=\'\024[>\305~0>\311\345\205>\223/$>\277\207\341=\000\033\264=\355\325\346=\267\236\3029Y\354\3469\227\231F:\204\266\r;\030\336*:\247\261\322:\241*+:\370\355\235:\213H!;Vk\324:\360wr:s\217\216:\267*\t:\000\000\360Bm\213\316=\326O4>\372}H@\362\267]>\225dC>\002\021V?\344\323F9fY\030>i\273\215\301\315\327\234?2\220\\?T\2316?B\002\212>~\301T>T\2772=n\033\"=\322\342H>`h\213=v\2462=*\351\016>p\262&>\205[\3239\311\025}:\177*\036;Z\277c:1v\037:\016\275\254:\253\324\361: \330]:o\314\005:\263,6:I\010=:\240\263\023:\347\240e:\244\324\217<\020\364(=V}\014>9\355=<\023\330\025<1\227K>\001\327\3008Tc\\=\313\001\035?=\r\010?\224\242\377>\027\344\320>\371\322\'>\371n3>\270x]>\032b!>\001\371,>`\231A>W\334,>\315\n7>BB\353=\'\315\3709J[\202:\252:\236:\322k\020:\202E\2179Z\277s:\016\306\371:\373\320\020:_0\2649m\216~9\345Y\3439G\375\3779\365\202\3609\000\000\360Bs\345\241=\246\300\201=\205\353O@A\t\'>).&>\326yE?\216_r9\254\214\372=\201\314\214\301\032\326\234?\346\260\031?\256\025\010?\247Gk=7\236S>\225@\217\275\"\337\013>\341\250\274=B|\024>\032B\342\274\250\302\243\274\005\273\276\275\262\266\363:\216h\004:6\250\255:_,\363:\327h\225:\0101\037;\2740\273:8\036t;\367\220\247:\305\241H;\270\025\034;\332\'L:\3264\366:W\335j<6\320\007<\266s\013=\307[L<\020\210\333;\001\244\030>\021\225\00095\377\362<\030o\354>1\347m>\360[\223>\317\005\207>\227\r\031>\363^;>r\331O>/c?>\2503F>U:(>\265h,>i\276->w|\367=\327\226\300:D\'\2209\033ua:-\353\271:\3035\200:\251\367/;0\255\271:\020\005\205;|\204\214:\024\333!;\351\274R;W+^:\220\373\204:\000\000\026C\221$\346<e~\202=\022rF@\226w\273=Z\236\010>\373\314L>{u\036:\260^\357<\233\216\221\301\231\r\024@V\337\006?\332}\010\274$\315\332=\351\016\261\274\253a\312=\362\231\331<j\333\264\276\356\335\333\275\n\251\246=\266\314Z=3$-=\205q\034;\254\022\266:k\246};\257\221\031;\"\204\224:\227\002\334:D\235\237:\221\305\346:\356|\004;%\277\332:\257}-;AH\253:\367i\002;2\355\243;\267\316{<\313:\260=!^\362;U6#<W\010{=\361\327U9\016T\t<\362\'\340>\036C^>\273\302]>\272\016+>A\307\326=\233D\362=]\373\036>\311KH>\3573\201>!\r\205>\304QO>l.0>\321\352<>\266\341a;s\006\225:n k;\345 \335:E\203\213:2<\262:,\227t:3j\002;\274W\021;i\315<;4\3665;y\301\256:\360\261\206:\000\000\360B\276e\177=@\275o=?~C@:\203N>M\251S> \350\345>\177U\'99\303\"=pr\226\301\242\324%@\233\033\246>\230\"\311>@KT\2755\322\005=K\272s\272J\321\274\272`\301~=\222\312\323;\032\306\266=au\316=\323d\244\273\314s\250:\315\374\3559\367\n\377;\253~\202;\223\230.;&p8:\0064\225:\326B\335:\212\227f:\351@X;\350\277U:\377,p:\023i\035;Y\241B<,\322y<\261&\327=\034\223\277<T\265c<\354\377\000>\342s\2178;-&=8U\232>U\353d>W\313\375=\276\205\032>rz\336=>r\274=}\336\335=\375\361\355=\004\277\214=\240K\241=\373\370\317=G\271\251=\303g\220=\0315X:\303\257\3039R\to;\231C!;\002p\304:\227\221\000:\203\214=:\330\364\203:e\032#:\'\336<;\214c\023:h\367\305:1$v:UU\005C\304\360?=\252\002\210=\022.R@\002\337\n>\234=!>\224\335\274>\212J\017:\217\302u=m>\217\301\247\005\000@\345\267E>\'$\226=\306\366\272=\034\315\253>\3514\223=8\331!=\323\346F>4\274\001:u\365\260=@\316,=-\313r\275\314\2339:m>\215:\321\215\256;\254U|:\361\214W:\020\365J:3|\007;!\317\215;\234]\200:\333\301\022;\344rO:V\322H:]R\026;Y\305(<E3\014<\361\r\260<\372:5<\277\231\'<C\027\334=y\276\2019.\004\271<g\313/?\253F\310>\206\376\267>\240\371L>\354\007\223>\205\017f>x\276\037>\330\371Y>\236M\'>A\312\037>\273\301#>\341M`>~\237)>\232nT:gw\231:\233a\275;-d\':\377\026\222:\203\361\010:\035u\322:\222<\231;\222\\\021:\212C\362:\204O\232:P8b:\351\021\277:UU\005C\027B\025=\227\326\334<i\356F@rV\253=\t\n\326=[8\200>)\246\331:\335\265k=*\205\241\301yQ\332?iW\231\276@\347\331\275_$\232\2763JZ\276\342U3\275\322H\002\2769E\037\276`\241\005\276\'zR\276\021\0139;\266\205\004?\"#\2739\010\336\2019\363\212\311:\312\013\005;<Ci:\244\020\250:\260_\2339W\215\262:\226+\3029\r?\3769\324F):\n\237\2169d\237\260:F\237:<\231\013\215<7\n.>\314UT<\273\202f<6~\r>\333\010\023:\276&\262<\340\302\225?\227\225+?R\323\221>\261]b>\213O\266>\'\026C>\271\230\240>E\023\246>\3725\274>\232\017\301>\334\272\301>\324\300\221>9\016\221>\207gV:\334)\3619\213\031@;\177\337\';\304\360\227:\026q\035;\204\257\3009\032\301s;\010]\021:K_c:F\002\224:\214\355\2249k\273\237:\000\000\226C\023\333\227=\3719\236=\372?P@@T\027>`\016%>\275D*?^\223F9\306\246\327=\313\250\205\3010f\262?\226N\024=7\203\006?G_\251=\216H<>*t\263\274b`\222=\217qx=\325\202\220>\374\037<\275\251\037<\275\306\200\036<\243\262\221:)\327\231:pd%;\310\r\242:<Y\023;\350\230\310:\"\370\376:\253\246=;ET\211:\0038\257:t\251\010;t%\341:\331\331\254:\225\266\003<\'r$<\'\360\355<\237\017Q<\025\252\032<\335\353\317=3#M8\313\316n<\357\311\244>O\271;>\352\266m>\351\034t>\245\256^>\260\217M>\303\031\t>j~I>Je\030>\223\335\027>&\366\355=\245\220\356=\262\244\265=ab\010:\263K\r:\"\231\322:6B5:\310\353\345:~\314\240:\252\024\266:Y\241\022;\273\342&:TF\210:\210\247\370:\004\2463:-\273\3769\000\000\360B\226\214\224=\311\227\226=\333\213F@\347\334->\220\2339>\237\211\350>\232I_9\3013\031=\332\233\224\301y\307\n@N&z?\037\375\364>\025\246\210\274\357\250_;\254\305\201>\0006\274>W\030\251=m;5\276\345\346|=\367\226\202>\252\034K=\006\302T:c\017\030:Z\013\243;Gv\013;\003o9;l\033\004;\260P\341:\207\345\252:\256\021\373:\374\017\240:\361\3257:\005\251V:\267!\311:\255\214l<;2\377;\013\207\301=\355\231\341;\020\023Q;OY\243=\375\t\2118\344E\265<`f\206>\202\\&>;\250\004>e<\351=W\343\303=r\344\344=\241\325\370=\360\017\366=(\036\351=N0\315=v\343\344=b\340\177=S\212I=xZ\3279\300\217\3209\210jN;i\374\244:\027\'\242:B\036\216:\370\315\213:\271\305i:\347+\245:\0364r:\371\325\005:\202\326.:\273\303;:UU\005C\336\322\247=\342\317\362=\210\317I@>|;>p\3745>?\251:?\341\320\3458Yo\371=\\{\211\301_\263\273?@\317\005?8\315\224>\360\022M>\207ZL>,\204\347=\232N\212=\201\273l>PYI>\022\373\234<w3\274=\224=c\275\200\360\024:\244\340\202:~\352\211;`\235\211:)K\371:\332\366>;`\203w;\234F\';\022j\215:f\305\017;\2310\221:\320\377\3579\377\241\t;\343\230l<U\266\255;\273\336g=a\327\201<\304\341\266;e\210\026>\357\006\3767\235\tG=\037\330\266>\004\356\375=\347\377z>\376\317\016>\307\0051>\210\312\303=\r\263#>\034x\032>^/\023>M\330\354=\335J\354=\272\367\331=\302\241\377=\323\361\2419\353\267\021:\022\243\023;\010\303\036:\260@9:\211\034\210;U\362P;$\260I;\270\010\013:e\2600;:\352\3729a\20259\354\001\210:\000\000\360B\207l\232=\200?\240=\311CO@\363\2254>\215\347\">t\330X?(\312l9\306\030\003>\377\223\222\301,\217L?\265\027\305>\230\326\203?5c\037?r\0160?\024\242C\276\247nU>\312\032\366\276\t57>%\200R<0\251\004=\326&b=i\346&:\027\321\2349\376\240\017:t\310\2609`(}:$a&:\032L\3419F$3:c}\3509tj\\:\352\237\315:\226\337>:<\351\3529\316?e<MG\212<\207H\r=\206\227!<\374\343*;\246+y>F\245\3258*\267e=P\256\376=F\216\207>\271\003\260=\351g\204=\304L\341=\375~\n>\"j\022>\227\271\014>HX/>,0u=\036\373a=\310\315\036=/lb=\355\277\2569]\373\3468\"y\2029^\357J9li\3009\2363`9\227\367\2349\212\333\2529`\267\2559\255\352\3059\231\347D:%\376\2549\"\235\'9\000\000pCU\014(=\306\364\213<e\366K@\036N\345=\244\207\024>\246\303\224>\210{\3569\035+L=\355\331\234\301\377\326\364?\253#\325=+\334\227> \257I>\233\347t>\312\212\363=B\221\316=\034d\307\275\037Dt\274\036\367\233\274 E\222\275}))\275_e\032;\265w#:\310\240*;\227c\217;\320f\337:\212\202\306:k{\246:2R\311:\017\351\217:F.\246:6\251\265:\315\241\275:/H\003;\267\205\021<\367W\304;\376\007\023>\321\246g<\307O4<L\266\302=\220\350s9\265yr<\0216{?\311pq>\260\014\026>\237:\322=y\375\372=\006\220\374=\342V\017>[a\371=\360\305\221=\244\277\333=\240\224\334=8\347\306=\3233\365=\235l\000;\255\345\3109\234\006!;\030\351\367;\377g\353:\313\000\226:%\362\200:<\357\033;\217\326\236:\341Mm:%C\340:\003Z\241:d\221\356:UU\005C\314P\233=\373\354\251<\261\003C@W\202+>*e=>\327\271\n?\304T\2509\237\330\240=zI\227\301\205\301\372?\204\260\215\276z )<!\3029\276\356\227t>=\230\002>\027\301\201<\031r\217\276\331\3603\276`\252\031\275\377Sm=\240\367\267=!u);Sz^;\001_\311:#V\223;nn\257:>\3078;P(A:\216F\3219g\251/:$\026y:\007\003\360:\277\031\213:[\203\364:J\251\022<n\"\327;\255@\357=\311\340\030<u\370\002<\337\274\362=\2438\3218\334<\235<R\001\002?\025\241\216>\027 \375=q\031\322=\317L\363=\031\016\036>\324q\016>\301\315<>\005\221\001>\302\016\022>\207\036\031>\327%\001>\234-\337=\255\353\323:\027\0007;DO\236:\306\233d;\020\336;:N(\354:(mk:\313D\3679\254\235Y:\273,;:md\316:5\352I:^\324D:UU\005C\273~L=\362\2509=\274NM@\267\260\r>\355\260#>\021\202\251>Be\033:s\244y=\323\225\225\301\311\205\377?\214\313\353\276\023{>>\'\233c>\003\323\014>\205\210\004>\002u\262<\005\223\205\276\3373$<\005\310U>\3415W>t\322\242=\357\255\021:e*\035:\261`\213:\\(E;\227\214\304:\344\274\026;\263\013I:\260\201\250:\313{~:\327\203\003:\324\2337:\2116V:e\354\326:3C\035<\216\257y<\016\235\265=T]\275<U\350\206<\002\334\021>\376\254\2039\'\306\265<9\211\005?h\001\315>VO\321>\021\200\221>\363?\265>\201\212\315>[\206\217>\375\033\233>\334\036\237>\225\220\242>Gwp>M\010x>\351\211\255>\221\273y:F\361\245:\367V\204:]\226\221;F\327\270:?\357\220;\\\034S:\245\3325;\351\223\230:E-\002:M\030\3779\327z\215:\234\004\277:\000\000HC\001\377;=z=\007=PvN@t\316\023>\024\2610>\321\n\334>)\250\031:)\222T=\273\201\237\301\357:\003@\361Kq?\222\354n\276$\277\377>&\224\006?#\2403>\226\031\304=|\311\261\275u\304\005\27616w\275\330(<>\207\2074>.\363#:o\366n9\020\303\241;oN1:h\250\217:\245\327\032:s\204*:%\264\030;\t\327\2549\203-/:\364Q :\304\tF:\314\337\354:Q\020 <\016j\313;\034\217\214=q\361\024<\345\276\332;(\235\357=C\230\2379\021\016\002=L\317\023?\037XX>\230_B>\255\355\022>\300Kr>\3512\213>\271!\220>3\276B>\352\007(>`\004\t>\r(a>zx4>;\321\334=\027\304Q:\200?\'9\274\213\223;\004`\3749\013,\000;\262\333\023:V\220*:ZV\';C\361V9\367\342K:\311\036\3649\256\375/:\250\362\202:\000\000pCf=\236=5\247\250<\363\260A@@\310\001>\313G\002>p\2636?\210E\3109\263\265\002>\230\200\232\3013\377\024?\373+\305\275\3033\032?\020\260\245\274% 0>\006\'\223\274\337x4<\352\010\\>}@\035>\010\217\241>\231\307\365<\377\334\207<\352\232\022:x\205\241:V\000{:,\206<:\032\301\246:\004\021\371:\363\023\020;\'\353\003:\206\234M:T\030\267:g\2277:\204K\244:\022-\253:\301Ou<\313\366K<\277\225\027>\032\310T<\330\016E<\344\345J>\356O\3628L\254\002=t\335\201?\351,\306>\200\341\307>\275Q\204>Y)3>\026\322\207>\347\000\202>2\354}>\236\023\257>u\'\222>\255\262\205>\034%u>\277\207a>`b[:e#\244:\313)\257:s\005\024:\344\253\\:\350%\017;\225\210\n;\322\244\027: -E:4\356\022;\002P\201:\314L(;\010\016W:\267m+C\301zJ=\032\340\024<F\354&@\370\217\252=\t\010\251={Z\320>\036W!:\344>\263=\324\253\251\301\256[\020?{\351;\277\337Z\243\275:($\277\002\027\007\277M\246\212\276rn\230\276&x\251\276\207fl\276\220\201D\276\323Op\275\272\325\327=mD\":k.\345:\376l\010;\307\213!;\313\374\211;\272\232Y:UG8:\026\'\225:\227\263\214:\340\205\335:\315T\207:/\027w:\007\333\377:\342[\002<c\221\036<\344\334\310>&\035<<\021\032?<\310H\211>\r_\1779\320\260\366<\324\360\347?\264\236>?C:\017?%v\307>\375\025\207>\346\274c>\264C[>\331\030\221>\357\347c>\213\343\227>\341\001\246>\351\300[>\027\307\203>\203\253T:x\233\005;x\312D;D\337*;\272f\027<\342va:G\326\211:\360J\222:\274\326\245:j&\315:^\264\211:\004\367\324:\307\324\";\000\000pC6\223\273=\321.\226<!\371J@r|\377=\241\031\345=\256\203n?\321*y9:C#>\375j\236\301\"\030\300=X\017\260?\327@\241?\037\306\216>r\035@>\304\024\362= \321\312=\312\325\210=\024\222\213=\365\'B>\266S\014\276w\307A\276\'\340F:Z\315\3639\356\311T;\016j\362:\317WA;\246T\031;\302^\373:\007\006\n;]\316\342:\250\364\235:~O\037:\202jM:\354\267\361:\373#A<\304\"`;\221\315\017>\363v\334;\364v\037<qI\n>>\362\r9\361\345A<\366;\315>\001c\343>I{\262>\352\333p>\341E6>\241\013\337=2\r\325=\262\013\267=\241\324\213=w$\300=O\353\341=_\007\275=b\024\003>\231\014\024:\214\021\2379\270\327[;\361\371\261:NY\212;\322Q%;*\014 ;\2027\374:\035\266\276:[}\303:\203~\3739\336\303;:\rG\233:\000\000HC\370C==Z\345\212=\005OH@\'\234\005>\367F\037>\007:\257>\306^\3019\265R4=\030\014\217\301\306\366\026@\250\356\021>\177$R\274\034\3302>\036\365\034\275\016x\255>5\331\020>w\207\030\276\243\272\215=\017c%\275\335\206w\275\265:{\275\317\266s;\3705\371:\000G\337:\373\037\213:\317,\345:\336u+;\027\001\013;Ax~;[.\351:N\013\251:j\030\322:\270:A;\204@\006;\201\356i<%\370e<^\342\034>\344w\244<\256\032.<F\354\006>\237A\0049\311\3372=A*\r?m\355i>\000\020\265>\373rJ>g*\210>\360K7>\3750m>\017\256\004>0uV>\024\022\000>(\246I>\3120\">\322\2663>/\3720;\212h\000;\025x\273:\332o):\313L\311:R_\321:|\326 ;\200\330\242;\276\306\004;\252\204=:\022\233\233:\375\351\';N\024\231:UU\005C\306\206\246=3]\237=mH=@\202\264Q>KrT>5C\022?}/v91\355\210=\333\273\217\301\305\203\360?*\357\321>C\246\001?\222*\227>.5\213>\215\363\010>\034\223\t=#\032r=/K\004<\360K\322\275\377+\001\276\366\312\"\276\215t\030;/e\275:\201Q$;\304\316\362:\273F\002;\247L\357:\004\253N;\215\r\352;\221\300D;\256\212\346:\261\247\255:\337wj:\201\247\025;}p\223<\247x\203<1\317\354=\025\327\222<\241\332\330;\221\\\031>\364\212-9\365k\036=jX\267>\252\237`>o\366\314>\010\344\035>\326(&>\337\202A>{\302I>|\261>>Z\000\004>&\252\002>\26222>Q4c>D\347->x\255\177;\327\001\333:$\022\333:\270|\226:\234u\367:\256\245\206:N\310\030;\0136^;~\240\004;\322\204\215:rjp:\242\000,:?j\203:\267m+C\274\372\221=\241]\312<#\343I@\004.->@\3256>\003\313\023?\271JO9\371\037\257=\267q\231\301_\020\352?mp\257>\364)>?^\236\246>\2336\024\275d\304`\275v\3248=\303\244\027>\t\354\223<\320\237$<\205h\210\275\250\021\000\276.\006t:A\317`:\216j\003;K@\026;T\342&;@\tO;\306\230\033;\201(\032;\230\320\016;\312\366\031;\306\202\350:)\315\362:>\341\265:\002\271j<\202\310\216;F\256\374=e\001&<\255\246\236;\363\3238>\376\217\2218\266t:=\266H\322>O\001\253>\344%\227>\211\251O>\023\216\353=ur5>x$\037>\376\030!>\213\032\014>8\3105>A\336\037>w\306\010>!C\341=h\247S:\366\366\3569&w\246:\032~\000;\034\006\322:\010\224\332:`\344\307:G\323\005;!\006\371:\247\325\r;\260\034^:\312\340\207:\337X\025:\000\000\226B\323\221V=\336\367\\=\355\367I@@\250\377=>;\025>\2140\326>O\224\3529z\247\234=G\031\216\301\247\206\324?]\362\342\275\277\203\333=\241t\374=\235\375\315=\215TQ\275\230\\\356=U\031\034\273s\350\212\275\351U\005>\301\r\347\274\215K8\275DT\030:i\233\014:}\273\242:\323\332\300:\005\350\207:8}\211:\311\211\301:_\233\322:\243\354\206:\177\344\267:1#`:~y\207:O6\204:\226\236\201<\246\006\223<\210\262\371=\333\326\302<\341\013y<=\261@>n\027V9\274\202\356<q\016Q?A(\330>\033\320Y>\200\'\205>\264\347[>$\252^>x\2148>\266\021Q>\302!q>\021\022F>\013\275)>\263\222j>U\250/>\302\367\020:-\335\013:A\365\224:\214o\034;\374\021\240:\025!v:\237\343\202:\265]\276:C$h:\326\212\277:\215\034b:\203s\257:\276\271-:\000\000\026C\345\373C=\251<c=?$M@\247n\017>\357=+>k\031\301>\t\327\3439\361\304x=L)\221\301\003\367\346?\3272\353>3\237\262>T\213\357<\262C\200>P\337\013> \001\336=\253\'N\276Q\273K=lrj;\016\347\227=\265\014v=\332\336\271:*\303\020:Bz\353:\243\322\004;\211\230l;\2142\020;\232\363\227:X\366\201:\225\253\034:\225\310l:\253\303\202:\260TM:*\037\274:\265\0321<N\340~<@ \246=\340\367\323<\200\032\242<\361\304\t>$Lk9\312m\303<\360\232%?\350\244\222>\320\302\232>\000\000\256>i\260s>\262^->\300S\203>|\244\036>\231\344~>\214\226\033>B \337=\"^\010>\317+\372=\000G\221:\'\236\013:\256\311\363:\002\272\303:\265\025\254;r4\364:\317\237N:\364\361,:3>#:\005\222-:/\3371:f\241\3329^\250\254:\267m+C\0264\203=u\307\316<ARO@Fu\031>$\234,>Z\235\n? %\2069y\026\265=\3411\225\301p\204\267?5\257\362=KT{>\273Y[\276\033\344,=z\325\200\274\007\266\362\275\304\341\303=5\304\026>\321@`\275\202n\017\276\336I\332\275\362\243\250:\310\020\227:%}\001:\031\316\254:\366\306Q;\304\005\243:\033z\371:\341\013\3559w\320\375:\237Q\';2\034\200:\354dN;p\207\316:\000\007_<\230\236\210;T\202\032=\247\021\207<:\324G<\362\344\024>?\272\2728Z\017\251<t\247\317>\326j\203>\333@\036>\315\367\">\342\350b>\312\301\203>Xv\200>U/\224>\256\\\210>]\215m>\272ZB>U\024\037>:\031\r>\347\305\262:(y\255:\271\010\2079w\266\342:\227g\375:\371\314\177:\211R\354:\342\246\2459\340\037\300:w\013\375:\323\205\t:\323\030L;\003;D:\000\000\360B\212\361<=\032\007H=\215\t=@\364\355\007>@\352\031>T\372\332>\333\244\232:EP\217=\303n\230\301%T\257?|\363\"=\370\010\211>\372\025\233=\236\370\">W\236;>+\210\367=\253zK\275\231\004\r\275\361[\214\275\207!H=t\233Z\274\307\336\022;\377\2210:8MS:m\035\300:\313W\014;\350\030k:\346\217\177:\246\241\253:\331\264\3069\305\376\023:\212\272\3339\207\021\261:\233W\301:\036\355\250<\271c\273<\312Y\217>g\243\345<22\255<\202\273\234>\2376\200:ehS=b\256\305?\3771\025?\271\005\356>\026\251\322>\005\353\220>\206Uh>OkS>\034\202\304>\305k\212>\301Q\252>\256\"\202>\031W\247>\362\257\267>\214\220\214;\006\226^:\010c\230:\035\315\r;\301\241?;\323\365\232:u}\312:\232\377\200;\007w\2459\002\275Q:\355\013\3719\035\377\377:\221\243\300:\212\235\270Bx\214p=\036\022\213=\235DB@6\375\001>f3\026>t`\346>\221\013\2249\213^\222=\216\315\212\301\'V\315?\030\374\242=\202\265X>;\357\264=\254p\226>\261*4>z\231\227<\337\366d\276k`\203\274\313\327S=t\204\360=\221\316\300=\033wh:cUo:\322;\324:\314\237t;\307,\020;\003\034\273:\207\264\357:\265]\222:\223\343\207:\003k\006;\307\304\017;\234XS:\301\t\326:w\314\200<\341\262\211<\355y\002?Q\024\224<\377\264V<\016\255\016>\005v\2668-\343\270<K\375\030?Z\203\220>\226i\321>\306U\206>\023k\225>\334\354\204>_\004Y>\241Q0>\022\035{>\210\277\\>,\325B>}V!>\215xt>\213\336\':*[H:\213\'\272:\334\201\207;\257D\377:\203\036\271:\236+\274:\347fG:`rv:\021P\351:\356\333\013;\376\2554:J=z:\000\000\026CZ\003p=@\2558=L\360P@.\t.>\247&H>z\200\005?\347\207\2179\274e\267=\347\224\223\301\317Q\303?\365N^?VF\305>VhM\276\201\266\355>\202\013\021\275\310\n\210>;\3243<h0\n>&$\334=\205\300<=x\203\347\275\343Z\004:\362\032\3709\255\200];4B\225;\246\2367;\350\334\222:\3552\212:\261\344\214:#\353\300:1\275\002;8\312\254:\310\230\003:\006\021\365:\010\227\t<\205\305\231;*zk=\214O\201<<\331\031<6\337\370=7`\2438<+\217<\252t\241>\3475o>-o9>\376\340\022>~\0074>\302\241$>\213\r3>g;;>\365\357+>[\275\357=\212!\r>\271\306\347=\261\311\330=\371`o9\370>d9D\247\201;\273\226\210;\206\334\327:{\343J:\352\363;:;\221c:,\212`:\374\346\304:\t,\010;\343U\2329\227\264\240:--\215B\266i\224=\251p\261<\255>P@-\207\020>\327/\r>\300WL?\312\201\3059f\226\004>\340B\235\301\365|\270?\2114L?\374v\322\275\253\030\230>H\243\233=\035\337\004=%\327\232>\331\034\324=#\325\227\274(\311\020\275\226]9>P\257b=\346\302\004:\365\212\t9\206o;;\332pp;\254\335\342:\274\014\306;D\371\261:\225F\257:\353c\242:\224%i:\365C\253:w\323\025:\236?\030;<\341\227<o\026g;\254_\031=nt\306<\242\320\221<\225\345r>\224\217&9\201r\032=\3202\260>b\312\302>q[\334>\273\266\035>\357\003\215>;9\201>)~b> \227t>\3012\256>&\327\207>\2474\266>\326\346r>\331\234(>\341*\":\343\211\2678/\366];\032i[;\366\334\352:\003\013\005<\365\243\260:f\204\277:4\265\345:\377\335~:\211\245\226:\037\236\':s\271\007;\000\000\360B\351\270\014=_\'\261<\372\206I@\3349\374=\'\245!>\342\007;>O\236\212:e[!=1\356\246\301)\243!@J\275\206>\351\251\260>n \"\274\243\364\262\275\354\354)\276\3148\240\276\010\024\031=\315\246:\276z\020\000\276\367{\272\272\025\017\214\276\032;S:Y/\245:\037\372\3539f\177P:\237\251\3449\275h\351:\243\321\250;\004\265\324:c\236\372;\271w\241;a\373\270:/F\023;\366\305k;e\236)<\224\334{<\351\272\376=It\321<\'\250\205<-C\344=\303K\3639\200?\253<\323\273\314?\277\034\341>\331\276\277>\272T\236>\210\343L>\276\237\213>jn\\>I}]>\355w\277>-A\245>)\364\242>G\351\255>f\016x>Y\014f:)[\367:5!\3719\327\265\267:\271\261\027:\336\003\215;\014t\377;\223M\275:\343X\021<\206\307\372;\237?\027;@q);\240\'L;UU\005C\304W\205=64 =\203HN@\253\210\327=\r\337\342=\347$(?f6|9\211\201\337=*1\214\301\263\217U?f\324<<a\313Y>\033/\226>\250\232\t?\322\201\n\274mB\020>\177>\232=\270\003\316<\277\261m\275\320\036\027=\245;G<\341\344M:\260\021a:\257\010\276;FB\201:j\227\177:}\222G;\317\242?;\255\250D;\275>\245:UH\r;>\2701:3\013{:Y-\026;\033\320\000<\273F\357;>\266\030=\305-\304;\334\260\035<\204\243\010>\236\032\1778\330BO<W\"\251>\253rI>.\206w>\210I\035>\372z\347=\335E\031>\323\003\361=\334\354*>\3339\036>:\3431>\366vT>\032\230+>~\251\t>\003Q$:\221\210\210:\213{\331; \355A:(\346*:\027Q\331:K\203\352:\212|G;\177\343\202:\364.9;?\002\3419f\317U:\246^\313:\000\000\026C\254\303J=E\004y=a\325K@\324\336\017>\360\316.>B\t\216>\013\331k:\250!n=\024a\225\3018\267\320?\237A\023\2772_\001>\257p\321\275\303ar\272d\211\003>j\363\036>\tZ\000\276\3172w<\244l\240\274\n\215/>mRk=\030\364\3009\035\322\2729\002F5:\367H\002:\252(\032:\017\036\2569o\034v:\221\336\':\250R8:\223\0248:)j\225:l]\373:\n_\204:uQ\210<fA\342<R\374\336=\242\225\274<M\254\030<\2555C>\240\022!:[\325\250<\022\025|?&\321\366>\273\212\001?`qO>[L\202>\304\\~>4\302\243>\352\276\204>\032\302\200>\267\336\211>J\355W>\366e\224>\262:\243>:S\014:r\334\2609#/s:TJ\017:\310\212\001:\201\353\3419\370\355\244:\332\365w:H\325I:\215\340H:5\202\003;\223\206\257;\'\273\272:\000\000\026CMe\r>\245\027\377<\023\354R@a\264W>R\"\'>\346\r\304?\266B\2768\014{\201>\354f\232\301\376&f>\257\343\260>\177\350y>\214\251\232;\3267\256\274\271n1>\210\346\230>\372\365\276=?\341\222\276\221R\262<\255$\252=C\226\033>\360\232\3779\207\235\':A\\\332:\225 \327:FT\222:H\025u:+\215=:+\330\032;\316\256\202;7\261\331:\010\210\314:k\225\222:\316\311\306:4\026\t=\242\302M;\001|\200<\243\273\007=\\\204\363;S\330\262>\r`\0108\307\266N=\277a\347?\017\377L?,3\314>\332\006\213>A\374\014?\362!Z>\227sq>\0358\316>\241\226\025>8\'q>^|\356>\006.C>b\373\253=\342\313\2409\322x\006:\021\324\271:h\243\344:z\241h:+\306A:#z\n:B\2553;%\271\264;\202\247\331:\320M\246:z\323\233:|v\252:UU\005CPj\346<\214\206,=\036vF@\211\315\307=\r\032\032>p\305\014>\340sc:|b\004=4\271\227\301\030\327&@05\366=oUo>\3664\206>\303\200H\274\212\377\222\275\311]u\275tK\224\275\357\356\233\275S\335u<te=>q\354\n\276X4\346:zI\035;w\224\353:\"\274\005;\277\352\373:\023\202\351:~\356/;\177F\216:yr\026;\000\220D:N\244\261:\221\326\037;\031\277\r;\273\340\374;\022MA<\212\222\367=\"^\211<\307\336c<V=\265=T\350\2529\225/\016<!\"/???\303>\231{\327>\260M\206>e\276:>\343v@>\305\346g>\253\211\230>\322\346s>\253\210\206><\374\241>\307*\224>$-u>\233\225\000;\365$\277;>~\001;UH\007;\223\035[;\341\366\n;+_Z;m\374\264:\313{\213;+\322=:c\311\303:\021\302%;u\027\347:UU\005C/\324\270=y\356I=u\\O@\326:*>cv >\261yz?\247NY9\302\211 >\3320\216\301\303\266J?\232\354r>\273M\253>7\023\231>k\235I>S\326\217<\276\331\271=\013r\236>\206C\007>\022\002\350\274\251>~=\331%\312=\370?\351:\356CU:\304=\016;\320\335*;0\274\313:\033\306\273:\n2\232:|\276\202:v\177!:(S\017;a@\236:\002b\005;\261\036\356:zMY<\333\250e<\035\321E=\025\332\207<\335\244L<\331BK>\317B\2338\276\343\333<C\300\273>\323\026}>\001\260\216>\351\255\223>a\350\203>h\023|>}\\e>N\366R>\374]{>\021a\216>.S>>\367\251l>}T\014>\014L%;\344c\246:t\017\367:\240\202g;\t\010\310:\030\367\013;\332\034k:\251\354\232:W\343!:\234\333^;c\241N:L\022E;\231\031\221:UU\005C\r\347\243=?\321\252=\357\0009@o\201)>\37436>0\250\"?\035BH9\256\357\320=\032\017\210\301\366\203\302?L\347\312=\377c\362>\210Q\206>q\242\261>3S0>\341\235F>\233)\327\275\324>2;nl\356\275V\226\374\274V\341\013=\014p\311:\n\304\303:kB};\03406;:M\026;$\022\251:oT\223:\360\007\273:\tP\263:\266\361\210:\323\251{:\r-\261:O\212\241:\\\031\253<\r\336\206<\364\330\354=\275\206\231<\260\007\360;:\010u>55\2308\267\237V=\355\027\230>\261\342Z>P\326;>\206\342\032>s\036:>CS\363=\317\235\r>\016m\000>\265\223\031>\363\256\007>\304\327 >1W\374=\014]\366=|g\231:\227\272\236:7=\006;rg\257:\022(\242:\350R2:\333V\035:\336\205S:\205\261\212:m\212\030:g\311\002:E\240\214:\327\\\3739\267m\253B\347\024\312=\217\320\322<\211\236I@\\\3740>\005V(>>Mt?\255[K9 \245/>\221\240\225\3018H\273?\2764\263>i\003\224>T\220\207>\r\253\206>R\000\260>\235d\311\275m\252\247\275v1K\275\334\345\'\276ywD<\353\273\362\275\326&\364:p\321;:\340\275^;!N\004;w/\327:\222\254\017;\270{\272:`K#;Zn\317:\004R\301:\035\366\000<\322\376q;\000\326>;\371>\300<\236\252\270;\367\203\255>C\365\272<\273nN<\324W~>\276\361\2458\\\tm=\277\253\257?\274\255l>\262\236\251>\271\245\206>\300\323q>\230\352>>l\252(>\370\347C>\235^\304=i\360\035>nt\376=KJ\016>\034\032\313=:g\336:\2676\013:B\332\213;#\\0;\003\261\245:\302\302\267:\266qv:\333\032\311:\360d\327:\222eV:\253>\003<\250\377F;\245\255\360:\000\000HC\273\321\256=\222\231D=%\363M@B\261\004>\355e\003>1nc?.\310T9\272\211\013>\370\254\213\301\347\3067?\253\247\265>\032\367\010?\263(\260>\262)\211>v\372\313=\001,`>G\312\000\276\241fJ=\240*\335\275_J\336\274M\372\323\275\331\374\302:\361ri:\252\250(;\221\036\326:\351\362\305:\204\266\016;DB ;\340\256\307:;L\014;\314\032|:\375\363\240;\352V\202;\233\324\t;\260\362\032<\335\267\226;\tYJ=\215\032\360;@\026\301;\036\326\341=\375\"\2038\345\334\207<\037\032\301>\356kk>=B\027>\253M\035>\3137\023>W\230,>\241\0161>\300/;>\303\270~>\021;U>\245QX>B\t\020>\244F\010>n\346\242:Ij9:\002\355*;>q\213:\221\323w:\341\304\270:\t%\324:\306c\200:t{\324:\204S):\204\370\234;\267\350\253;\352!\306:\267m+C\000\251\204=\341\366Z=_~R@\034\362\353=\305\341\373=O\377 ?\251$\\9\275\301\342=#\252\212\301!\304\242?\234\365\243>\306\212\300>{!\211>)=\225>&\201\020>q\320\303\275\315v\276\275\347kQ=&\235\004\276Tc\177\275\244%o\275\261u\233:\330\310\367:5\241T;\205\326\246:7\276\037;a_\221:\213T\031;F\207\213:\256\264,;9\032o;\366\243\017;(\tW;\242\300\000;\326\\\222;H\326\271;\216nT<\330Z\253;\306\017\365;\246O\217=\316\306U8\210Sg<\356\267\244>\177\202\326=\226\355\226>\275\303L>\361\321P>\345\251\372=\274\316\342=v \201>\346\335\371=\272\356n>\356*\277=\023\205\000>\023\261\224=\244\222<:b\246\301:p\223B;K|O:\220\261\336:\203o\r:+z\277:\366\333t:/M\210;+\346N;\235\r\322:\221\273?;x\032\220:\000\000pC \0025<\265\265\324<\227T!@[\371$=l\266\327=\231\213\t<:\035\372:jW\226;+Q\302\301Z\355\032@\276F\225=\215]\211?\255b3?-\245%?\331\034\226>\315\244\322>T\004\010>\377n\202=r\346.=\\\021\027>\"\275h=W\267U:\0022\2649\215;\272:\006\245\003;\317_\031:\306\336\235:2\242S:\226\341%:/\345\231;l&\252:\032\325\2679\177+\3429\221\225\305:M\246\233;\362\205\271<\323\007\315>\374/t<\215\027\337<\002\226\022<=\337~:\270t\363:a;\213?`\2017?YH\377>a\332\233>\355\356\317>\026\n%>\221\031G>\003\331\366=\207\204\305=\300SE>\307H%>\037\301\277=\370\273\343=\030Q\031;4>Z:XL\023;J\210\204;\251\347L:\344\246\227:\2231\351:%kU:W\005\022<\365\374P;w\235\3719\242\"\201:\256\323\036;\000\000\310C\347\'\221=\341\033\"=3\276K@\342:\033>\366\312\034>\331\\@?wG\013:s<\t>\245\362\226\301u\367\337?l\200\221>\232\220\214>\177\234S>\306\225\276=\337\331\031<.\3166\276\371dc=\265Hf=\027C\241=\271\021\236\275\236d\344<\033U`:=\241\264:\347\270\313:\231x\213;\311\367\024;\t\271.;\256\'\177:]p\010;\340\246\250;I\031\306:\332\272\025;\007\t\371:\360xJ;\207\355\340<\246\3568<\006\266\007>\004\254\005=\022\014\322<$\321\304>h\347\023:\232\\\211=:\032V?\007.\262>\220\223\214>\037\366\257>\344s\225>\027\303S>\270yY>\224\303j>\204\241\207>\330ma>\301\377V>OJi>\266\220E>d\215\210:\212!\n;\334^\354:\277z\220;\010\2326;\337\324\261;=\305\235:\215\315f;\317d\360;\350\270\345:\2771\210;\002\363\r;\272\373\005;UU\005CV&\177=*c\030>\322,O@~k(>\232\206=>:\033\350>\000\275\27198\000\215=\035R\206\301WN\313?f\003\254>vuE?\373?\213>+yH>,\244c=\251\256O=\366\326\300;*\2556=\227\320>\275\204\226\270=\332\207\331=xP\021:BY\3649\306\021g;oWB;\234\365\216;,\303\352:\310\260B;\273T\361:\270\\\016;h\021v:yEO:\010\231%:\213p#;\020\271\\<\353\337\005=@L\301=\017\253a<\031\017\350; \371\037>\017\232\3418\362\337\336<\323\312(?\205\263\335>m\340\262>\320th>\336\247+>\006\022\204>\263\3564>\323\210C>\242\004Y>\214\217\207>88S>\263\264R>0\002U>\363\317\021:s\374\3759\260\003\';\305K\';\006\305\374;\227\200\254:\002A\256;\205\036\025;\237T\037;37b:\2066W:K\300\014:A\302\004;UU\005C\022\335O=j\341\233=\376{N@\002\302\010>E\357\027>\367\347\373>\320\235\3709\273\213\231=s\016\222\301\006\362\235?\247\253\032?\220\220M?tK\321>\375CJ<\2571\316\275x\343\310\275\030O\306\275{\367\262>i\255\304>\214X\304>\323|\\\275\014\031I9\024\035\3639\200-\203;\263M\250:\355%@;\246\035\361:\007\307\323;\271c\315;7\302\313:\3001\230:\t\025\2559~W\037:I\013K;j\222\214<\214\335\227<\256\034b=o\020\245<\2534I<\275\251_>\216\277C9\262h\024=\217>\032?6<\266>=\376\005?\263\031^>\033\360\204>\275,m>\325\356x>y\234\220>\224.\210>\033\327\243>,[\322>\004\337\203>\223\305\233>\237Z\n9\307\213\021:$\252\210;8\332\213:L\200G;\306B\310:\\L\251;\363\234\302;W#\315:H\356\271:2\002\2279S/A:cF\312:UU\005C\372~\202=\216\230\302=\0019R@\032\234\026>\345\260->m\313\004?\266b}9i\360\250=5\347\205\301\025\262\366?\364\305K>PK\210>\010\265N>\335\nj>q\257\277=\311\366\340<\360\300\264<\\\022\325=%cO=j\017\255\272\325\250\032\274Zm\322:\271\352<:\036\224\270:\332\307\204;LE\230;\300%\360;\005VG;\256d\352:6\306\244;\274L}:(W#;\256\301\274:\002YU;\236\242\021<cNT<k\377\257<\020\230\021<\276\246\031<i\372\353=\216\017\2338d\034\314<7H\232>\214(u>\355#c>x\312)>\005\177E>\333*\036>\307S\t>\254\333\333=\320\2342>K^\371=\301\220\013>4F\365=\255=\355=2\371\234:\030\201\3149\203\306\263:PRk;0\004(;\035+J<z\3205;\216)\336:\374\262\314;/\320H:s0\020;\213\234\224:\373pU;UU\005C\306\207x=\275\235\276<1{K@\274\260+>\357\3733>\225&\005?\362\364\3049\354M\241=Z\004\237\301>\256\254?i\004\252>\313\275w>\353)\021\275\035\0212<\254\\E=\255\225\232\274\251lL>\363m\037;^\357c>[n\224>\244\036\251>\003gE:.v?:\366X\017;V\004(:\321\267\212:2Q=:xEl:s\3248:@/\2559\023.\220:\346+\3009\266\242\3319\250\256[:A\336\214<\313\370/;\261&\225=>v\230<\351\301\037<\007Y\034>\202q+9+\342\375<:eP?-r\244>,\313\032?\255L\317>\271&\204>\177\276\214>\t\372\212>\366\035\302>\267\343\254>hO\246>a\376\266>\232\377\277>\252x\217>_\316\014:\361\342f:\260\373\336:\324l\000:-M\035:\\\0376:\277\250]:\344\323\317:6]\2049]\332\020:\\\217\3559\240\344\026:\226i\3749\000\000\360B\315\307a=\231\017\305=\305\210S@\273R\373=_\246\r>$d\013?\037SQ9\330/\272=\366\313\206\301\007_\320?V\034\021?\te\311>\301\026!>\272\251\234>\347\020\007=\240\024\220>\300\207C=^\345w>^\334\203=n{\r\276\371\201\316:R\235\372:\273\032\366:\347;\375;\036\374\004;\327\0058;\245@Z;E\211#;5\246\020;\1771\353:U\354<;+\n\245:\2578\311:\016\'2;\214`\242;r4\363;\367\304\n<R\311\300;w\016\214;H\335\245=\000\247?8\020!~<4\335z>+\023->9\232\014>rx\321=V\217\376=G\305\342=[\r\341=\247\300\274=AK\302=\223\210\236=q^]=\010\307\324=Q\000s=\020\271\302:\337o%;0\270\343;\243\325\314:\362\341=;\310\313I;QB\006;\204\333\335:\035\307\214:\345\tO;\014\203r:;Yy:b\224\334:\000\000pC5\005\251<\265TN<ZA>@\331\250K=1\327\331=\363\270A<\342U\225;\306\324\354<\\K\276\301Mar@#Hh\277\3012\267<\344v\240\276W\215\276\275\214C\236\276:\030\025\276\334t\003\276\020})\276\253\217\225\2762\274\213\275\340\326v=n\024\":\027\"}9\265IE:\320\365\006:8;\33795\n\2039\376\203\2429\234\351\3639\026U\3579\370rF:CQg:\336\030\203:\213\2126:nS\265;\032)9<\317\323\267>\313\210m<\034\253\367<[\0378<h\033\034;R,\"<\252\001\003@\211d_?\305\315\347>\376\217\337>\275\375\005?\376\235n>\330\374\234>_\231\255>\201\t\240>\355R\245>\256N\246>M\005\261>\rH\206>L\310J:\013\343\2069\327\267|:\017\223\023:,k8:\002J\2119\005\264\2749\366\303\033:*NC:\256\324{:0/\275:2\233\312:\233\243\3659\000\000\226C0<\321=\227\2017=\213rK@D\3144>\275\3513>\226Am?\227&&9\322\352\016>\221O\216\301JU\214?\260\000\306>tq\022?+\322g>Y\277\231>\007$$>\340\351\004>\"tO\276|\233\351\274\313\354\031>\020R&>\024%\216\274\205\225\324:\352\335\010:\316\014_;*\227\351;\355\251%;\222q#;b1\r;\3066/;\367f\333:S4\275:\202l\325:~\274\034:;E*;\207\331\003<\005\343\\<\231\233\304=\253\0163<;\251@<l\342 >\335\341\0238\350,\305<\035\'-?\245\254\237> \335\231>\352\203*>Ck\035>03*>\366\235\374=\002\216\020>\273\360O>\302dD>\227\2512>\375\253\316=15\303=,\374\272:\245u\2359k9\232;\320\367\372; \217\326:zx\372:u\350\317:d8\275:\300\022\263:\342L\245:t<\335:Gn\034:\304L\376:\000\000\360B\257R\372<\025E==\212\263I@m\n\343=\346Z\026>N\033%>\271\256\010;\200\340\203<\354\206\242\301?\003\023@\376\234i?\'\360N>K\364\267>\017\207\201>[46\275\365\361\035\276\030|$\2761\301)>\320r6>\341M\345<\356\027\223\276\344C\016:\314\024\2069\225>\216:\202\327>:\211\264\371:M\227\373:k$\320;\240\231\312;\220\235<;[\231J;s7\311:\256D\332:[\002T;\214<\254;\221+\363;\217b{=\306\301k<\271\037W<Gj6=\030Ou:[e\342;\255o;?\252w\241>H\027k>,\204R>\260\377O>\220\345\031>\276\274Z>\301\036t>\177\202L>9\272\247>r\270\305>\2457\265>\005\377m>\344\320^:\312\257\002:\272\361\337:\332\341_:\034\271\213;\361n\373:\301\377\262;\327\224\301;\220\211.;\271\037?;L\325\003;\352$O;fM\306:\000\000HC\342`\005=\300\370\'=\202\231O@b~\006>s\0253>W#(>\332\232\240:\030]\351<\311}\233\301q\263\026@\366\372\262=\373P\036>\323\014\212\276l\\\253>Y_f\275\224\347\252=\266>\024\275I\374l\275^MH\2761\221[\275(w$\275\335hY;\230\n\021;\207\016\032;+\000\230:\010<\236:\306\023{;\234a\206:\003g\t:[q\3269z\231~:A\0105:\2262n:0z\021;\034\252L<\302\302;<\266`J=r\027\345<\324\250\204<RH\301=\255\302\177:*?\016<o7\216?\214\033\211>\221\257\252>\232\356H>k\336\200>\262iW>\371e,>\375\nJ>l\"\214>\213#\260>\017(\251>\335\355\206>\314\276m>\210\002\376;\037\264\032;\253\212\022;@U\224:,\373\267:hT:<\220\001i:W\341\3709H#\3309\301<\n;\276yR:\311Z\206:\014Tb;\000\000\026C\272\324\226=%\253\237=\320\022Q@G3\022>\260\264\036>\216i9?\267\336\2019\347p\347=\241\235\206\301\244\201\252?\212x\354=\254rD>\'k\220>f\r\036\275\002| <\026\3565=\177#;\276\255G\n\275\363\005O\276\221\2439\274.\254\323<!\252W;O\253\233:\013M\013;CTE;\013\035d:Kr\266:j\263::\267,M:A2\315:_\216\237:#7\001;\305\361\236:\005O\330:\252\303\001<\332\371\215<\243\310\356<\363\014\014<\010e\r<N\036\021>\232%\21780Q\246<Y\027\005?\010\367x>\010\372\271>!\371\'>\322.7>\210\014&>\367\232/>>\224\376=\313\326,>\\\315\023>\247\302\371=\307\376\332={m\000>/S\217;k\020^:\242\231\036;[%\007;\221g\037:\023\335\251:\370\235\3259\022\373\036:\324B^;x\350\234:\022i\365:\221a\214:\360\334\245:\000\000pC63\256=#(6=\342\215L@0\356!>\276L\037>c\373G?\232\225\2359\352\365\013>i\320\220\301Z\215\r?\235\t\010\277\371\275X\277ER\211\277\204FZ>\265/`\275h\247\254\276\266\013\215\276\227,\004\277\270\037\004\2776\351\016\277*M\216\276\017(^;\000\337\213;\202W\020;\32547;B\005\002;\351x-:qj\203:B\r\275:4uu:\312\202\226:^P\334:\372\360<;\346~\034;\246\245\342<\026\277\372;\240P\211=\321\027\000=3\372\243<\303\206\274>\303\317\0029\306f\217=\031\315\257>\355\200\323>T\322\005?\243np>r&\251>-\036\230>: N>{\362k>T\237\213>CE\202>\265sP>\321\302w>u\354\232>\252\257{;Ag\221;\311\207V;\203\215{;\340U\200;\266\256F:\333\307w:\241\236\235:4WS:\037\256\207:\214\211\337:\251cN;\272\214\313:\267m+C\333LT=\311\337\314<\347\214F@\022\367\240=%\203\236=\374\200\004?F\316\3579\347\356\332=\3076\224\301%J\232?\233\365\306<\272\220\003=u7\251\276\321)\226=\rV\253=\263!\276\275G\237\201\273\340\225\225\274\323\331\243=}\264\251=\3268\006>\240T\264:\247\024\324:\256\205\220:\000\017l:g\356R:E\304V:2\313\005:\216\017\006;\275/\374:H\244\2119\'k/:\253\260s:G\256\213:\235*n<m=j<\017\225\016>T\277\202<0\337e<\372\365\222>\304\037 9S\340\013=\331+D?\002\236\333>\247l\275>\224\365u>e4T>b\004<>\236(\022>u\251,>\326\242(>\001\313\r>7\010\000>\256\3717>K+\014>wr\200:\003\333\370:\262L@:5\0070:\273c\236:\305\262\200:MS\3059\267\027\264:\020\307\322:\222\337<9U\3140:\227\274H:\372]\3449\267m+C\3545[=B\272^=\210\353M@\260]\034>\255\314)>`v\353>\316\235\3239\353w\232=IZ\222\301\013\r\371?\360ZW>\207l\251>\253\367\033\275j\373\250=\177\235<>3L\023=\203\377\"\276\332aU\276\352\263\240\275&\217\266=T\024L\276\216rt:\207\036\332:\017\346\002;zL\305:`Zu;\214\243\036;\314\217\350:l?\000;w\021\242;V\000\215;\344\010G:\027\377R:\225\277;;\336\250\263<\233P\242<\310\333\311=\223<\337<_\223%<\035x\201>\034\316.9.\367V= \222(?\304\006\212>\244\276\331>&y\225>\210*\242>D\307\325>\207\371\253>\226\322\221>QYX>\237\317|>\275f\207>\274\001Y>\311\246\036>\006\372\235:\351OA;\\\3255;S\345\270:\0359\210;\355\002l;\360\330\363:\277D\017;\324\357\216;\204p\361;\336\233D:\026\312\223:\361?\371:\214.\332B%y\221=c\212\235=\317\346P@\222\271\347=\230\337\000>\036)8?\277\342\2769\343\t\363=z\005\211\301\343PG?YK\021?\234\025\212>\334#\262\273\013\205C>\237\025\034>\353\244\226\275\3721\341\275\215XD\274Q\342z=\001V\272<\264@\312<\355B\t:\"XH:\242 \324:a%\016;\356\023F:8.\027:\206Sb:\334\224\354:%\231\374:\231c\321:/\216\033:\213\2665:k\\\225:i\300m<P\366&<\020\340\206=\024\026\364;\002\\@<\376\330]>\371\305\3728~i\301<\242\261\t?\361\006\304>+=\226>\260\213C>\322\311\005>\337\317\016>\024\237Y>\034zv>Z\213f>X\276\212>\211\022\240>\246\023=>I\275+>\245\317\3059h\230t:7\345\022;\022\n\023;(\242\":?\257\023:\361\t.:\353T*;7\r\343:us\346:\234\262::\355\"@:Z/n:\000\000\360B\355z\254=\342\0101=2\321P@t\361!>/v\035><\tL?n\023=9\243~\017>\273\225\217\301#q\332?\276\256\010?;0\261>\362\337\254>\316O\344>TFU\275@Ps>\207P\371\275^7\032>\340\343\210;w\246\211\275\352\001k\275}\274\252:Q\222\200:\216\373\340;\272\2029;Q}q;\251\024\325:>\2120;\021\304w;st\023;\032\375\340;\341\340\007;\345w\317:\350}X;\202UX<?I\264;\301\271\360<\025\023M<\355z\020<n7!>\371\030k8\260\003\'=\014\001\213>\265h+>a\365\203>\346R\025>\377\210b>\367\036Z>\374q*>v\0311>\251g\034>\217:\003>(,\001>v\306\004>O\226\325=\"\307\216:\372\247l:<4\361;4)\372:wB\200;PY\244:\260|\027;\335\252=;\016|\002;W\223\373;\010d\333:\324*\325:/Q\021;\267m+C\331\253\304=M\023\036=\200&R@\204\260&>\263\234!>\000\250\204?x\217!9`H#>\376\346\215\301O>[?Vo\307>\037\370f>H\213\020>6I{>\'\232 \2752\214\356\274>\231\210=w\371Y>\300w\034<-\r\311\275\311R\364\275$\022\304:c\030w:\352\006\024;\036\025b:]8\220:\365<\250:\306\271\221:\375@\002;\\\346O:\324\2451;\027\032\205;f\224\005;\340m\340:\374\260\002<\024n\323;\344-\347<\214m\250;F\003\200;\207\216\351=]\306<8&\214R<\263r\304>\'BM>czc>\324\365/>N\004\371=\310F\264=W%\371=\261\206\n>BJ\032>\301U\n>\375\313\343=\225\244\035>H\266\307=w\377\230:\002m\030:\020\267\014;\030\335q:\373\212V:\333=\375:\326e8:\271\223\363:\037\377\030:\300\233\203;\213\377\222;\360.\360:x\354\263:\000\000\026C\324\257F=&O#=\322\024D@#\333\005>UG\'>\255\361\210>vd\2749\336\2264=P\327\231\301\333\226\354?\037\235v\276\345\210s>\005\276G=\363\234\267>\223I$>\021??>?f\243>\277D(>`L$\276\204\010 >\304M+>\\\330\000:{\212\201:\302K\256:\002\265\216:\026l\302:UaY:\033C\3079\256\223X:+\355\224:+\353M:\272\0178:\251\002\2339\261\261\212:\333\370\034<Lw\234<\377e\233=\033\243\205<\330ur<\017\306\274=\3255O9Y-\200<B7\221?h`\245>Q\376\307>\004\343\246>\022\234\264>\3648\214>e\023Z>\332\260v>\035\366n>9&\\>\330\210\210>\215\n\026>L\3254>\003\373\':U\353\327:^\345\201;h-\353:\204\361\352:\224,\235:\247\030\26799\335\344:=\004\235:\324,_:3\337\022:\305\214;9-\231\233:\214.\332B$\024\030=.i\372<GkG@G@\245=\341\356\333=\034\264\211>%\330\256:F\244\207=!\272\235\301o\\\345?\303\205\252=\212\255_>Uo\033\276\204&\361\275\237Q\201\276\343pS<\260\021\202\276\262<\000\276\374\374\374\275@\242\350\274\253\257\013\276\212\000\264:@\246r:D\272Z;){\202;\002\027\217:5\335\237:\221\312\251:\356\361\303:fA_:\rI\027;\267\000p;0V\003:?\301?;\236\347\357;\002S\317<D\245\231>?\006\r<\'\023c<\247\376\372=\353~\026:\3575\277<$T\252?\221\317\351>\210\214\036?\301\374\212>0\274\236>Z\304\261>\360h\254>\354v_>\267\300\235>\224\305\316>T\222\227>\232v\251>\273/\211>\014G_;\377d\364:\"]\266;\230\354r;g\017\357:\303/\024;\352\376#;\336\n\024;+\247\222:\260\327\272;kc\362;\"\265\030:\341\203\031;\000\000\026C\222\321\230=`\323t=\031\205N@\215\001=>\026\375<>q0)?\324\202\2229\302\223\333=\005\271\217\301:\317\327?}Tq>\347\242\313>\352\371z=\364De>7\237\001>,\027\276=L\004w>\300-a>\352\r\231<\223\306\201=y\325\313\274\373\312\277:\242>B:a\252\032;{S!;\332\223\270:it\225:Qg :+\263\010;\227@\3759\013\375A:l\302`:\275\256[:\257\201\266:$\216\213<\351t\r<\216\223t=\203\365\206<\004\213\357;\260\021(>,o\2478\250\263M=qo\333>V\306Q>8\246w>.\345\201>\225u\'>I&1>?g\333=s\263+>\032W\360=H{&>!\037T>\222\214[>\002\243!>k\036\274:\302\264q:s\221\r;j\341>;\226m\341:\200\266d:\022\032\002:?==;\002k\3429\350\235!:,/-:d7w:P\365l:\000\000HC\322\314\231=H\332\332=\257\022R@\017[\'>\344f2>pT-?\255\313\2009\014J\333=\237\"\206\301y\316\257?\301{\256>\257>\262>\324\306\230>\201\034W>\223\303\037<f\242%<\342\364\022\275u\345\271\274\367>\220\275\213\265x=pv\232\275\374n\n:\205\332+:N{\224;\337LM:\237RK;\224\002\267:\371B/;2\001\245;\303$\341:\323\277\217;\"wL:\027>\333:\317xU;\323Z\010<\255\366\377;\233\236\206<1\332w<\225mF<\361J\345=}b\2348\225nX<\230ZB>\336\0268>\276\355\215>;\360\367=\0261\372=\220\026%>\242Z\026>\353\033<>\216C3>\014\3639>\376[6>\236H=>}t\352=uK\3279\265J\024:\300\337\327;0\t\3329\346\351\334;\351\255Y:l\244\204;\206\207\031<6\241\204:\274\255\234;!\000C:1\256\343:\344\266=;\000\000\360B\321\\\255=}\233\257=?\366R@\233\236\">\032\230\036>W\377e?n<L9\2214&>\376m\213\301\2035\240?\226J\023?F\213\316>\250\324\373>F\247R>J\371L>l0s>\347a\035>\262\374#>\334\206\341\272j\237\202\275\243\272\275\274\371}\215:m\002\3349\217\033\274;\343\254\r<\275\177\035;9\032\332:\266\303o;\025\372\203;;\326*;D\3629:<\024\264:\316\177,:\rI\213;\372 \007<\220\312\360;\273hG<V+\235;-S\277;\337\361\310=\376\375i8\010Ie<\212\254l>c\357>>N\331\362=\350\344*>\213\025\003>;q\332=N\216\370=\3660\253=\234O\366=\216\177\360=h\314\311=\324<\274=+\001\254=\250w\346:\326\365\2339\304\303\251;\353\002/<V@4;\372W\317:\257\301\257;\200\204\254;\254\024\254;\213IC:\237\016\373:*\000\025:\374\346%;\000\000HC\243\035\226<s\274\302<\305oK@\217\333H=\313X\320=\010]\214<\206N\n;\331:\000=+\356\251\301 \340W@U\036\204\276\342\217p?0\"\'>a\356\006>f\3265\275*,\001=giN\275w%\271\276<\344F\276]\350\241\275<\264\365\275t\350E:\326\246\357:u\375\227;\306\212\257;\036\346_;\235s\262:\205\375V<\007\010\233:\\\351X;\331\325\226:\022C\367:Z#\002=\267\0262<w_\306;\215,D<@m\317=\306\267\024<\227-\275<O\264y<\302\334e:\266oS<\217\001\246?\227.\032?e`\340>\373!\310>\217XV>}7s>Uhe>u\006\214>\022&C>~\205m>\244]\221> \001\223>\014\374q>G\202::C\017(;\330\354\220;YE3<\314|\220;\023\327\252:$\326L<\214\271\212:\"\267\201;f\313\360:\024N\000;\207\234\016=\200\373\013<\000\000HC\235W\246=\241[\260<\325\002J@\262V/>\276\3124>\255\260C?\256\357I9,\004\006>\032&\226\301Hn\311?\016<?>\237>1>\372\225m>W\277\034>T\021\365;\037p|\274\327\007#=\346^\020=B?\271<\221{\332<\0221\220<\335\023\313:\222W$;\315\2146;`\314V;\236}\333:\255{\353:n!\376:\325\226\313:i\025\030;\2011\257:\250\352\335:H9Y:Io\321::\304@<\351\014\276;l\255\352=\217\215o<\020\351\013<\247\353\031>}Xs8/V*=\370^\t?\t-\237>\273o\236>\346\235.>>\035*>\373\246\007>\246@:>rv\026>S#[>\256\350,>Yd\026>\037*B>\004V\022>x\304\244:B\304D;M\302\337:~\203\000;Z}\276:>{\361:\241\376\310:\257\240\242:\237`\";&\031\216:\\\036\272:f\006\':\304\004O:\214.\332B\304\216\257=\242Ur<\025\221G@\205B\033>\357\306\024>E\027w?\314\332+9p\230)>g\260\227\301\252g\254?Q\006\236>?\034\'>\204\373B>J\266V>`B\202<\234\206\020\274\243\331\036\274n\305G=|\'\235=\305\224\t=\236\350.\275\270G\373:\013w\032:$j1<\347\347\014;\'%\206;\340z\r<\216p0;E8\345;\231I\363:\032`\305;\036q1;\007\230Z:Y\034\226;En\264<\360\210\206;\325\235\016>{t\303<\343fL<\317\337\242>3\201\2628t\201V=,A\035?|yF>\252j~>7\255+>\001\361\327=\217\333\340=\241}\n>0\376\\>bD\027>\271L\032>\"\024\030>\0109\344=tR\307=`>\251:\246\317\2659!\255\002<(S\350:n?H;\376J\273;\330\217\025;\020$\310;[d\327:\362\237\307;\323(3;-\267\3569\317|\377:\000\000HC\306\225\236=\3213\013=\362\036Q@\206\377\025>\261\305\031>\370,@?\302\013w9\013}\t>l\301\223\301\223s\344?{+\260>T\n\375\275\3222\220>(v\261=\327-x>\007\226\220\274u\250^:l(\373\275f\0076\276\211#\205=\357+\312=`2\230:\330\250\004:a\270t;sf\245:\257f\363:\356\031\227:\223\243W:\362\220\333:\250\021\224:\365u\323:Fw\251:\233rH:=\032\254:}n\032<\307SP;\214o\335<\370\0338<\327K\364;\217M\364=n\216w8\225\257\316<H\233\243>\311C*>\275\221\215>51\022>\335\326+>\235K\324=\2569\000>\337\335\t>\340\010+>r\376\032>f\355\t>\247\373$>\252( >u\\`:J\036\2509$q);\213\336\226:\021\302\335:\316\004\3519\373\354\007:\347U\310:[\032p:\260]\247:\253\330\254:\342\345\027:\210\262\031:\000\000\026C\352\350\223=*\303\271=\325\274J@dN\">|j/>\251Z\034?L\301@9g\"\317=\035:\207\301\336\301\302?eq\242>C\252\346>\326\235\245=\370\230\213>KO\267=*3\215<\333\260\214=3\244\360=0\371\340=\331\217r\273\316\342^\274\242\275\014:5\207::\315t\035;\356mX;&p\r;R\205\001;\342\010\265;Sp\230;\321\375\267:\352\271\237:\253\340,;\271o@:\206:\017;\024\377\211<\322YN<\323^\215=\361\373\302<\tIc<\246\230.>\342\270]8\351F\037=\212\220\332>]\017\200>\000\215\213>>G9>E\322\275=\356\300\n>\332A\256=2*\211=DW\271=\304\211\320=\031o\333=*G\236=\002n\277=\313\026\2009\227j\016:\263\276\271:\241L*;\271g\301:\315h\220:Y\360\211;\250~g;\215.\203:\027A\210:R;\032;\207,\3759H\335\214:\000\000\360B\033Iq=r\242\321<\0143M@\300\227\371=\215\316\022>u\277\346>\247\226\2309\243m\252=e\014\223\301\317\312\244?\354\035\213\274\332\030\353>\364\256\206\275g\002Z\274B\323O\276p\300\234=-\275\010\274\030\340\276>\221\322^=\242\375\202=Z\374\212=\314Z\227:\375PM;\325vl;\366\017?<Ha\204:X\032\200:\021\323\277:]\3173;!\224k<\010\374\212:\201\206\236;\365\335n:\204\352\306;l\223n<5s\004<xFR=e1\335<\327y\273<\210\032\013>\251:09\370\263\214<@tH?.7n>\233\260\321>\257X0>\035e\">\316N$>\t\355I>\251\225\033>Id\371=\2252;>\274\2108>\234v\216=\263\302\007>r\243\213:{\032\226;\363\372\263;\3368\020<\335<?:\241\212\236:\2535\263:\344\301f;S\0047<\227(\201:b\207\274;\365H<:\354E\036;\000\000\026C$\303\270=\010;\361=\346\313L@|j8>Ei:>\311mB?.\024\\9I$\021>\0106\204\301\233\n\310?E%K=\331:>>W\224\353=\267\310\334>[\024\032>\010W\322\274\341\027J\275\232N\253=\001\216\023>\321\372\317=\203v\261=\241\014\245:\264\010\206:\335\376f;M(\030;\203Xg;\033\361H;\332a\215:\205d\250:\255\217\267:\342\304\232:\271au:\253\217a:\r\002\327:e\365\322<\244[\006=<\005e=\326\300\362<\306\350N<\037\245\203>\354\241\0109c\223\234=\311\347!?}\235\226>\035D\215>\3615w>\214\370:>es\220>Ah\204>\377\024\\>\304\273C>\315KB>_\275$>\006^\034>\227L\373=\361a\234:\202\007*:Y\235S;\314\362\010;\267Aj;\201\2423;#F*:\271\242{:\226\306\212:\237\303H:\232\230R:=g\032:&\"\211:\000\000HC\006\203y=\345\354\364<\306\275P@\003o\327=a\210\331=\237\324\'?\000\'\2159\374h\354=i\020\221\301\204\223\234?w\3069?\321\236e>\352\305S<\314h\321>\016\263\034=\302Y\000= \003\003\276\360\240 <7i\320=O\316\021=.yz\276\3535\270:+W\247:g\303];I\323\276:}Q\327:\203i\275:\261=\016;E\313\353;\021Uh;\023\360(;n\024x:\231a\256:\'\3757;Ag\000<\253f\212;mQ\372<\t$7<L\312@<\003\350\314=\204R\2658\006F><\355\232\235>\255\222\201>\253!V>\251\177&>\301{\233=\212\033\001>\312\325\326=M\301\361=*\376\272=3\276\365=j\242\307=\'\264\215=\211\337\000>xQ\307:\010\007\241:0\376+;[T\201:\244#\330:,\210\211:\311\t\315:ow3<DD\212;4{\322:\275\245\022:T\260\211:\250?1;\267m+C\374\317\316=\213\262\300<1\212F@.\222\'>nO\027>\275\221\212?\217\350{9z\177->K\r\227\301&\246*?p_\274=nl\212>x\333N>#\365\350<\tH\201=q\277=\274\340\342\275\274s\001\323=\025\260\037>\307\266\257\27594\366\275\035\1770:\243^\026;W2_:\'\t\246:\017\224\241:!C5:\201n ;\363\335\241:\253x/;\031\345\354:km[:\347\217\302:c7\351:\003\227\206<\'+\027<\253|\003>\270\370<<\220z6<\357v\217>\252\361\0349\362\025!=\033O\016?\003\363\t?:\223\265>\"A\304>\244\322a>H\320j> w\223>\374(\214>\327\032\244>w\256\254>N\222u>\271v\200>#\2228>\017\030\3459d\022\271;\343\316\233:)p\002;\201S\220:\232\324%:\025U@;Y\207\302:\250\\\317;Z\272@;\250O\006:\213\346\220:GZ\016;UU\005C\247\317\241=\270\327\237=\320;P@s\344\037>I\010#>\357\247P?\\~o9n\222\002>A^\211\301\r\277\237?\\\223 ?H\237\223>\377q\231>\207\246\363>`\307\263<\025\031\033\275@\023\341\275\234\222S\274\334\363E\2761\252+>|\346a\276\307\351\316:-\374H:$\035\336:\356\326\025;\245\360\376:/\261\001;\371\r\200::vc;&\016\002;F/\347:!\312\214;\335\342\263:H\331\007;\212\341\232<\200\032b<8\216\223=\247\367\216<@\206:<K\236U>H\020\0059W?\r=\257\3374?9\341U>\370;u>\303\357\336=\353\270V>\223\357\372=\364\\:>_\313\365=\203&E>\352M\034>\2665(>2e\013>\001\330\372=X\344\353:p\366\025:\371P\212:[\261\366:\343R\014;\2701\014;\024\342>:>\266\242;\034\240\343:a\303\372:\333\230\241;\321P\207:\201\373\300:\267m+C\031~b=\237\206\241<\237\211>@\345\265\311=\332\276\340=\3021\366>\305w\006:\340\226\270=dA\232\301P\335\246?\311\260\336\275\216\231s=\361\360L\274qY|>\265\257\372<\"\037e=~\376\327\274\261$\036>>\335\036>\272\223M\275b=\220\274G\275;:\206\242A:\237\353\224:\177\216\321:8\352\346:z\217\025;\350;\302:z\n\310:~\253A;\220U\254:N[H:\367\251^:U,\277:\231r\201<\317\214\005<K\246E>-I\305<Q$\242<6\020\200>\223\231u9j{\r=O\332-?\246*9?\002@\370>C=\302>{\322\232>\260\325\357>\322\240\255>\007M\217>\304\215`>\360\310\323>\221D\252>\036\n\220>D3a>\300\256G:_\0039:3\325_:N]\346:`\002\271:s8\001;\211\017\n;\225\343\265:*\366e;3H\270:\337\247y:\361\036K:\007.]:\000\000HC\313\323\203=\366\006\207=x{L@\311b\037>\325\0200>\231y\r?\240\245\3409xW\271=\215\373\215\301\243A\315?>\210\227>WCI>)\233\314=C<x>nY}<\232\016\203<\264\220\372\275:.\310=\240\355\326\275=\300k\275\361\364\r\276S\026&:\025\002n:\033\214w:\344=\270:E<\200:x\340\241:`\331\000;\317W2;\237Lp;\2151\263:\202\206\371:8G\247:\312\223\316:\223\321\250<\014\337c<\307A\316=h\272\372<\347\377i<|@}>\275\276\2319\367\345\014=\230\2621?\373\264\262>\273\313\332>\005v`>)\214j>O\242Y>\223Z\247>O\252\224>\320\347`>\2566\236>\250\"o>%\312\242>w\304a>\275\0315:L:y:RoB:\007z\203:],6:\000\022\216:\320&\317:\275\031\t;\354hS;\243\343\340:\226\230\205;$\002\256:\364\275\223:\000\000\026C\"(0=\377zZ=B\004F@Q\233\231=\205\203\302=9\362n>\307\226\333:\\\257\202=t\313\233\301B\371\244?\340\366b\276p\201\325\275\373ls\276P8\317>\013)\227>\013\277<\275\313c\'\277\177\207\020\276\030R&>1\372\255=\335\254\206=k\001E:>E\214:m\r\220;Sw\315:\323\315\314:\226\263\007;H*\220;yYf;\\\006\3359)\250\1779+\204(:\314\001\2039\177\013j;\301\026\213<^\376\007=/Q_>{\260\035<V\232s<\344\214l>\353E\223:\271I\005=#\310\230?\201\330R?\324<\365>\201@\261>\325\241\343>\217\025\014?h\207\252>\026\267\026?\271\220\230>\355\324\333>`\272\365>\023\204\320>\320\367\204>~\207\227:}\036\026; \t\000<.{!;\260mA;y\263>;\0059E<\335\014\"<\344\226\235:Hf\2219R^]:\324x\2579X\236\200;\267m+Cg\252W=\367~D=\315(Q@Af#>3s9>\327/\325>]\334\000:7\014S=\243\220\227\301\033\371\347?.\2623?xk\030>\\\226\335=\340\014F=fE\246\275)\314y>+\341?>d\274\241>N\365$=\233\325\277\275\202u\251\275\342\203\035:\364M\2369\261\361\265:1\232i;\031y\033:y2\375:\305\226*:\271\221\302:\330K\346:-%\\;>\206\023<\317\360\3659AIW;\rq\027<\336\013\013<MZ<=\326\371\244<L\210U<\221\026\351=DN\2069=\231\366<\205d\332>\036:\204>\345A\337>\341\220\251>1\245\'>k\314\226>\371\357k>3\200i>(\270e>\274L\271>\205\013%>\013\235\'>\252\257[>s\320&:\230\026\2039\301L\323:\027\035\211;\243\367\2739\3079\335:\014\205\3529V\215\252:\300\033\346:f\322~;\317\236\203<\252\036\2649\374\210\212;\000\000pCh\001?=f\323\224= \212Q@\215\313\343=\207\330\010>\032)\323>K?\000:\253\324\247=a\333\214\301\321\206\307?\272\3755?H\326\277>\241\353\355\275\351[\251>\215-\316\275\037x#\275M\366\372=\213\352O>([2\275\022k\033\276\320\253\233\275\370\253\352:1\225&:\353\262;;\377\202\311:\304\277\210:y\323\263:\3731M:(\230B;\020\221V:\350\314\307:\311`\226:\350\001\353:\331\013\307:\304\330\326;*\265t<\366U\013=\275\031y<m\361C<\263\205\225=\220|\2209\222\350\016<\265\303\353>\335\341]>y\037_>V\000\364=\221\206\013>\210\371\330=\340\002\020>\347j5>w\267+>\330\356\201>\003a\027>\322\361;>+\343,>\033\006\224:<\325\3349363;\027t\027;\207\365\245:\312\271\222:\177\261H:\\\300};7Q/:n*\216:\275\033k:\311\225\232:\262\373p:\000\000\360B\277V\034=?\331\303<>\377A@\333\255\034>\tV@>\317]\201>\324\252\3679\347#\031=\323\376\235\301\246\2764@,\261\372\275\202Q\260<\333eh=\350}\202\274\324\272\223\275Ym\202>\333\272\300>\232gQ>q\225\246==?\334\273L\243}>IP.;h\235\3019\210u\211;\322\212P;p\256\013:\310\215\3579>Q3;;\270\021;\214\360\321:\364\320\031;\"\246\272:\335\333\266:\225m\013;\324\276\017<\336\341\330;?m\026>P*\217<-\013\001<7\365\342=\nP.9\267lA<e\306\277>e\337\211>\221n}>2\035e>{g\024>k\367_>\265\372\366=\364=B>I\311Z>}\326j>\314\332[>\005\274\354=\303\017C>\205\220\235;\222I\2569\237Ba;\220+=;\360\020\2539\317&`9\t\027\023;\340+\022;\375\212\001;\006\264\007;]\005\240:\254q\224:Y@\235:UU\005C3i\272=\227L\303<\363_-@\204N\027>\031#$>\322>\013?\214\002\2269\216O\277=\254t\232\301&\253\267?<\025\204\276\370\260\235>n\347\356=\255\357\305>\036\256\205>l~\207>\205\365\232=\031\027\246;\340\361\252<~\304&=\r\241\273;\'\327^:eD\207:m\223\006;\366\234\003;\337\351\315:EM\320:9\306\337:=\342\222:\322\320Z:m\301\213:H\360T:\210)-:\371.y:\262\313f=\275\224%<\347\353\000?|4\321<\026\013\206<\255\211\267>\2736?9_\357\246=\030\236\262?\003,\036?\273\3243?W]\316>r0X>\372\356v>\311:X>&\3331>P-\023>/\2521>\321\251(>\324B\030>\246\020\016>y\372\022:\233L%:\367J\250:\261\202\346:\003\344\252:\321-\220:?\346\245:E\246\023:=\225\013:&\315]:2?\000:\275Q\2649u\004\3449\000\000HC\256\2300=\001;2<\307P0@\326e\267=v\355\352=a\237\">\312\232\305:\243Ot=\251\020\257\301\2169\352?@\001b\277\211h\037\275\377\344\301\276K\302\001\277g\027\"\2762\325/\275\024\207\306>\346\370\213\275P\224\216=8\003\'>\205@X\276,;];,p\":\274\030>:\0003?:a\355D:\206^5: \243\010:\223\253 :}\226\016:\343z\025;V\362\305:~\335E;\r\240\376:\360\206=<\261\343\017<\t<\322>C\246\252<\323\247\235<\236d\t>5\375]:D\201\256<\242i\311?F\371\005?\033|\025?\344\266\341>\206i\221>j\237\316>k\223\237>Y\344\353>\366\261\232>KD\260>\365\330\255>\020E\240>\317\257`>\367y0;\322\253\322:\376\017\222:S=\251:X]m:\370\362\202:i\333[:)\224U:\n\003\211:u\372\205;<0\002;\353$\317;\251\313\340:\000\000pC\211\340\367=\226[x==\214Q@\370BQ>\251\3047>~a\261?UO\3428u\261M>\221\223\216\301r\204b?y\350\204?\3105~>\225\241\247>\344\373|>\036c\234=\267N\203\274J\211\221=\274\357\020>\274]\021\275\314\320\006\275,\'\235\274\251\005\217:\354L\004:\221\343D;\226\3549:\352\267\014:\035L\r;\246\362.:\260\263\213;h\002&:t\252C;q\343}:\312\001\r:\316&\355:\313\301D<G\254\031<\370\307\231<\357\026I<5\273\t<\010a\001>\342\035\3327\251\244\237<|\232\200>(\3070>\330\271L>=\257\311=\234\247\310=\252\024\231=\037\024\265=\232\220\020>\3074\374=\000\177\343=\327\'\271=\371[\310=A\016\205=\201j\201:e\341\035:\245\273\371:Nu\3329\370\361\2259\213\240\000;i\360\3669\326jm;\326\272\014:s\342\203;\031\234I:\261M\2619\275\267\223:\000\000pC\256\254\311=\376uG=\021/P@\350\245J>X\373<>apv?[\n\2578\360\346A>\354J\217\301\217$\221?\255\r\217\275g=\357>\255\2070>\264W\221>\263\365F>\3266\201>\353\230\323=\273-\361=O\013\344=Z\342\356=\227Xl=\224\274\033:\320h\035:\001\333\005<\023J_;vd\214:\225?\374:cV\030;lf}:\365l8:\232\363c:nQ(:\016\"\211:\215\307\033;]\030\335<\035\306\244<c\235\202=\333\224\302<\317\203J<\321x\236>\254)\3247@\006\257=\037\274\304>\3673\224>&\036M>\241](>\266\202\360=\037\357\274=\352\327\331=\300\231\351=\360\370\251=\343\033\223=\367\254\233=\264\277\202=\212\311X=\323\033\2319\255N\010:\001\370\376;\217D\005;FE\022:D\267\212:\026\032\233:\353\177S:R\237\n:\021\205\007:\347>\2469\323\346R:\340\307\000;\000\000\026C-\'\232=\353\201\307<\367\213P@H\214\025>g\245!>\275\0137?\255\030H9\356\304\357=\365\020\222\301B<\211?b\352\213=\336\272\004?M\210\026?-\022\331\275\304\035\000=\253\324x>\236\276n=\346?(=I\265\232\275K\336\"\276\342\026\027\276}\304\004;\303\002c:u\265\224<\003\022\031;\325\323\016;\333\252\";\014Q\";\323\016\031<\236V\003;N\245\003;T\241\016;\035Y\320:\305\223\276;o\3241<-Cy;b\231\030=\350\210u<\"\305><%\013\013>/\304s8\363k\217<b\265\211>o\214\213>/\241F>d\007\204>T\274\\>[\0172>\233\235\'>b>Y>dw6>@\211\037>{\323.>1\003\363=\307\010\306=\013\024\';cY@:\273\320\230<Z4\017;Ck\017;V\010\014;k\231\330:\177=\003<\226\220\351:~\013\353:\317\005\362:\342P\264:j\230\233;\000\000\360B\316-\213=}[;=\332!E@\352\203#><\034->5*\035?\226/\2509w\306\317=\027n\220\301m\264\270?\275\313w>\007\r\277>8j\335=\002\346\255>\325\245\243\274j\"\362=\030\3655\275k9\006>F\302\366=\237mS>\271s\256;GZ\225:\276\024v:\374+<;\332A\252:/~\005;\310[k:\242\003\022;`9\203:\n$\':O\377x:\211|\033:O\004\267:\275\022\257:\241\233\271<\231AY<\227\313\t>:M\344<]\214\205<\337!j>1\204\0309\370\033}=\002m7?Cw\333>\236\233\307>\234\353C>\216nY>a\0057>\353\0272>\025!C>\356\371U>\330\340\">\273Qs>\364\022W>\235\240\'>\r3c:\365\002\':\217\237@;\316\273`:I\3750;\201\352U:\013\277\006;\241Cn:u\344\3709&\302\023:f\356\2339\0231\266:\274\003P:\267m+C\256v\273=4\266\234<\\LQ@\243J\033>\027\003\035>\"\346~?:\372C9l\255\036>u\330\225\301\206\317\213?\332\271\006?\353`\336=/\003S>4\346\323>\026\032\231\274F\306(=\037z#>\327qH>U/\226\274\006N`\275\231\r\367\274 H\234:\307%9:\343\212\323;\246\377\201;A\325\256:|\232\342:\351_\r;\362\261\236;\031\020j:\361\344\001;d\230&;h=\340:\36650;\035\226\022<\214\3379;\023<\260<\313e\350;\031\375\023<\316^\010>\234\312\2338\335\2449<1\022\236>\350\026V><\336<>s\244#>\213t8>\377\243g>\220\2244>\306\233\'>\371\017=>\210\263\031>\376\311V>S\002\036>\216%\361=_;W:r\361\t:\337\205\266;\006B\302;\257\202\204:\027t\243:\031\325\003;\220\244\234;*\343M:\023\217\343:\220W\030;\n\272\272:\344D\361:\267m+C\343J\240=\265\246\231=>|O@G\343\030>\371v\">\343\311>?s9I9\016\242\356=B}\206\301\224\230}?\327\023 >\260c\373>\036-\200>SN\224>>\354\215\274\343\274\245\274\307aK\275d\216\357=\221C\273\275\262\312\207=v+\033=\336\023\200:Zv\022:.\352\365:\221\263\210:\226k\241:z\226\303:`6R:\035[\242:\362\203_:\361\365\204:k\200I;\2113\237:\253;\205:\217\2500<\3655\007<\233\375\360<\270\371\177<\245.7<\355\r\020>\203\355U8\356V\212<\256-i>\030R\025>Itp>MG\027>K\324\010>\013\356\361=\342\237\333=\006[\354=f\351\031>\347i#>0\020\026>\3050&>?\245V>\033\033k:\276q\3249\264\272\266:\005\031\027:\222\305@:eF\211:I\010\030:Hw\230:\375\366\3469.\205\213:?\244\025;&\024A:K{\026:\000\000HCV\362\207=\230VG=\035\255\'@\025{\r>&\330/>\234\353\233>#A\3019\027\216\r=`\251\224\301,b\024@X|\203>\tsT>\362h\254>\\\302!>\206ui>\305\031\007>\340#\331=\036\254\237<\317\317\300=\251\277\350<\316\327\216=~\177\201:\233\320{:S\341?;\243K\n;\335\262!;$q\020;\021\007>;\014\316\017;?\301\256:~J\260:\362W\231:\025\256\362:0\327\241:\256\000\222<\340.S<\307li>\214\321\207<\345\021:<\270\313\003>\215\247\0339\027\202\247<<\253\005?\267>\322>\177\324\212>5?\201>\374A\214>\021\027\036>\026Q\'>+\021\r>\"I\010>\006\206\n>\022\251Q>/`&>I%\364=L\370V:)\274.:\217\212\346:\304/r:^(\217:\021\r\312:B^\033;H\217\324:\254\030\202:\332\220\200:\177;\035:\236V\213:ku\014:\212\235\270B:\272\323<\362Y\242<@!C@\256\340j=_\362\304=\376\020q=\315\345\366:\376\231\026=\274\203\246\301/[4@\312nT\277!\237P\276|\314\242\276Y\301S\276\264b\336\275\320?\274\275\341\255y\276*\313\231=*\224\027\276\261!\200=2\2712\276\2371\033;\302e\3369\206\020\2739\375\257\2749\375b\026:\343\022Z:\357\231/:2d\3569\252O\032::\310\2549\2401\201:\341\362\333:2q\253:\372y?;f\033@<Q:\212>VO\321;\233\220}<4\264\025=gdU:{b\272;\237v\247?\202\221\t?\262cX>\006\026`>\017\315\025>\360\020\037>\375\377P>f\013P>.\213\\>(\273\274>9\366T>\2352F>t\205G>\371\230\231;)3\003:}\351\3469z\332\2259\355\257\203:F\360(;\244q\372:\273\345\3139\313{_:\237\333o9\267\261\377:r\315^;\017/\314:UU\005Ch*\"=\275AG=\224gN@ve\255=\213\274\346=\203\232\205>\177]\206:\201\367\216=\256f\224\301\262\257\326?\250\240\010\275\215\315\320>hZ\266\274\016\344\321=mxU=\206\330\301\2753\236\036\276\346\324x>\0340\266=\260\330\027\275\207\211\272\273D\035\3479\370\317 ::\t\006;\320\325-:\007:\2579=\177\3649^\022\330:\207\205\2719D\226$:\014\245\2769\241\377\3719!9\3419G\205r:M\314\025<\335=4<\274\234\216=\323\0227<\266\375h<\206\263\036>\"\302\3409rq\266<\026[\020?\235\032\357>Q\357[>\305\342:>Q\376<>\272jY>\223\212q>\272_r>\315\322\216>\246\006\215>\331\352\202>b\005O>\252\334\">_\215\3219\234\023&:\216\377\257;Hd):\315\307\2029\223\252\2119H\266\357:\024w\2719|M\251:0\347p9\271\217\3639\370\304\2349\342\340\276:\000\000pC\375\022S=1z\355=\007\017S@\321\343\025>]X->\246x\330>Q\242n:\262\314\210=\335;\214\301\0077\340?v\360\253>\353\206\001?\r\206\216>\365D\211>\256I_>j\201\236\274\2464\374\275\267\334\205=\000\215\341\275\206\310\034\274\362\223\214\275\234\302\300:\254\2027: \350\017;fY\005;\301\273&;\234\256\034;L\303W:\017\014(;\201\200\322:\206\304E:N\337\217:n\345T:\025\222\336:I\315\301<\335m\251<x\037\225<G\326\n=\325\364\275<\0359|>$\304\233:a\366)=\313\321\247?\'\315\007?\346X\211>\206\376U>\032\313*>Pt\r>7h{>)OJ>\334eH>\343\302b>\365\336O> \007V>\223\350w>\243!\t;]\366!:pG\035;`p\";T@M;r\353\020;\256\000l:\325\002B;\3317\370:\374#C:~\336\234:\031\330P:\232\266\201:\000\000\026C\236U\332<\030\347\267<\265\031>@\232,\273=\330,\004>\334\346\037>d\344\240:\311(\353<=^\245\301#\355/@\307)\233\275\201\017\177\276\247\"I>\375\032\303=\271\237\342=\235\273\341>\376\352Q>\261\242f\275O\351\340=\201t\013=\271\3727\276\274\216\273:\177\251\n:5\243\367:\030\223\355:7Z\014:z\2032:&\256\3009c\211::\262\020\013;\333\350\264:\233\242\232:\017p\310:\235\321\264:V\374\372;\377g%<FT!>Z\024\267<\301\247\207<\377H\270=\\\355\263:\227\226\016<\276\244\303?hf\276>\342\311\350>\211\322\207>\255\031\251>5\232\244>A\370\217>\373\206\264>\010\304\307>\023\323\236>\242\237\274>_*O>n\3332>\220\217\t;\026\276\3539\341\341\035;zD\252:\n\022\027:\016\214q:m&\2279\r\217\241:\000!\302:A6\235:\307v\374:$FB;s\261W:\000\000HC\331\350\300=\346\274T==\013P@\314\3449>\221\025%>\017\n\224?\330\204Z9\356\2723>\000\306\223\301\373N\203?!\206\221?.G\243>\236\317\313>\216!7>DBG=\006\0373>\356\226\005\276\243\240\363=\253\342\227\275K8\211=\013\017U\276\300W*:\2336\3279\3229\201;\300g\274:M\2131;\210\276\r;;\375\277:\376\354\221:\305.v:\003p\007;\020]\005;sU\214:\3268\027;\263\232><c\024\014<+\'\362<\277\022\223<\004\326\201<^\343\034>P\261p8j\375\232<x\361\320>%\214j>T\323\201>\366\3003>M\356\033>S\246\033>x\324\206>\215\2649>\234KB>\332K\007>}\032\212>7\371\023>\306M\317=\352\315\2329&f\3679\354\266\262;\374\223\230:\006`\257;\203\252\020;u\306.;\016g\314:;\334\233:\237\304\225;\002\2679;n\014\\:\227\350\371:\267m+C\322\275!=\334T\362<\002\362G@\274\t\005>f[*>\354\323\204>\376~\223:\330Nu=A\224\242\301\024\005\016@\254\324\316\275Rh\244>\320\244\270=\002{/\276N\344<\275\007\326\330\2769\332\207\274 \327\267<\217\371\326=\016@\035=\221\264Z=c\2246;!\032\215;\177S\366:9\252S:pp\243:\017\305>;\330\354\025;%\267B;DB\331:^\010\243:Kn\022;\261\357\354:iP\203;\365\334\274<\273\245\221<{\0329>\365YY=\303\203\317<\3652\224>\335\257%:g\360\231=\030\376\212?Wr4?\306<5?\256\224\304>`\000\275>\271m\230>,!\222>4C\t?Gk\353>#\t\005?\276\035\311>B4\305>M\212\255>\374n\314;\251f.<\366\203H;\327@\232:\035H\362:k\260\342;N\214\224;\332\320\274;\250\'s;\2332\277:\311\032\214;\324\222\271;r\013Z;UU\005CL-h=\261\277\005=\252JH@\277\207\346=\364\366\367=I \030?\001\202\3419\322\213\323=\\\335\226\301\233o\325?1\235\037?r\277\036\276\340\247]>\325\255S>\214\341\372>A`t>k\0328\276\n\023K\276\211\264\032\276$^\273=\023UH>\177\220K;2\215\220:y\020%<\277\374I;\361W\217;;\300\377:=.\357:\254r\242:\033M\304:b\253\331:|$\200:\026\027\034;2\375\201;Ulk<\261N\334;Hj\020>\240\313V<\272\223\031<\"\3562>S\204\3728\307\022<=\013\371\304>\000 \304>\241C\005?=s\250>\034\361U><\277g>\332y\211>\227\304a>\201{\217>\'\304\247>|w\200>\220D\230>\254\246\236>\206\323\306;\213\263\207:\346/z<\215\370a;\222mG;\374,\034;\267\320\037;\375HZ:\250{\237:\025\372\355:\377\033\025:R\177\240;\327\r\203;\000\000\026C\367\370\344<(E\013=\203\3129@yk\331=\267\376 >\352\007\271=\013\350%;\236\363\277<\213T\252\301\214fM@\320\375\000>\231\300\266>0\316\022<\252\343&>;\226M=\226\347\271=0\272\000=)\031\227>\025\211\300<\304\236\244\274\315\325\277\275k\316_:\320\277\270:\355N{:\227tr:\240\334\021:i\252?:\203\255\241;\363Nn;\335\235\374:\277\366#;\235}V;\277mf;V\010j;\036\213{<\360z\241<\2009\376>\307\232\377<\346\346\274<\001I\225=\224T\331:RP,<\367\345\374?\177T\374>\025\274G?\264\021\222>iz\251>\311\352\245>$\233\177>\214h\227>1\354\202>\325\313\201>\2013m>\210\256\211>B\243\327>#\250\313:\377\331 ;%\026\273:+\343\325:\225\nH:\243\223\213:\314\243\354;|\344\255;\347\021\313;0\304\000<\372%\003<l\006\363;T\242d;\000\000\026CU\236>=<7\231=\\\237P@\022\275\365=\361A\034>\263}\227>3\331\3369\027Ju=\246j\213\301\315\210\374?zp3>Q\331\">et\216\276\342;\226>\223\207\001\276\000!\277\275\330\261\324\275L\260\263=#/\242\275+\211\266\275\244/l\275 X\353:L`\331:\232n\205:\241\375\227:$KM;\342w\300:\001\327\221:t\350R:3\240\215:\221\313\014:\n&\035;)m\023;\0350\276:/\322\320;\337\224\r<\351\323\270<\265fI<\246V\014<\306\342\210=eK\0219\357\325\211<-\031\237>\221\362\\>~.q>\255\177Y>s\300h>\203_<>\022nS>\2268\372=lv(>\024\257$>\257\264\025>\252w*>\235\360\365=\272\351\320:\335 \334:\006\363v:\251\277~:V3\";\233\342\'::!\204:\252h\036:\355\260e:] \3119l\215\373:\261\313?;\014F6:\000\000\026C\363\020\225=S\234\337<M\353P@\030\337\027>\315M)>K\007:?!\017\2049\373\317\322=\304\256\223\301\244\355\217?r\367\260=b\277\227>1\377V>\352\276\335>=\251\215<\300%\335<\031\264\210\275w0\354=se1\275\331\235\210<UXz\272@\311S:\271\362n:c\370\362:\215+\364:,\\T:8\'R;\215~@:s\2520;\337X\251:>\273\333:\316\"\005;U\ra:\264\303\331:8l?<gg\r<z\033\344<\366<S<(u\006<9rR>\323\275\3048\005\333\220<\344\233\362>j\327T>\316\320\314>\201\177\033>\346H_>\256\356S>\262!/>\013\276\027><b\321=\217<:>\252M\000>\374\224\035>\235\370\030>pM^:\227|{:\255{\001;\227\354\007;\000,\024:\362Yo;\244\033\030:y\026.;dV\220:7;\277:\300\035\366:cn\3409a\365c:\000\000HC\356R0=\326+\325<\313-N@\177\356\344=\315\r\022>\005\302\210>\327r$:&\024W=\375.\232\301,=\376?\343\032V\276\274\237\034?\300\016\271>:\3314>\217\007\261\275$\375\217>7\232\245\274\355\312p\275`\270\342\275\016\\\010>*\275+=jE\3069}(z:<\276-;\357\312r:\244C);_:-:\234\345\031<\354H\370:r\350Q:D\336V;$B\376:x1}:I\035i;\362\251\315;=Q\354;\2605s=\235\tD<\241\304A<\034D\304=f\000\\9\233CE<\362\035\351>1l\215>t\357\222>(\364\244>Y\206e>*\241\201>i\337->\267}\226>_\262\203>l\212[>\327ZQ>\225a>>\236\201d>z\373\2369oo\336:HV0;>Q{:\372\327m;+h\3369\003\377d<\370\014\031;\225\201\216:\257\027\224;\257B[;l\201W:o\ti;\267m+C\211 \247=\035\257\347<\350sS@\214z\013>\341\"\t>\332~f?\003Mv9\r\350\017>\216\311\223\301\002M\225?\261;/=Pcg\276%/3?\244\003\372>Q\210\021\275\035pN=}j\030=\007,\214>\211\2662>\320\367\020\276\227\320\352\274\0279\210:\324\202\030:\372\315\251:9\216\303:J\"\271:%\322[;8\224\204:|\206-;\363\245\\:F\315\221:\273[\034;\257\341h:\253\227\315:\222\'?<Lc\242:\225\350 <|\204\001<\364\314\325;7\3756>\352\026\2658c\013\220<\300g\201>T\332\243>GE4>\305[t>\346\'[>!n\250>jW\205>\250\314y>#\023\200>\005\220j>B%\240>1\nA>q\224\342=8\022\243:\203\336\2719\020#A:\366e\335:\262\275\233:~\336?;\001\352;:\354ue;C\346\3579=5\201:\335\2438;\332\224I:\201\240\210:\000\000\026C\363km=\270\0109=\200\320O@\275\032\034>\346\0245>\301\240\362>\365$\32491\\\244=\240_\221\301\034A\323?=\271u>X#\210>>\3424\276]k\213>\017\305\204\276\004\201\350\275b\013\013\276\n\023\257>VW]> \265e=\3734^=#\204g:Q\260\226:\333\311\234:\217\267\005;\270\026\204:~\216\016;=X#;\267\373\202:\017F\014;2\t*:\023\377{:,b\':\036%\251:\331\323\032<Vt\354;\002l6=c\2308<\227\002\024<\\\241\002>#\210\0229r\225\330<\217\224\353>J\262\234>\205\244\321>V\323R>\014ln>\204mh>5q\253>\014\025r>\332\212f>\024\266M>\224j\\>\roC>^\2775>\002R\000;\327\364\244:\242\353\240:\357\017\013;\374\nb:te\027;\356\223\022;m\346\211:`B\352:\353C\3419y`r:\\ZR:\0002Q:\000\000\360B+\331W=\360\223\256=<qR@\271\201\032>e\0054>\315W\317>\312\334\3229\224jp=\033\233\213\301\2078\347?\2043\342\274w\215r>\374^\000>R\320\314\275\026\332\276<\251\207\">0\364\325=\272\371\345<g^\025;\335\023d>I|\205>\310\023\225:\023\257\204:\033\"k;s\330-;\n\206B;\031\301\331:\347\225\235:\320L\036:\355~E:\010\371H:\217\217c:F\030@:`H\270:s\321@<L{\016<BV\r=&{\251<\260\250;<\3475\013>\264\202?9i2\246<\337p\245>\316\264\213>\3008\216>\262\344\230>\230\326E>\311&d>f\230K>\253!\036>\315g\202>+\204/>;\373F>Z;k>\034\324->\232a\026:\316\316\223:\310{ ;:E\006;\355\003\252:0\352\315:S\364\244:\004\360\032:/\354\032:\300\017\3209\201\031\013:\027[\3579I\334\030:\267m+Cd\306\215=\342\235\301=[\017S@>V\032>\037\014 >\307\2524?\307\'\2209H\264\356=F\255\210\301\253\037\315?m\233\032?LR\226>Gv~>\305\275\214>/z\225=\357O\223=\262t\366\274\000\275b>o\376\256<>G\367\2754\344\"\275\001\001\220:N\320R:6)i;\261\203\276;\004\276\006;\333T\315:\021`\337:x\374\252:U\t[;vo\032;\242\231\355:\240+{:8\246\';\n\200\211<\010s_<\247\247X<?\243\204<\352\365\'<\221\366D>\325\266\0169\340e\032=\023\233\265>\1776Q>R\231K>\357;\305=\333\010\n>x\356\325=\036\026\361=>\240\026>\340?\357=\361~\030>\021\252\020>\232\357\332=\223\r\356=\360\343\232:G\'\3709)z);\265\305\255;\262I\006;\342b\020;e\232\222;\340\360\220:$\225\202;S!\017;\004\006\005;\223\344\200:\345\273\310:\000\000\026C\230\021\201<\350}\036=\307\3574@\227\236\020>r\003B>.\021s=\221\254\266;\020\271\375;\3257\262\301\253\3557@}\271\"?\253-\205?\337\316\355>\303I\363>-L\226>FN\214>\227\025*=\220e\002>oj\345\274i\265\364\275\247A\374\2757\200\3438\020\207\251:i\010p:\263\274\017:2\030\215:\260Fk=\354\317\025:A/D9\243\307\0109=\243\035:}\304!9\026(t;\214\264\207<\370\257\267;\251\325U<\272\350C>\247\273\211=&[O==\r4=r\224\276;\356\341\254:\2449\205?iD\244>\227hV>k\311G>\025tB>\005\330\005>\252pW>\220\365N>\320\030m>\200\347\004>y\177$>\256\343\000>\037\0037>HS\2008z\026M;\362\305C:<,\000:_\202\275:\033\001\201=\277\357f:*me9\357\325O9\005(b:\253\213\3658i\364\235;\260\230\210<UU\005C@\225\r==w\236<\2748C@\246\251\030>\355\026C>+\345\\>\252\377\3769\320\207\267<\274>\244\301U\200\t@\315n\007?c\204\236>\216\331\272>g2\'?\352\334\200=#\341\213<\3338\321<\241}.\276u\364\005\275\275%\305\2737\311\205=\021}\317:\033\311&;\035\343\022;\031C\236;\031\t\317:\243\013\336:\311J\234:SZ?;\022B\033;e\366\034:\360\242\263:\374\350\000<qk\033;5\037\303;1\305\205;\252\323\343=2\261\001<?9\257;VOG=6l\0079\270;\352;\216\320\252>\377\270K>g\223j>\331K\345=&p\216=\304{\313=\300\275\221=nO\267=1\344\335=\201\266\235=\"\'\230=\360B\203=\221Ej=\326\274\204:\033\304\311:\037\202N:<\202\016;\216\2004:\265\244\244:t\257#:&:\264:\004\032\251:\301\215\2659R}\204:\010\301\277;\212\340\255:\000\000HC\001L\226=\035i\036=\342\305H@\005\361\036>\342\360\">D\343K?\020\367h9\0346\n>\001%\220\301\000~\323?\300r\000?b\337\362<\210\266\252<BG\003>^F\323<\350\325\023\275\245M\234\274\212\315\343=J\255[\273\r\232\013\275\"Z\345\275\312\371\275:\372\256Q;\205\020v;\301|\003;\242\2712;\311\216\301:5\341\261:\330\2363;\021\221\006;\030f\266:\277D\324:\020\352\276:;\354\000;\303\230\206<\243(4<\306c%>\004\177\201<\376=\026<\036W8>Ky\2208\352\316\031=\256\211\260>\232@\227>\266*\235>N\302.>\210\315\201>\3164&>\014x\376=\304\372\005> \220\n>\232u\326=\312\367\327=\361$\001>\222\213\023>\371\263\365:Ys:;\035\363\036;\3516\345:\301,B;I\335\326:\271R\201:\277Vx;\005\016\272:7\022\201:`\200P;g\013\231:zf\230:\000\000pC\024\220\212=|>\302=;HM@*\365\010>\235s\024>\273\214\034?@$\2039\313x\320=t\016\210\301vZ\203?|\274\353>\320\333&?\210J\227=|y\300>>lV>\355\214\346=\321\271N=\016\366v>n\314|<N\243\220=\336WJ\275\232u/:\204\017\031:\260\213\311;\216\326\335:\233\214\";$Gt:}Kb:\022Q\227:@=!:t\202|:\237\035Q;=d\232:M\243\022;\334\371 <vx\242<\005(\254=(-\025<\'\302\027<\212~\313=\255D\2358\303\215]<V\357\321>\320d\203>\305\014\211>\376,$>\010\326\027>\005\251?>\321 %>I\215,>\200\227\037>5\226%>~\270\n>t\363\314=\267\325\356=\032r\007:\257\t0:\347\336\t<=\343\240:\247n!;\312GE:\320\212p:\204\267\252:\035\345\000:\311\207E:A\234.;\356\367\210:\034\242\n;\000\000pC?V\016>\310?L=\214(S@\333\310=>aj\031>\373\256\314?{N\3008a\025s>\351\025\215\301JU\n?\225W\271>E\377\257=X\251\010?\203\2147?\307\324\302>Un\207>v\310\227=\300L\372\275\023\0257=\277\375\022>\277r\321\275\023\361\261:\313\311\027:\210\t\365;yg\000;\237*\320:Ud\246:\271\264\035;\263\202\220:\207\217\002;\227hI:\253\240{:\007\312f:\253\206\017;W\340H<\223\032\246;C\013\'<\362\376)<\0254\013<_b\346=R\232\3007#\253\222<\323\344w>Bp.>\277\020G>\r\233;>q\356\020>\030\035\033>C\307#>\213\310\005>\272\342\001>B\213\330=?\374\323=d\242\323=\007\336\263=#\013\212:\262]\3269\245x\330;\007\317\310:.\010x:\033\377\203:>\310\354:Z_F:\253U\353:-\325\010:i\362\001:#\031x:\310=\332:\000\000\026C\225\333\\=\212\367\335=z\275O@\345\'\033>\353\322&>}\232\372>\302\343\2609\321B\232=\223:\211\301?C\341?\314\324A>\003\204\223>\333ca=\2024\361=\001\023f<\250\017Q<\205\213\235=\r\034\370<5]+\276.\347\030\276\365L\271\2752#\372:\2115\317:\007\353\010;;\270\005;\354\247\372: AX:\247\211\213:*d\350:\202:\303;\211\347\301:\232\210\202:s\001\030;\020\271\";\333F{<\215+\316<l\273[=B!\303<\2300^<\202\2306>/\317\3638\237vQ=\2679+?8\332\275>1d\255>3\021[>\005\336(>wY\234>\354\315O>\n\206!>\307\3553>\241\323P>o\236\202>$\203\207>\035\214.>1\234\003;\'W-;\006\311.;\020V\005;\3538C;\320\'8:\365C~:h\357\332:\r\363\326;\347U\214:I\271c:\201\010\222;\357\363\357:UU\005Cw\325\217=\271\251\336<\0100E@nI\t>Pa\030>+=7?;\270\2149\005e\351=\275X\224\301@D\305?B\220\030?\"Ap>\261\303\036>\325c@>\001F\271= 3\036>\246\006\321\275\004\034\327\275%t)\276\002\236#<\0338\177\276Q\372\362:\354\004U:\351\211\020;n\373J;\027\000\336:2\037\327:\376X\274:\371\361\307:\320\205\305;l\376\255;\340\340\014;\365\323\336:\233v\025;\177H#<L\034\256;Y\255\227=\271n\347;\035\234\017<\027\300\020>\324\243\2418\002\026\212<\017?\311>\246\245@>JE\212>U\267\376=M\342\004>\333\033\354=\224\362\332=7\345O>\233\021J>\327\024*>x\2205>\036&\366=L\215/>\365\026\021;\311\3475:\263]\302:\363\303\020;\252\032\263:u\262\222:\233\350\316:~\025\242:Cqr;\315\\\204;\352\001\363:&\365\241:N\017\217:UU\005C\006wj=P\207]=hvN@\274f\020>I\007%>^\346\323>Z\260\34691.\217=\232M\221\301~\336\336?\222\303\251\275\215\237\326>\246\nD>\2463z>\255\236\026\275\374\357\304=vqq=w\2422=\032q\222\275-u,\276<\366\277\275t(7;\337P,:\242LM;\276\335\000;&Z\276:\3273d;\t(|:\226W\230;\031\3273:\204\026\025;(\0062;\250\256\226:\360Z>;\324\226\217<f\352\302<\275\236\275=H<\377<!\224\237<q\357F>\264g\2219\262t\000=g\347\226?|\225\267>Y\364\211>\031\340}>tJ\206>\232\013x>\205\237[>\300\304\032>\224\2444>?\202{>l\201\205>,\267\177>\256\301)>sb\203;\302\375\030:\347\325\217;\347I|;\234\2768;\301\214\211;\260\234\277:\252\246\223;K\373\035:\202f\020;\336Vm;_\316\032;5A\320:\000\000\360B{\374\247=\246\363\262=h\223R@\203C\034>\300&\032>\233\007e?\361Dd9<*\023>\345\272\206\301\241\215x?Z;\315>c(\000>\372L!>\350\267\266>\"\310\225>\346%\036>\221\257\006>\006E\365=\333E\270=F\004*>\357\034\304:\013fQ:G\034J:\311\345\347;\025\212\013;\334:\276:\361\355\307:\036\300]:\212\242\307:\214\222):\240\263\204:\227\1774:d\322.:\355\364\026;@\033\034<\007i\375;nu\251<\343\321F<\r\3457<\201K >v\027\2538\026\306\273<m$\265>\373\017\211>\"\310\305>\220\325n>F\225W>\210\2051>u\221\026>%\347\n>\372-\001>c\000%>\307\327\025>\241+\350=\322E\355=\322q,:\262;@:\305\275 <\215\310\207;.\217\210:\221R\275:_x%:\347o\313:\370\367\023:m\013\036:\3673\2579^\035\3679\007\377,;UU\005C\201\022\375<RUR=|nM@\017\003\271=v(\006>AW\354=sfm:K\244\025=\304\303\226\3018\227/@\241\221\213\276\217b\341>\016n\216>\024M\246<\'w\021\275\366OE\276r\203\034\276\274p\236\276\226\235\333\274c\262\023>\356\237M>\014\213\006:n\264J:\020\010{;s\212\232;\344\311\032;\352.\354:\253\312\224:&Q\002;\355\246\236:\324\261\343;\030\'\336:\233M\237:\353YB;3\023[<Ehd<lg\271=IL\r=-M\342<\251P\270=\302\310\3469\351\317)<\024mY?\254:\n?\331\235\245>@\273\217>\346=\025>;\3341>\301\000+>Vd_>\305Y\202>bn\205>0\264v>p\317\231>F\342:>\335\002\n:\364\243.:\014S\206;vF\236;\232\032*;\252\357\334:Yv\305:\367t\027;\320{\275:\375\274\346;\370S\306:\243\017\213:\361\256\335:\000\000\026CQF\203=\210\020\236=iv:@X\177\035>\347\207.>\217\206\321>\351\315\2529\262\233b=@\346\215\301\237\347\323?\203m\003>,\254\257>\016w\177<G\207\305>]\3611>hJ9>\200-\355=\353\016\304;K\247K=\214ED=\330-\325<\250!j:\327\034=:n\221\202;m7\313:)V\270:\275\'\336:\263:]:O\304\014;}\0103:\217\244\332:\270\331/:\3642$:\244v\304:\372{\204<\315\223\304<*i.>\2431\207<\032s\021<\030\214;>%\350H9\312w\017=\014\311\334>\300\033@>r&\204>\306\320,>?\221\024>\205d\031>9\304\350=\033=\n>\357\326\r>\025z\342==x\037>\005\272\004>8\026\257=I\217):\347\372J:\254AI;n\202\300:\235\207\232:\272\t\302:\247\306u:\241a<;\264\322=:Z\021\342:u(!:\003\352\3669\366\263Q:UU\005C[T\032=o\371\214=\036+J@$\364\373=\247\265 >H\220\232>\270\032\":\036\241\021=\312\025\225\301L\277\003@\003\304(?\326\373\322>C\311\217>\257\3435>.\005g>\031$}>2,L>\022n\203=\372>v<B\036\270:\336ZP\274\022\246n:LlR:8z\003;\021M\013;6\246\377:*9\251;\260\260\337:\271\264\214:\025\031\217:\013:\022:\211\"A:\322\300\270:\362C\317:\255\374\220<}\324h<|\275\212>O\334\251<\224\177\203<\205\350\014>\\B\3059\017Y\276<*\264\211?\225\266\265>\033!\230>WI\232>\376%Q>\001\205\351=s\274\017>k\256\372=OG\034>\354q&>\317e\026>\246>@>\010\345,>\265\002O:D2\3169Y\276\327:N\250\037;\010?\377:\213\320C;\2447\256:-\271*:\266\325t:\024i\2369\3321(:\t\275p:\316\266W:\000\000pC\334\212\201=\222W\227=\376\216Q@\370\375\001>\377\226\010>\341\274\034?\0134\2459\310e\327=3\244\212\301r\246r?VU\252>IA\360>&\2073>Uo\252>A\265\027\276\273k\'=\303\235\326>\006-\014<\255l\212\275L\333\016\274\220\225\022<f\026\333:i\314\201:$u\324;\367\267 <\351DN:@[\276;]\305\201:I\355.;\261\374@:y\306;;\2409\373:\237\276\211:\3658\304;\242A\363;\037\273J<\353\274\243<\226\357B<d\340V<\304\264(>\\\366\3408\257\034\242<\210\'\375>\313\271\201>\324O\243>\204U\234>\307W\206>\261\3133>\315b\201>0\211\231>\023\016\240>\025bh>3/\211>\034\374{>\210\215\035>%E<;kr\357:H\277\017<\341\022\032=N7G:\302\344\017<,\325\205:\271\337q;\027\362A:\031\0070;;V\007;>\025\360:\337B!<UU\005C%\340\214=J\334\222=k\303D@\363\2270>\303f8>\nG\374>\377\263\2009U\211\215=7\016\221\301\215\202\361?{\300J>\000\230\235>\203\346\233=!Xz>\345\354\250=N\023\257<\003\023\273<\363\251\375\274\276b_=\2226Y>P\217$>B\3763:\363\026p:\006\376\321:\235,\214;h\023\273:\014\256\036;\226\374\231:@li:\253\245*;\\\037(:\363\010\026;\263n+:t\365\322:+py<\312\342+<}\220\307=~X\332</F4<\031\302/>\2665\2308r|`=\273\021\375>h\244\257>}\006\277>E\233\210>\311\250\220>\202\363\007>\351>\215>\311\200k>\032q6>v\013\215>\020~\030>\315M^>\265\360\037>w\372\3309P\210O:\355Sm:F\230J;\333:\236:S\317\003;A\267\247:\206h/:\335\341\003;Y}\3149\332\025\306:{[Z:\231q>:\000\000\360B\356f\223=\230\335\265=-IR@\177\031\013>8x\022>\003\314;?pr|9Aw\355=\333,\210\301<\032B?\360\370\333>\033\252\342>\214\344\315>\213x\036?\357\016k\276>\376\317\274\277\231\010:\2577n>\241\331\244\275D]\010\2767\2416\275\025N*:\204\365!:\2705\300:\\\021\221:]N\211:\311\315\030;\352\013v:`6\236:\004\250\236:}\357\367:\330\257\243:\2124J:\320?\177:\'\2034<\315\206^<I\351\232<\342`\177<\310J-<1\3175>\363/\2608\031_\233<\r\000\241>\246\024R>(\0269>\275\242?>\216+7>i\"H>DLR>7{\016>\361Xd>\261\206\'>r\267\037>#\343N>\023\247\000>8\312\2679<\363\2029\n@\305:\356\022J:\316\323A:\030\216\002;D]\030:\207<3:\2402x::\206\301:\255\030V:\270\370\016:*\322\3639\000\000\026C\2773\213=%h\200=\247\213H@-\253\023>\357O\037>I\365\033?S\t\2349\327\034\307=H\371\213\301\210\263\272?\345`M>\374%L>\367\301/\275\030-\200>m\363{\275!3A\276\036aC\276?+\231\275f[\207\275\014(\024=\353\3764=\316\013\206:<j!;\314\230\222;\202\020\377:\374\263p;\305<.;\256\315\232;\234\216\370:ma\363:\031\013\276:\210!\311:\360\354\264:\265\360/;\ryr<\036\314\250<\333\270\301=7\236\232<\237\317p<\227B@>\301\364\3748\014\250\034=\232\203\027?\257&\247>\0070\346> \244\210>G`o>B\371t>Z\276\205>h\220U>-\256y>\224\277J>#mO>\323\201u>\200HR>\310\236,:Z|\341:\331\352\374;\223\377\036;\221T\245;a-;;L\230A<\234\311\263:\227\227\377:\234\002\334:\333\206\234:\373\270\243:\255\354k;UU\005C\377\236\255=\336<@=\275\037M@\247\2352>N\3649>\277\013n?\363B\2109\271\310\002>\\$\215\301[\266\234?\334[\002>\376\247\227\274\375)\265=\273\365\177>\223\324\211>\321\260\270>\224L}\276&\254\261\274U/*=\370&\217;\224\366\372\275\005!}:\\6\324:%N\232:\003\311\206;`}\020;d\241T;c\2541;\230\352q:UE\221:]\205S:\231J\333;\326\370\300:\376iV;\034N\030<\245s\347;\365\231\250=\263q\004<\277W\216;\033\212\030>{\025\2008\262\251\203<0S\254>\024mJ>O\355\014>\213L,>\235\322B>u\004(>\347\023S>\254\303\204>\336U6>_\251N>t\321M>u\262\027>\217\262\340=\372\312 :^g\031;\333 \355:%\350\005<\361e8;\251\250\236;\250\022%;\324\370k:\345\256\266:YKi:.\037\316;\260\266\257:-\354\013;UU\005C\365w}=(U\266<\327\025\037@s\367\365=\216\352\031>\017\225\261>z0G:L\341\204<\345\001\257\301\331\222\007@CVr?g\007\307<\237\375\274>\333\310j>\334Y\205>\214\036\254=\007Tc>\031o;=s+Q>f#4>\343&\037>\032\316r9\331\265\3748\352\363_:\257\002\001<\213s\036:\004\010\\:\023(\3019\273i\2429 3\3069R\200\0259:\341d:\353\317\'9\333\276\017;\255\207\177<X\257\013<\340\264\207>k\310\364;c\350\031<\003\363\311=C\034\2579\265\007\240<\271\255\227>\323\200\030>\267\322\341=8\232\027>\030\177\007>q\344\343=\255\350\271=r\265\303=\032\'\265=\257\313\007>\263\356\340=\320\274\264=\217{\331=S\274#9\333\350J8\034\365\024:TQ\326;\023%\n:\200h\026:E,q9e\037\2579=\003\3029\327\330\2608\273\324!:H\230\2678\276\307\335:\000\000\026C\220D\"=Z\353\"=f\347B@\330\266\373=V\335&>\205\305x>\327{/:\007p1=\237*\231\301E\\\005@r\316\270>\236\344\252>k\337\362=L\203\217>\270\245c>\303\315\034>\024RB<\376^\032=S\367x\273\007\010\312=\355\307\241=\000_\001:CS\232:K\004(;\230M\272:\'M\301:\220\314j:\241jy:\350\372\005:G\313\205:x\323u:\022\242\342:\306I\370:\264E\234:/\010\347;tiq<\344\365!>\366\377\225<\252\217\223<\310\245Z=l\330\2509\006\265\230<\r\376_?T0\270>\345\272\317>\035\361|>\3503S>\2277Z>b\017`>\327P\200>gW\216>\005\037{>9\314\177>\223\201q>\252\370l>(\270\3379\177\017\332:0\304\005;N%\224:\256\351\310:_\215G:JK\212:\300X\3069\0257\243:.\005P:\362\034\370: C\037;\276\022=:UU\005C8\2716=XX\360=\350lS@^\n:>=\2726>\220\333\376>k*=9r\240`=\255\026\220\301\023\233\210?wcd>\273X\337<\306\340\227=\362\234\250>L\301\252>\375\305\313>d\306\212<\354I}=\317\342\246\271#\3278=\235^0:\267\314e9)\261\2169B\316\030:\343\322\201:\363&\2249\362A\n:\017d(9\332\207d9ld\2559\234:\2369j\240]<\207\227\2239\232\364n;h\241\200<\361$C;U\345e;\311[\003=\231\324\234<\331\221\021>p\206 9`\002\336<3\271S>\323*\235=%\266\024>f(\202=\374\202\266=mj\215=F\327H=\304G>=<\035i=\221\212y=\231\0360=\327\245\\=\330\272\366<(\361\3108W\260\3768H&59\336S\3759\261\277\0109\'y\2229\311\333\2268\322\223\'9n\032#94\304:9J\341\023;<\257\3358)R$:\000\000\360BrW\373=\277.\r=\353\210P@T\025<>\320\345\026>\321U\272?M{\3148\254.F>\037\230\230\301\342DO=\225\245\300?\035\2663>\375\020\213>\276\324C>nn\213>A\317\215>e\217\303>\370`\336>\307\240\177=\006\017\301\274\275}\276\275\256\014\3179%+\2519\n\331\317:\033\375\204:%\300\270:\223\252\t:\035W\3419!vJ:{\375\242:\243\377M:=\207\3179\316t\3239\323\022::\247\303\325;,\364\205;\\\374\254<*\363\221;\333\215o;\216\245K=w\260\2427VQ/<B?\303>\244\201\266=d\252\246>\032\261\247=h\373\014>\272\245\334=(\232\025>=\300\023>^&\034>\262\3312>\247\003\">\235V\346=H\253\377=Q\327#9\316\303 9\370\261\236:\376\0219:\320{\215:h\257\2229\335\343\2019\274\004\3709d\347 :sx\242:\362\211\2259\376gQ9\201^\2629\267m+C\213\033\207=\201G\211=\222\305Q@\034\333\007>\244k\004>{>A?I\037\2239\253\315\374=>\221\220\301\010\241\234?\340[\225?\312\345\360>\370/\260>\322\214\332>\343<\030<9\023\310=y\200<<\010,\225=\016\242$<\255\272\034\275&\312\275<\037\302\274:\n\254\233:.9\237;\344\010\031<H\016\201;\021\346\327;v\305~;\342=\342:\271\203\223:\2469O:eyS:\253\347\264:)\247\251;B\301\231<\013\306\022<\244\225\267<#\202\202<}\357&<H\204u>_l\3178\344\3369=\370\225\372>es2>D<N>\t\024R>E\334(>\321Z\352=\267\004\272=,\230\r>U\242\256=c;\256=\306c\262=\033\335m=\314j]=5s\273:5W1:=\"\264;.Bn<\335\305\205;.\262\006<V>\020<^S/;\204\341m:\274j*:\300)(:\320L\342:^\033m;\000\000pC\340\244\211>\230r\361:,\326\024@00K>\272*->\033r\300?\327W%9\325ev>@c\272\301s\034\035>\207l\201>\037\245\203=c/\021\275,\373m\274W\226\361=\233kZ:\204\322::l\224!=0f\027=\001\216+=\000\026\336<\r\007\327:\036]\225:\236\007\014;\331\336\374:f\325\022;\276\256\001;\263-\017;\3355\367:4{\357:p^\373:;[\315:\350i\302:n)\231:\001;\377<\242 \261:Rh\362>\347\304\005=Jl\226<\254@\264>\024\022\\8\"\237\214=\026\t\025@H\231\301?>\305\202?-aC?\242\017d?\366\344$?\322S\351>7|\007?\377\247\354>7\335\013?!\301\242>\002z\265>\0074\253>\2657\300:\356\tC:A}\303:\361\325\247:\025\216\013;p$\005;\335\251\027;Tq\323:j\351\273:*\016(;\010\350\273:\363H\274:2\025M:\000\000pC\344\235\356=,KI=\n\334D@_\202 >.\222\026>\203=o?\324\277\'9\253\214v>\363\346\222\301@\230\353?\311\020\323\275\004\240\002?\220\360\000?\335\332\253>\3572\212=\202\246\345=c\247\373=\177]^=\0034<=\204j\352\274\344y\266=\342\222k:_\313r:`n\034;0\335@;R\366\014;q|v;a\025\367:{d\270:\246\253\207:\312[\271:W\275\200:\037\214\203:~/\271:(\345<<\2646\313;\024\274\214=\217u\026<s|\224;$\331\307=\253D$8\233\323\026<\233\317\007?\037\315->\023\356\300>Q\211%><\000->{\243\010>cQ\035>\3431\360=\020\021\355=S\320\374=c\267\010>>\002\016>\345\352\001>\271\277\n:\243\177%:\240\330\314:\r4\360:Wd\322:\244\237T;JX\233:\244\311\213:\000^F:\\N>:\3121\000:\366\343\3719~\324=:\000\000HC\250\244\274<KTV=\027\273E@\302\2350=\370q\301=\315=F:\341c\250;\202@\311<>\366\265\301A\266\222@\322t\340\277-~\214\277I\201G\277]\327[<k\214\334=\024\353\264=\017_f\275\311;\r\277\215\036\365\276\275\230\025>^Z&\275\n\337\216:(\314\033:\256j\024:\370\026\2349\014S\2359\233\324\2439\302\216\3728\013O\3258y\317\2018\265\354q9y\003L8\351\351\2549+i\3409\356\241\304:\367d\222<\252\202\370=\0103A<=\236\007=\200,\034:\026\017\014;\361\264\322:\\0\r?\2104\366>\350\271\254>\013wr>_\255\252>)\177e>V\266 >\247n!>u\241d>\324r\320=\t\250\212>\255\356\022>\203\320>>\332\325T:!\375\3659\037\307\':\307n}9\371\242\003:\1779\2579G]\3168\3317\2678&\365&8LB\2339\211\347\0018\270\372\3249\237\nS9\000\000pC\300=\230=\230\263\263=m\320P@e\222#>\337Y\'>< :?\231\006\2209\r\314\350=#\311\213\301V\276\303?f5n?\366\211\320>\022\302R>(\\\200>\347\001\t\276\203\246\000;\014k \276\223\027a=\013\003>\276+\322\200\275\320;\311<\343\356Q;\320\236\253:BN\210;\247 \271:\332\000\374:\225~\013;\003\262\304:\027\204\223;\0049\250:K&4;,\306\n;\247Y\251;\203\244D;\374\\^<\364/\331<\026)\215=d\264=<\322\302\323;\250\307\024>+\272\2758\377\027\306<V\272\020?\365\r\237>X+\330>\031Vv>\220d\\>\220+L>)\033&>p_%>m\305\325=f\005\037>F\376;>\000!\021>\"\311\024>)\341j;\364\375\241:H\222\233;\037o\304:\334\3237;\315\246\017;\205\221\244:h\344\320;\222?g:\212P>;\270\304\024;\005\032\373;\270\263\027;\000\000HCO\333\201=\001=\215=\305\265J@\361$\000>/F\020>{q\355>\305\344\3779a\335\243=(\\\214\301Y\371\271?\275}5\276i[\006=\334\237\004\276\neh>buj>\263\327<=\367P\320\275\344\243\313=\341\311\013>Y\'\242>\360\t\340=\030\016K:\336\016\2679\033Vg;\257E\232;e\245\252:\364\024\236:\213\342\022;2\357z;\274\336\232:\244\242):\261\230Q:\305\344\":\303@6;\217?s<\220\354\220<4\202\361=\223\010\214<\270\255z<\230Y->\224\034p9\345\323\333<\231V\000?\221s\250>}\033\325>\261cQ>\247\270\215>\3777P>S~\251>\271\202\214>\362&\226>I\030\273>]\262\226>\222vs>-\333\215>\010\327\317:\372(\2029u\310\216;\236\230\264;\t\263\324:|R\323:\014\360\241;c\001\216;\353\244w:\214rY:\323\337\204:\335HW:x\345\321:\267m+C%\237\301=\'E3=>5O@\021\233,>\323\254$>\310\356\215?\332)79-b=>Ei\216\301\013\215\216??\226\230>e\271\327=\200G\222>\270l\253=\353\321K>s?B=\352\237\023>7\256\237>\201a\244>\206.8=\325f\025\274\342\026x:\001\'\021:\322\323\242;\226;\207;\013\304~:\254P\002;\234\003\273:\202\250\375:\375\263\212:r\245\200:\017\264\242:\'\373\3039<\230\031;n\032z<\341,\010<[\233\017=\260$8<\302\333)<\'w[>`\243\2618&o\376<\222\352\315>\302!\220>\373S\220>/&!>\007d\364=\344\332\027>,\021E>\202\372d>\024\250\214>\316Nw>\324,?>\376\0275>\302g)>m\321\026:\023\033\2319\274p-<\344\226\036<]\252\":\335\235\343:H\300\207:\211\023\330:\271\244e:\032N\024:\264=g:\255\253\0359\247\323l;\000\000HC\376p\250=\r\357\217=W\273N@\270\314\036>\n\272\">h\264??j/T9\014\217\367=\025q\207\301\267\315\267?6R\201>\037B\213>Q\006g\275\341\357f>~\020\342\275\335\257\220\275\272O\312\274m\316\373=Ld\014<!\357\005>\001\211\023\275\275\016\217:01=:\253\303\005;\310\n\337;y\377$;\322\003\014;\r\024m:2\024\325:\005\206\017;M\216$;\202\355e;s\006\223:\252P5;{x;<\r\270;<~\021\351=\302\362\217<n\ry<\257\217\014>y!\2118\311\271\313<\351\355\325>q\232r>\262\257\363>\231?S>\265\363&>!\367&>\214o\200>w\001M>\024\003\013>\3029\376=h\rR>\023\257\021>;\0178>@\327\222:Fl\020:\325\321\307:\277\223}<:\027L;\242\224\366:\253>I:\023\"\254:\377\251\372:l\234O;\2530a;\235dA:\333\303\201;\000\000\026Ci\356\302=\313Y\273<V\260N@\351\032+>\367R&>\256(\212?\036\310d9\320W\027>\202\021\231\3010\025O?\027\323=?k\304\006>xD\004>@\273d\275;\206\"\276\354\013\035>\02684\275\032_\000\276\217\007#\275RL\232=\327\327\260:\327\371\200:\243\r\327:t\363\273:U\327\320:\033~\332:\357\203\215:\251F\200:W-\3769\206\016\206:Vm\":\312\005%:\305c\177:{\017::$L\007<\371\026_;\306\277\035=\023\303d<\024\251\003<,_\371=w\371\23088ct<\335/\331>*>\023>\322\350->\243\333->\307\2341>?1\020>\247\026]>\032\357@>>,6>\t\3200>d\230J>p\211\024>rF\371=\302\301\3649\345\337z:\375GO:\360FY:?\262B:\372\366\r:\323\341N:\276\371\2739|\320\224:\035(\2759\277\243\3129\020\212h:u\214\2249\000\000\360B\213\014\217=\375\2178<9OE@\255\213\007>x\245\026>\363\033\003?U\230\3079\213\272\271=\242\010\236\301\017\006\254?\241;\366\276S\204u>\001\270o;\345\264\036>\177\374[>\014\016K>\002(\037>-1\016>\'\3029\275\336 S\275\321\343\330<e\233\031;\233\341\201;\240\214]:\257\231*;uW\203:\312e\226:w?\t;\316A\263:\322\003\253;W\037\336:\267\3238;\202\233w;@cd;o\217@<j\223\257;\207\n&>\363\360A<\324\334\027<\363\0257>-+698\373\355<K|y?\\\037\264>\211\365{>_\264)>\007\344\326=B\254C>|#2>\001!\240>K@\252>\320g\214>\250\355\206>m53>\224\302\003>\016\204\016;\306z\332;O\310\230:\374\023\205;\334\201\304:B\316\034;;g\000;\215t\350:d\223\334;\241Y2;\313G\227;\311M,<B\375K;\000\000pCF\'\'=\315\336\372<\'\177C@\022\212\314=u\376\366=\372\326\227>\247\241\017:+\024e=K\236\225\301\207\005\360?m\3608\276dkS\274U\236C\275\020\265\030=\2244\001=\204<U<\302\335\330\27485M\275Z$\306<\303\027\223=yA\236<B\365\365:\364%>;p\317 ;DaG;\"\210C:\304\031\217:\242m>;\273\253\300:\275.\253;uQ\230:d8B;\005\014\217:2\2526;\310\n\006<\371\377%<\013T\030>\023/w<\234\200A<\222\"\377=\363\347r9G\013\237<\324\2020?\003\270\320>\003\006\311>\177E\242>3<\222>%-\226>\335\353}>\243\006v>Z\317\203>\244\212\257>\316\276\301>\037\r\234>\376\353_>[\340\340:p\302\225;\375\'m;0~F;\332\332b:y2\262:\371\216y;;\006\236:\330R\252;\304\202m:\302F\222;GN\224:r\t\325:\000\000\026C\016O\206=\216v@=2\371O@\305\025\014>\220\\\030>\307\346\014?\242\220\2049\361:\274=\367\022\215\301\337<\310?\037L\013>\262u\312>\257\225z=\003\"\231>M\275\216=\325\376\000>\254\321\223<\335\037\241=\245\270_\275\230\237\233\275\311\323\253\275e7\236:@\2654:\375`\001;Z>\324:+\224\363:\207\335\242:H\2663;,C4;u\250\366:R7\377:\177\357\206:\362\313 ;(\224\325:\000s\"<\247\226\347;\377Z\'=T\257\203<\334\241:<\035\242\002>q\273\2108\213\024\242<a\024\266>o>\210>=\200\233>Xmc>\205\226.>O,\025>\277\264\362=n\353\371=\375\237\031>z\261\016>\257/ >\037\320\002>qE\034>\010\034\224:\361\207\001:\252P\322:\233\370\303:\235\204\342:Y\335\216:\346\242\032;\322\2505;\302\264\240:\225\331\234:\210\245s:s\215\220;\271\027\217:\267m+C\345{\016=m\332\373<*3N@\361O\340=\373\351\017>:d7>C\303\215:\352\3461=\236\264\235\301(\'-@\357^\325\276\332\276\001\276\2073\252\276\230B\324=\305\257\221\275,\013\025\275\313Q\365\275\330t\331\275\230\002\333=h\226\226=6\332X=\324\363\034:\034\026\235:\325_\277;!\200i:\030\246\2719 \221j:4\244\220:SE\276:|\000(:@q\314:2gX:\246]$:\005/\033;\317ip<\210?6<\315a\202=\227F<=\310D\002==Q4>@\034\023:l\235D=}\230Z?\333\037\257>N8\230>\276\365i>T\0002>\356\243 >`\261w>\241~\212>b\360_>\206\331\226>\215\226}>\245s#>+6\034>\212z\220:\262:\n;$\315\203<\027\342s:\221a\010:h\014\246:j\346\026;(\370\024;\241!\215:\352\246\004;\342\2615:\252b\237:\200\031\213;\000\000HCAvm=Cl\300<\n\340J@\361\016\n>\030\231\035> \330\342>\275\367%:cD\221=\353\242\237\301}j\330?\214\313\036\275\001Z\276=V\326&\276\273*\303=aE\327\274\242\"\363<z\217\200\275\303\333n\275\232k\353\273\360>P=~\351\007>\245\356A:b\220\013;\310%\033;-\365\321:CP\244:\330\335\237:b~\310:1\205\037:\247\211\304:\321\206_:\006\004J:\312a\035:\374[\256:\364\247G<Q\004e<\344\315\034>B$\241<\274\220\235<G\232E>\007\371\3479\020\244\r=\366W$@\272[\'?,\006\364>\274\014a>8\030\254>\006\n\214>\227\004o>\303\276W>^[\343=)\3447>\243\345Z>d\207m>zA<>MM[:*\230&;\306\034\005;\234,\347:\226v\377:\204\372\351:\252\024\027;\244\022l:N<\366:\201\361\\:\367un:\177\345\027:b\364]:\000\000\226CE%\244=2\231\261<\243\251P@\340X\">\270\356\033>\351kN?\361Tn9\220G\024>\365K\227\3015\340\276?\345\230\224>l\350\337>\272(\261=8S>\276n\314\342\273\302M\313\275\300H\253<\353\377\246>\3512\007=\360W\357\275u\325\n\276\327\005\037:M\365\010:&+\275:\005\363k:1r\211;\'\234\357:\\\242\346:\224\'\371:\'|E;\254\204\033;\367\231\220:H\307}:\276R\340:\325*\200<\n\275\206;C(\024=\n\002\205<\334\363\r<^\327G>\222@\2018\315\355-=\031\310\374>\360\335C>\336\261\257>\003\215!>\211`\n>\003`Q>e\205\345=s\346%>\037\023\'>v2@>\253\266\">H\2021>)\215\355=\325|\014:\233@\2659\320\025\225:/K\032:OI\224;\220\245\n;\252\251 ;\031\304\223:[q\037;.\t\010;o8U:\207\313\203:\341\"\221:\000\000HC3\355\211=%\324\217=\351\037?@9/1>\261\3448>1>\370>\275\322\006:5\027\220=\242#\225\301\226\204\311?\307\3178>%\227#?\243\r\236>A\216\004?\370\2624>}x8\274\006[\264\276\236B\327\275,\223\030>E\303\006?g\230\203>\256\353\230:<\230+:\371\352\336:\235\307\247:\217\357!;a\371\226;\241\365\254:\021M\n:\255R\2319F%\032:\265\336\t:h\217\014:\'\241\271:\233\033\354<\354\213\371<\200\005\177>\326\013\237<%\227\024<=\356o>\245\211D9\225ke=D\033\266>\264Jy>\033C\324>%\356\220>YP\247>-\300l>\203!;>\324\023F>\'\2464>iFK>\204\2632>\251\351B>}\207\022>\336R\244:,\2341:\263$\274:\013hd:`2\036;\014\347Q;\004CC:\0323\2679]EM9wO\3359XN\2349\271\264\n:\022\341o:\000\000\026C\230\021\267=V\210b=\231\217R@\'\354\022>\201H\020>[\016\206?n\332\0139}\220\033>S\276\210\301\333#i?\261\235\366>\033\370\021>\222\335\202>\311\2736>\336F\207=\307\257=>Y\264\224\275\313\313\'>\236U\224\275\026\240\214=\032qL\273\3249\245:5{\221:\352\204\317:h\237\347:p\322{:\221\0378;\336b4;\023\260C;\255\346\214;{D\247:V\240\207;\257F\214:\331t\027;\331\224\326;d]%<.\332\202<\244I\310;c}\251;\036\267\250=\245\"\0278\354\'\372;\242\252\032?\373gW>4\224\002?+n&><Pn>\211O\014>*\022\330=~S\266=\234\214\022>F\354\002>g\241\327=U<\363=\034\313\202=:z\210:\024\377V:Ym\201:\351n\233:\311)\3069\363\265\345:\374\t\332:^\374\014;\216?J<\360\210C:\204\021\335;\026H?:\264\371f;UU\005CL\367\243=\245\225\273=\301PR@\312\346\032>-\205\031>\017\037M?\323WR9\031\014\010>\003I\214\301C\223\177?b.|?\221y\023?\272s\273>\226z\251>\177\317\214=\202\251G>\254\203\332\274d\305\014\275\375\017\031\276b\355\361\274eF\315=\257+\207;\317\313\302:yl\361:Cs\207;\273%0;\240#\203;\337\016\236:\222\010\3509\354\347t:i\2027:\263d\217:V\356\361:Hi ;\205\277A<n\1773<\343\254\206<\200\010F<\356\264\377;\266k\031>\257\"`8F=\265<\313\032\343>8\020|>\334\241\341>\2678\223>*]a>#;%>\252\300C>,\365\016>\245\213\224>\032\300T>\334M\207>9\352$>\2537\022>\326\260\177;\242\035\204:\307(\321:y\272\314;\253D\025;\223\346\211;zn\202:\253ty9\235\326\257:`\271\010:\204F\241:N\244\256:m\200\314:UU\005C1\031\300=e\370\217=Q\203R@\033\251,>\376\224)>\230\020}?\310(\0219\303H\035>\255;\207\301+Q\223?\352E\331>\226\3760>\366\2224>\205\345\025>\273\177Z\274\r\312L>\374\000A=\247m\021>\225\366\243\275wU3=u\265X\274e\250\210:1u\232:\233/\206;\2076\367:\210\003\327:\023\237\264:_d\000;\232\314\276:\351\322\207:R9\253:M\251\276:\211\371k:\253\322\276:\263\244[<\267\036\023<\244L0=\\\236W<\357\002%<\275A\333=5\267\0248\r\276\270<!\235F>\245q\036> \312u>\306\247e>\325\377\026>\253J\030>\334{\317=\345\233\037>6b\315=\005F\000>\374\277\270=\331{\321=f|\312=EW\025:\234\267(:\370\022\203;\267u\245:T\004\306:\2515\206:\313^\003;\177F\275:5\254\013:\325\036n:\030\246\\:,Z\n:\376Kq:\000\000pC\304v\221=Ce\245=\024EM@\303$\031>\267\343\034>SZ\037?\001\210\2269\">\312=\327r\216\301\331\261\346?\315>M?\024\351\271>\225)\234>#\006\031>\010\004\203>\340\020\221=S\241o\275\345\275\225\275\225\246\240<\223\313\220\275\3643\224\275\253\373\005;\221\252\213:\376\363f;\243f,;PCb;\020\177\266;k\024i;\232\355\353:x\246\001;\235\344\267:\224V\240;}\001\021;\254eP;\355l\263<\346%\214<\222\216\263=\003\220G<\232\007\301;P\347J>\035\365\3568E0W=\367\005\324>Q}_>\262\r\201>\230M\305=\262\314\262=\214#\337=\261\270/>=r5>\301f\'>FC\031>\277\202E>h\372\364=\226\325\300=>\254Z;\351\333\233:\020z\210;\213rf;g\264&;\312g\331;\241\177K;=\300\323:ZE\340:\030\342\261:f\244$<\313~b;\022R0;UU\005C\016\273X=-\035\003=<vH@R\035\005>\002\273\022>\215d\r?8\243\2569X9\264=\201\341\223\301\324`\325?\357\271$\276\311\375E>\305\217\014>~\207\363=\316\014&\274\313s\217>\376\002\256=\255FE>\332O\006=\211\023\020==\226\024\276\327\020\315;3\303\251:\242\227\262;7c\267<R\262\242:\355^\r<\033\026\302:\316\013\205;J\223\372:[\314\016;$gr<\372\022b:M\224\030<\301\2453<\316\020h<A\302\363=\026\333T<\232\2071<\017C]>\221\325\0269\322\005\000=\000\260/?R\333\n?\273M\214>*\243\212>\236\2302>\333\331\n>\204(\354=\r\030;>>\251 >\0027\002>\312\\O>\t\326,>\004\207 >\"^\003<\'2J;e\266\253;t \325<V|\205:\261\233\375;;\254|:>q\222;\201\321\016;\022,\243;>V\211<\330.\033:\377\212\324;\267m+C\232\343i=\275 e=\313\024Q@\340\202\026>\001\313\">G\023\351>\2515\2779\340d\215=\023c\216\301e\246\356?\023\312\236\275\252?\020=\203\266\300\276\311\334]>\265\203\205=\241v+>,\202>>\313\271\021>\357\300\016\276MD\375\275\3621\002\276\350\023\020;p\322x:m\246\224:\340\302x:\261?r:\317\nK:;\350@:|\226\\:C(\341:5J\235:F\334\243:#m\";\267\320\257:Mu\031<b\247\026<\360\272\320<\264\357\241<\216\242X<\376-\347=\366\301\3718)D\217<\332!\301>\250\244r>\203\240\365>\221\000[>\027\311o>\251\273Q>pv4>\314\253l>\325\016X>\317L1>d\3243>23\010>0\206(>,\2403;\231\205[:\025\343\213:\221\303`:\2470J:\243\373&:P\2112:r\",:\304\261\004;\350\276Z:\336\307\271:2\016g;\2648z:UU\005C{\364\235=\"g\310=H\275Q@\265=\035>\352R!>g\001A?\233\260]9\277\360\002>\311Y\205\301\222\325\307?\317\224\020?\001\326\002>\362`\005>\312\250\214>\267\215\214=\276\347\363<\014\033\310\275\264\311\374\273\302\021\016=\302\377\362=\374\023\205=\315\367\020;Di\244:0\340i;\365\214?<\277\024G;T\245L;\331\305\016;AX\273:?/\353:\327\017\201:\203\224\026;\352V\253:`\334k;\251\"\022<s\230m<qb\347<\317\2270<rx\001<jB\316=\345\000p8\013\307\247<\216\370\334>\216\211P>Q\331\331>\355H/>=\2138>|\351\033>\010\201:>\242\254*>\356[L>f\336C>&\347\023>+\311\035>6\026\036>?\225\325:\207\266[:\035\2773;\304\317`<\274\211r;\257>*;\375\207\010;\345\235v:\277\372\001;\206\254$:\335\210d;vv\257:\250.f;\267m+C\312<\201=\313\365\202=t\263J@\177|\022>d\226\035>\317\'\371>L>B9\251\275\230=\374\004\217\301\200\230\261?\265\204\264\275=\032\334>\001\r\332\274 >\265\275\007G\256=`\014\375>&I\206>\332\325Q>3\243\304\275\307\220\334\271-4]>|~\241:\310\252h:b\334\337:\177\356\215:\201\347;:\266\311\220:\300\352\314;>\316\213:\001\377.:&\010\3669\247\243\211:\006*\006;\360\234\355:#\223\244<~\367\215<]\353\n>\215\031\241<\221\215[<F\365+>G\243(9=\225\364<\364g\214>\310\352\200>U\356\337>\t\002\234>\203\275\261>_:\r>\333\241O>\365\205h>\206\305\203>\n\366\257=\305n\340=\025\262\345=\010=\371=\275X\240:\034\332\303:\302+\t:@<\037:m\276):\341~3:\360xi;\025/*:\0258@:\256Q99,|\000:\270;\332::cH:UU\005C\340\245v=BLX=\231\002L@4\236!>\00406>=\343\362>\336\272\2649\320\304\245=\372g\220\301\317\001\341?Un\367=\021\250\355>\372\201X>\177\312\027=2B\273\274\342vC\276\345XE\275\214\240E\275\231$\231\275lJE\274\023\350\260\2755\017\212:\275+!:\t\207\344:\025\241\314:\1774D;W\202\340:\353\010\277:6e*;\357\240\025;y[\036;I&\250:\213tR;\260\320\004;k\267\232<\245\020\250<3!\324=\376=\315<\364\257j<i>I>\204\347:9\241\361F=SAv?8\210t>\337\331\330>=\314\207>s\2471>j6%>\2056$>\361\326\030>\312\\>>.\233@>\307O)>\316[/>\304\371\035>N\216\213:\264\257r:\261d\321:x*\222:\014\035:;1O\313:\302\r\270:\241\377:;4\256\014;\336\2514;\376=\252:l/\233;ku\217:\000\000HC\rp\224=\356\323?=\224\300L@\227M1>AP<>\372I\021?\263\364\2179Y\"\254=7O\217\301\006\274\313?\345d\020\275\024\372\001?\365\0210=\271\271\245\275y\221\036>\304\2624=\247\332(\276d^7\275\310Hk\275\341\\Y\273K\340\266=/\255\251;fE\004:\342/W;\321\031\302<q2\313:vJ\231<\207V*:;\247\272;Bj\037:3\345\332;\005\342)<-R\033:\207h0<E\322\005<\'\340?<\201\242f=\327\271{<\201\306$<1\337\322=\rL\2468\366A\210<\004\036\327>\024\2278>\225\017\242>\nM;>\331 \347=\273\215>>\230nc>[\222w><\321\214>\270\014\233>\202\200%>M\036?>\236^_>\205\267\272;\331\355\023:\364\363+;\272\270\334<\224\227\264:\020\321\210<\267\013 :NE\251;\220\267\3419\027{\341;\254@=<[9\3709\030\313\302;\000\000pCY\245.=\216\352d<\240\360C@\344\237\345=:g\374=\266\006\002?\201\344\203:\363:\300=\034\233\247\3016\262\331?db\000=\233\033}<\351\254x\275\212\376L\274V\024\203\276\354\341\316>\250/\360>B-\\<\317V\372\275\213yz\276\0044\261=\302\350\232:\200Pe:\002\203(;\240\034\022:\357\350\235:Q\222\3729T\027?:\245f&;\010\210\034:r&\271:$\205\217:6\217\225:\354~\310:\352 \210<\303l\353;s\010\002>\307*\331<\207Kl<V\244\256>\277k3:d\037O=\237\335\307?\255\275B?\020q@?t^\027?\363\267\247>\377H\250>hN\364>1\004\351>\316U\360>\255\344\005?u\373\343>\345x\321>\271\330s>\257w\301:\021\024o:\016gB;e\215*:+=\332:\374\336i:\201\\C:\2678\024;\003X!:\347\304\370:i\030\272:\354D\232:\250\236 :\000\000\026C~Q\216=\316U\300=\357[Q@\216V\026>\320Z\035>\225m(?.^w9\313\314\310=\013n\207\301~\245\310?*\273\177>$W\257\274\217pL>\306\376\362=$\220g>\037?U>Z\240\373\274\345G\200\275\035yA\275y\356\000\275\313\230L:)\377\003;\264\220I:\323L\255:#]\232:\3207\304:d\365\323:6Wc:j\022\340:\005\320G:\333\\\3239\207\356@:\363X\363:\017\240\210:\206\3013<L\211Z<\010\372\330<\r\014G<\364\346E<|6D>5\021\2708$S$= \303>?l\233\353>\204^\211>R\364\010>\377\276E>\214\376!>8\246?>\3547\206>@\356e>\254\030\227>\005\356%>\304W\023>\201\272\033>\301\262\311:\237\224\005:\252?J:C\013b:\222g\253:\353\233\275:{`+:\346[\326:q\255\227:\221\256\2239\037]\014:\315\361\252:$\013\3729\000\000\360B\356$\254=\345\030\251=E\250N@\016\361\025>F\331\021>\365\021P?\014\216\0279\200\312\376=e6\207\301\365J\017?P\316L>\272\276W?\360\274\212>\321\006\276>\252\013\315<GV\272>\r\351j>I\277\010>\304,\037\275\270L\230=\204\365\327\275K\342S:\270-S:\026W\327:V\254\344:\001\2356:\307=7:Q\"\036:09\246;\007z\274:\202\315\243:\357\212\203:f\241/:\343\304\303:\304\221\345;#\315!<\311\203\035=h\356\377;\023\220\265;\372\213\331=\236v\n8)\003L<\216\ta>\017\241O>{\250\r>\006\2153>#\244/>\236\002\271=\367! >\301\006\005>\024\372@>\264\254!>\264\036\356=\264\027\365=-\242\344=`\350\3249\347 \3139V\'[:-p\361::\212\020: \327\3149\2609\3039\247\003\236;\022\273h:\370\261\257: \210\021:\301\353\3119x\363\240:UU\005C\016\340\200=\233\277\264=1FM@<#\016>\r\211\030>\212\263\017?\233\341\2129\006\034\266=6B\210\301+\305f?S\257\024\276W\377\374> \022~>\021Y\247>\237Q\304\275e\246\220=\210P\222>\335\021\320=\240\005\002>MN\270=\367.\022>\027\323/:\0102\014:\370\317\223:\nI\306:j\341\222:\202+\243:k\271n:\301\3148:i\324\334:\241\316\033;N\232\251:Q\335Z:U\266\\:W\335\234<\000\014\204<g[\225=\263n^<\036\033;<\361\332X>jP\3378\323\007\001=\375\221\216>\004w\347>.\324h>Ol!>\033\024l>r\207\'>\\\312\004>\030hG>!\376M> GY>\370(!>\t\266)>K\337\r>X\000\006:}\345\2259\336y\025:\341\237m:\315Of:\376\342\200:<W.:z\324\3219\037\250\203:E\027\216:\252\224l:K\213M: \023\2269\000\000\026C8\223\206=N\267\251=\320yQ@\003\206\006>\206z\020>\221\001\020?\007\201\2319G\004\314=[\212\207\301d\240\311?\241\256U>\264\310\335>%\321\250=\013\360\304>GK\222\275J\362\014\276\020\223\251<\240vX\274\351\205m\272\r\252q\275\'\373\004\276\331\340\310:\247\254\3779\23716;%\3629;\313\235\307:\373EZ;\363+\224:\235\033\010;\034\212\263:\261\233\002<\023$\032;\215\336\243:_\372-;x\237E<2\262J<b\317\376<>\374\256<Swx<8\031 >U\255\2438\340\340\353<\340\242\325>\256EO>ht\223>D\306=>\022\300d>M\231_>\"q@>\227\262&>S\350:>\237\004->\374\004+>u\206:>\313\231L>\367x\350:W~\033:P\027I;\247R\363:\350lw:\340*\212;\201\334f:%\265\362:\223\374\302: \243\221;\276F\000;:hZ:Xx\241:\000\000pC\310\212\254==\367\223=\334\004M@\242\333@>\250\212A>\257\212$?\334\223\0059\214@\342=eU\216\301\275u\215?\345\366\030=^\027\016?\352\306\233>E5\251>\301\333~>\017\2334>T\t!=q\037B>\036\321k>T\026H>U\243\353<\244\345L:}\366a9J\230\313:9o\275:\264\343\223:\352\326\260:\032\331\237:\\e\326:\035\0174:#\337]:?\025\3659W\036Q:x\030::\257\017\013=\240Q:<\347i1=\301\326\362<d\230\226<\232\357\230>t[\0138\210m\261=\222>\250>c^b>\216\356\364=vJ\330=\214B\252=\272\201\361=\177\267\312=?\337\030>\257\004\324=\371~\001>\221\377\300=\335m\300=\t$\326=\026z\2609\371\t\2468\303\260/:\'\357s:m\034\036:ymM:\204~A:\031\272\230:y\334\3119\320O\3779\017$q9\244^\027:\034\363l9UU\005C\250}\246=o^\017=\341\023E@9\0249>p6A>\252\213\036?Q\264\2049L=\256=\266\230\226\301\376\307\000@\357\243\024?\372\340\316>\363s\236>\306\331\330<M\342\022\276\237Wx\275\306\220,\274\376W\010>\034q\301\274\010\n9\276\016\247\024\276aB`;{\204\340:\355\353\020;R\022\310:\030\3168;\323\304\334:\214\363^;\303n\222:\235\215\366:(\206\334:VL\350:\216\026\333;3\230*;\335Bo<\226\203\030<\005W\023>O\020a<\346\2750<\331\263(>\002\247\3208\242:-=\r\312P?\250\210\304>\220\267\224>T\365\202>\211\242\321=\245\232r>i<\376=\237pD>@\374P>\033\245\036>\345[+>\255\302\353=\316\257O>\030\026\026;\363}\317:\237\226\003;1\347\373:\243\372u;\251\260\227:\016?C;\001\3512:-\254\243:\300\033\304:R\327\t;\225d^<]fl;UU\005CGOZ=\037\031\354<>\013A@\260\200\037>4\0163>\205\334\320>\333d\3449\360>Q=*\035\234\301\005\353\263?\230J4>\217\003\t?\345!\336>\032\260\301>\276\320\357>\002\007\275>\002\277^>\022\223\336=T\275\335\275\325Y\224\275r\307\271\2742\006H:\253W\215::\361\013;\306@)<\335\351K;=h\323:z\307H;57\201:\232\211\216;\310 5:\323&\\:\271\t^:\262\330U;\272\205\222<;^\030<|X\003>\247\252i<{G\016<\256Tj>F\033R9\372\264/=\022\013\374> \332\221>\024\021\327>8\331\277>\237Tg>\024[c>\231\300d>\001\265/>\355hU>\216tQ>\020Uu>)\2379>\001\321#>\306zn:\340\212\243:\3666\300:\006\031\007<\256\3714;\226\"\332:+y\032;5\314\215:\177\253\232;\305z\3279\014?\016:\274\305%:N\346\007;\267m+C\370\266G=\203\266\003=\351\237K@\021\216\366=\214\345\023>\251\220\314>H8\2329t\276\230=\025y\220\301\315\325\334?ld\001\276<;\n=\302\271\210\275\222\256p>>\222\035\275%$\001\275\000\223A\276jd\337\275\035D\257\2742\341\027=\211\227\316\275\372y\214;\335\241o:\367\r\350:\233\222\001;h\224\013;\367\035\n;\010!\276:\270\253\242:\271\366\276:\222\234\277:\337\232\374:\203\032\331:\241\357\317:\2604$<A\357\r<\311q\207=7\242\200<\235\346Y<\244\312\370=0\216\2348A\310\221<\322s\037?LY\247>,l\274>\203\330Y>\324=\003>\262K9>\250\223\001>\364\257^>\030\000\026>k\243\033>\364\037\031>\220\230\374=\274m)>5\2505;-\2121:@\277m:ty\005;\326[\001;\265g\263:P\303p:i\374\201:_\373\263:\016\302\302:e\341\377:Y\014\232:\220\222\':\000\000\026CI3\270=z#\220=\330)F@\264F+>\026\2630>\001\202$?y\255\3658-\342\275=\306n\217\301\022A\242?*C\023>$\326\323>H\247\200>\220\300\326>\236\216\222\275\006\214\024=\377\347\025>\204\261U>\352\033 =\325\247\265\275\230\322\323=\207\356\3179\003\366\3579\303\2264:\327\021]:\204\325u:i\335\031:\364\023.:\225\327{:$\216F:p-\225;\340\000x:\344\375\2719\314\303\251:N\334\350<\234\312\306<\266\310\336=6\277\314<GnV<CZ\311>\002\317P8\306\020\226=\036=W>uF\302>N=\227>M\335\226>\262\2578>\375\270R>bo0>\3738\263=eL\275=(\232\023>OF\007>.\252+>\274\356\312=\323\276\2519>\304,:\214\360\2069D\r\014:\020\320\33695\316\23398t\017:\225,\004:WK\3309~L\377;\372\\s:\222\013j9,\030\007;UU\005Ch\225\330=F2\037;\350\366\003@\270\345\007>\220{\356=\262\326m?\365\266\3049\353\0202>\340\344\271\301*\212\212?\214/r\277VX\226\276\257\272\\\2764-\216\275X\3622\275\036\306\363\275\274\010`\276\333S\003\276\030\322\345\275\257v\030\275c3\253\275\242\356\023;\223\200\017;~g#;L\212\032;\001\323\351:^\257\371:\212T\004;\323\261\366:qR\331:\t3\351:\222\277\343:E\254\361:\251\327\336:\323#\353<\251T5;\013\241K?+W\023=\354S\215<\251k\003?\307\014\2609\226\033\255=\275\371 @0\025a?\344\374%?&\306\270>);\262>\261\274\255>g\032~>B\002\210>;>\204>\361\3226>\253\206\227>\332\335w>\215\322M>j\013/;\331=\023;\364MB;\036\274\";\355\001\274:\363\003\236:\306V\010;>z\';\301\016$;J:\330:\224l\n;|\321\000;hB\215:\000\000\026Cp\230{=\247\357\326<\326\367I@d\374\316=\271\307\326=\\\240\007?\240\373\2359g\341\311=\341\007\223\301\275\264W?4??\276\036\205\311>z\206\310\275j\370U>7\325S\276\317\344\327=\270g\206\275\332\007\246;|\273\276<\201\313\314\2758z\215\275\246u@:\2157\223:\213\210\255;\262\224P:\216\361\265:/\0361:\355\206=:!\357\242:\227\234Y:{O&;f\\\201:h\273n:\260\370\332:\013\216\026<)W[<\244\332,>\364\351\377;\361\230I<>\257+>\344\013\3078\014&\200<\253C\207?\374x\341>\016\004\244>E(\216>\274\030L>\003R->-\023t>=$\006>fw\356=\002\036\020>OEQ>\321E\375=oJ\300=\242s\034:\306\213\372:?\004\213;\211O>:W\013\204:\352\317#:\034]\3669@7\206:\334\370K:\210\335V;\242Mi:\323\215?:_u\240:\214.\332B\333<\212=\303\to=\"\225P@\360\360\027>\3679#>\246\326\023?S\247\2349\252\256\300=\205M\216\301\276\033\253?\277\030\002>\266\001\231>\367\010\030>\2345t>\327\301\271=\350?]=%\034\336=C\355\n=Dt\362\275S\223\327;\327o\337\275\010\243\303:B>\010:0D\303:,jO:\275\325\261:\271&Q:)\227\221:\374:A;|\0315:\310H\231:\316\\4:\317i\224:gL\275:\201g.<Qp\227<\243_\034=\253\'?<\tS\332;z\346\353=\037(\2059\217w\266<\346\336y?\231F\225>\364\233\256>\217It>\263\222\035>\023*Z>\344y\013>\030\270z>\207\260\221>\252H\212>\361\310\'>\200\237n>\t\307M>\023\227\323:\270\301\027:\014r\344:\215\205\251:|\251\030;\232\301\":Wt\246:\250\341\211;\305\246\037:sXp:\362\322\001:\276\353\003;F\315\222:\212\235\270B^R\317=\321Y\010=\3269J@\016@$>>\342\036>\303\321\213?\261\245\0319H|\036>v*\223\301\233zP?\334\327\215?\016{\313>+i\200>p\372\220>c\306\307=c\350\'>\333\213\013\275\316\t\313=\'U\241\275\214`Z>/%2\275\343KA:\274\t\t:%3\004;\007^\302:\003\253~;Yz\\;\357-\241;(PI;i\264\312:\2432\004;-\323\236:B\020\t:\323d\016;RU\233<\237\221\300;+G\016>\034\241a<[\226!<#\360\004>\306\372\0348\363\230\314<r\215\332>PEz>T\024x>\'\271\036>4\344\021>\237\273\031>\253\016\001>k\335\360=U\004\360=\334\346\007>*\n\330=\256\305\313=^\n\272=\337\231\3119rY\2379\254}\230:\373t\242:\330\376\214;\303\245B;\257\345\224;\256\2567;\262\377k:\262\223\352:\224\177l:\337\221d9\320\254\260:\000\000pCDz\010=)\243{=\033\335G@\274\031\357=\036\220*>\206\032\033>u\037\344:\004\255\030=\n\230\232\301\003\267\030@\224q\371;\227.\210>\362X\363\275\306\266\354\275\320\331o\276}-\322\273\352\262\273=|+\341=n\263E>\364\324%=\351\356`=w\014=;\226\372\013:\270\363\257:\205\265\002;?\272;;\024\203\257:\334\367Z;+\314\036;{0\2159\004\254c:\022_s:p\021\027;\344\264W;<\036(<\357\342\315<\351\255#>!\305\026=\361!\004=\364\203\303=*\252\207:\276\300Z<P?\241?Q\340\000?#\317\005?\231\257\300>\215\023\263>\021\353\230>\320\205\240>\0035\214>\234(\334>\315\315\366>1F\326>\256\370\274>\367=\272>\323\226\r<\224\"\221:2\236\023;T\021\241;\243E\266;P\246K;\025\355\371;\321\036\030;z}\3459EK\205:\365\263\223:$@\245;\340\240>;\267m+Cw\317\207=)\360o=\361\202P@h\307$>p\2060>\202\335\023?\366\234\3559\031\177\271=\3336\221\301S\237\314?\300\315\365\272\301\'T=~w\001>\016\343\221=\234gz\276\036\322\232=T\275\212>\320\345)>=\350A=<\005\241<T\034?>\227\2053:;\004\013:6\350\t;Q\365\230:\376\205\353:\245\371\002:B*#:\013\346\002:#\'f:n\236&;\371\016I:T\241\354:V[\271:\023O|<\026N\255<\344\311o=\006\010}<\006L><\374\307p>\273s{9\344\336\022=\377\335\214??\246\217>\246@\304>\345\362\316>\312\324R>\3309\204>,\007f>?\330\262>\327D\202>\023\333\202>]\254`>\345q+>7\306*>\222\177\260:\017!B:\356\\\026;\344\205\304:\370\272\003;\270\343-:#*\210:n\354\3359+\303\036:\330\006\035;\360#):}\372\216;8\361\227:UU\005C\272\314\214=Z`\305=\332\204E@\331\245\035>\037\0161>\335\246\333>\307I\2019\261\314\206=\307\005\213\301*\222\310?B]\370\27520[?\266k\252>\257;\252>8\033\017>\024\262\366=)4\003=\325\263D\275\254)\000\276:\251\364\274]\200\310;\035\332\243:\257\344v:\223\205\235:\000\010\374:\002d\252:\205\307a:)\262\250:\273\241A:v\321\224:\023\210\334:\362\314\204:ur\020;\206\365U:\330\371\326;m\376\341;D\'\027=?\255\337;\334@\275;e\027\374=6\010\2318\271y\304<w2\211>\350\021w>\346\250\377=H\335\306=\354\222\254=\306d\221=\327]u=\t\336P=p0\226=\002\340d=\033o[=\343\331\033=\330\377;=\'\t\007:\035;\3729\372\004\036:\347(\211:\262\313V:T[\025:\315\030F:\354}\3139\214\3223:\016S~:\235\224G:>\022\323:6S\2529\000\000\026C\t\324\332=b\263\366=\334\267Q@;\0269>\342\3220>\014E\213?\311\023\0009\\\r5>\333\216\201\30159\205?E\260\002?6x\222>\363\357x>BP\327>\251\275\347=\302\227T>\305\362\204<=\030\001>\236o\001\276\217\215\317\275I\004\361\275R\260\223:\362/V:\"s<;\345_\226;\235\240\254:\250\324Y;9\007\276:\220?\000;A\251\342;!\215`;(\311=;\246k\254:\351\226J;]GZ<*\031\031<\220\354\261<\302wv<\352\274<<o\243\374=\350\250\0038}\r\347<\026\022\254>\306\251M>z\220\232>d\234\">\327\337\000>\336\313\r>\200\007\372= :\366=5\353\361=\230:\002>o5\277=\220\300\250=|\272\230=b{N:\"\354\240:\010\025\221;\217)%<_\242\233:\202\276\034;\025\324\211:\233D\326:\005\332\027<i\277?;rl\265:\273\356*:\257\276Y;\267m+C\002\245\354<\220Z\230=\231\212Q@\007\341\262=\206.\367=&^\010>\251\204\275:&\3179=\354\357\227\301~\"\001@\364\002\330\276\226\237\007?_y\245>\313-j>\030\250\202\275\010\210\306>,f\363=v%\023\276+\310\013>8\375T\275\274\344\367\275N\326/:U\210\2739\031\005\3519Pj\374:\"L\2049\275\304r:\331}\2769R\035]9\324]e:\322*H9\3608]:\261sd95\004\202:\330\303/<\no\253<Q\025G={Z\210<\323t\237< \204\302=\031E?:=\223\237<\235]\350>\334\326\000?\201\206\203>\250\237\206>^JC>d\354]>Q\031t>\346`\247>\301x{>]i\225>z\360y>WY\220>i\246Y>w*\227:\276\323p:|\305\021:n\3078;\014\247)9\253\223\334:UV*:O\250o9\363G\261:\370\026\0249\007\353\272::nc9\372NJ:\000\000\026C\t\357\253=U\256\024=\220<M@\353\263\027>\204L\026>\n\304]?\306\230c9\225\303\010>\233\000\220\301:\334\022?\366\341\222\274\006\236\"?\270\r\000>\256\251\211>\210\224\207>\302\215\203\275F\245\016\276\320~\t>\220~\005=F\340\031=b\362\021\276XzW:\213\277*:\221^\254:\331\244\201:!;\206:\023\233o:\355C#;e*\262:\215\225\332:c\377\207:\355\271):\n\230X:\225Y\213:e\027\326;\265\241\272;I\227H=\005w\310;]\023\235;`#\364=\033\317i8tx\235<%\223_>>\020\014>\326\334w>\373\360\027>\215/W>\276\243=>\340\\|>.;\362=D\316j>|Md>u\234*>\353D\\>\3250B>\203[\005:\254\025\3259\203\231R:\023\312x:\372\274G:\363\373G:E.0;\362\207J:\307\345\360:\375\330p:X\352\2509\334\315\246:\257\223\':\000\000\360B1\207\251=&\304\205=i+;@\227\342\'>\243\0265>pM\n?h[\2079\211y\256=\234\252\220\301AW\320?\302\321\307=CJ\340>\351\367\350>\007\275\245>\207f\260=\032[\241\275\374A\217>\013z\251>\271\003\320>\342\3528;\374\367\372\275c%\3529\177we:K\205\234;\266\264\000;\327\002\315:\245\365,;t\'\342:\321\023\371:\006$Y:K|\237:y/\200:\337\3208:\212e\314:\246\356\'=v%\033=8\251t>a\352\335<\272.\217<\033\327{>\027U\3628d\353g=\272\334\223?\235C\216>\326K~>\265\210\200>\220\220C>l\343+>OIB>\316\354\377=T\2205>\026\206L>\214\267>><\026\027>\'$\373=\257~\3679\030\010#:\033O\204;j\271\357:\007Y\235:eP\247:7\201\226:\346\010\234:~\217$:\376`\214:P\246$:\377\341\007:\314Qy:\000\000HC\371\\\370=\025z\232<}-K@TK>>_p6>\276\263\212?\267\003\t9\3131\'>\"4\232\301\r\035\323>\242b\214>\224\331)?\272?\276>\177\034\276>\'\320\256>\2655\316=\301_9\275~\272*>q\337\033\272F:3\275\245, \275\331\202G:\204m(:Fz\020;\374\364b;$\251J;\235\373\030;j\344\303:\003\260|:Y\316K:\337\030U:\\\363\354:\035dk:\321\035\365:\214\374\213<&\036\342;^\' >_T\271<\204\207\321<\202\265;>\'\324]8V\227\311<i\351v?+\017\213>\334\255\006?\232\204\316>\246,K>\006=\214>u\2276>9\207;>\222\3476>\234\007\343=\240\037\024>\227I\301=\376\315\376=\276S\2739J\307\35497`2;\374\272\254;\212\317i;\300\225\017;\324\025\253:\256f.:O\200w:\3669^:\2352\273:ev6:t\302\267:\267m+C\275n\271=\316\025j=z\213N@?\300\030>\274\371\025>\306d{?\220\357\01799\031&>\237\335\207\301/\\{?\220\3022>&}M>*\024t<\032\006\253>f\324\244>\263\226\201=p{M:\305\021!>\35641<\355!\322\273V:#=\242\205i:&<\235:\013\224\325:\241\354\333:\213=\307:\325\374\037;\'\314\";\321\310\335:5c\257:OR\013;g\230O;\363\246\202:\214\374\253:\327Wx<\301pB<V|\345=c\343\212<}+><\203$D>\356\350.8vJ\327<m\335\315>\177c\206>,\244\215>q\231p>\276\004q>\351\253R>%\344\020>\340\003$>\2019\016>\210??>6\254\357=W\227\346=\304\240\364=-\301\026:\353\373R:\244{A:.\371~:3\306\225:\034\230\335:\222\246\356:\237uK:M[\236:\021\345\255:\314X>;e,#:0\006(:\000\000HC@:\241=\031r\273=\230\260P@\265\325N>Cf>>\326\3513?\333Ex9\032Y\326=2\247\216\301_V\337?\3043\244>\366]\210>\261\356o>\347K@>8\351.=k{\025\275\002\025Z<\325\303\304<\360\3330\276fi\'\276g\311,\2765\n\240:>\351\025:\210\316j:\277d\203:\243\341L:C\337\317:\312?a:\353r\003;`\202\013<R\351\313:\276\213\200;\275b8:\275\360\032;W&9<\254\224\354;\202#\222<\275\316\326;F\330`;@\002\330=)\345\3108w\3518=\026\333\241>c\242?>^\223e>I\360\035>\r,\035>3\366\035>\315k\023>\024\356\n>?g\032>4\227\331=<\234B>\375\301\254=`=\036>\214\371\216:v\255Q:\001\241\3249\023\315v:=\360\3069~U\240:[\216\3779<(~:$\"|;\357\222t:\354\313\";\3350%:\025\321\211:\267m+CzI\202=bq\313<\376\317K@\030d\021>\310 \037>\316\243!?\277\350\3069\343/\326=\373\357\227\301\325$U?\224\354%>\013\276\356>\342Q\222>\204\321\336>F\036\221=\035\rF>9\361X=K\321G>$k:>2!\026=\013:Y=\332g\000:%\322 :\265\261.:\305[\035:\007&W:l\356z:/\3649:a\235\205:by\001:}\372F:\'\320\005;C\365;:L\362I:\315cy<}l\022<l\207\004>\264\t\202<\302\230\203<\035Fn>\246GC9w\361\370<\372\314N?\250\374\313>\331\212\255>\373C>>]H]>\225\272T>\325\225\214>y\365\234>\026\010\212>\014\224\200>\335#Q>x\345I>xR4>\266(\020:r\207O:\361J\t:\001\325\032:\301\261l:\316K_:m\253&:\003\"\212:\270S\3269\212\213y:\276\324\370:\177\317\272:\204=\017:\267m+C8\200\277=\346\354\207<\031\200G@\\bV>*)J>\267\035V?\321\310k9\266a\021>\235\236\235\301{Y\300?\323&\357>\366\222\300>om\000\275\277\375\230>\020\376 <x\277\261;\002\311\343=P\214\216\273\221\205\235=\253\377\263=\003\245\321\274\352A\020:CD\2749\372_\350:v\354\262;8\254>:\225`\325:\n\351\210:`\202:;\254\003F;\245\004S:\000@\244:\356\365\2759\030~\033;-o\026<1y\230;\225\323\320=\002\025\303;?\345\257;\212\272\r>;.\2528L\314$=\316\345\025?gW\225>gp\230>\3439\240>\236\334?>\277%\003>\026\340\356=\276\251\022>\232\335\321=\314\371\004>\003\355\013>\232\033\006>\362\222\243=\326a\010:\214w\2429\373\325\372:\210\201\300;\217\202\026:z\223\373:\"1L:-_5;A\320v;\2522\000:\000\211\266:\346*\2039@A\251:\000\000HC\312}8=\002F\n=!\323>@JB\334=\007x\002>\264\317\256>\232\226=:\333\'\222=\376\354\232\301\361\271\214?\203\3776\277\304:\317\274\003r\351\274\016\241\351=\277m\333\275\333\203\206\276\210K\035=\356\200\'=t\357\312\275B\341\266\274\014\274\276=\236\321L;V\004b:\354\374k:\257\246\227;[\355\266:e\234\023;\242\354M:B\375\374:c\223\370:#\316f:\355\307\206;t\346\271:C\373H;p\340+<\226X\332<D\373\237>\314G\217<\240h.<\361\301K>\300{\3329g<\335<\256C\243?\031nm?\372\351*?\322B\354>\267\360\265>\t\270\310>\226\014\257>\301\306\361>\205b\307>\307\374\362>\364\351\302>T\341n>\276a\226>:E\222;\213\327\265:E\351\225:\364\357\343;G\364\022;\266RO;D]\247:l\355<;\224\215:;\274\363y:\032@\305;-\"T;w2\374:\214.\332Bu.\344=\014\336\227=|\201H@\335\240]>,\200<>C\306\206?\260\274\'9X\326b>\016Y\221\301\370j\272?X\300\211?\304?\301>\230\262%=\352\2037>\324\034R>r\035(>\035\305\254=\260\327D=F\333a=\334.\010>{^\021=\030\364\3029bk\2779DD\322:Z\261P:\301$\227:_\351\244:0\021J;\337\017M;\374vZ:|0z:`\270.:\242\320\223;\364\341\366:\201(\021=\276\356\264<#X\241=h\274\034=\351\036\225<\3604\262>\"\331\2278\352\223\262=\002!\200>v\325a>K\tT>A\001x>\2115\010>*f\370=\316\257H>\247\276\347=Q\254\276=\225C\346=\314\330\354=\"\ru=\373.\201=`\236\2519\357\266\2059\255\364\213:$c*:\372\236p:f\226\221:\377\227\355:w\320Y;\246D\026:\314\332\032:\036h):eI\217;\346\t\205:UU\005C\202V\347<\260\302\222<\034==@\200y\227=\013p\364=\214\342\345=:\026\350:S\244)=\0215\251\301\t\360(@\357\245c\277\002#T\276O\227@\276\206\323/\276\261\240\304\275S\355-\277Y\335T=^j\314\275u\354\271=\374\032\377=\236\276\236=\237C\223;*\"\344:*\034\005;\255\327\013;\263\331\261:\026\367:;\350\010\035;b\\\\;u9\010;,\013\r;!\341>;B\337\350:\3304m;P\263\276;\307\246\237<%\305z>\0039g<\345\203\317<O\023\377=\226:\206:\252\222n<z\227\000@\232w\212?x\264\'?]\243\365>\347\221\337>\336r\321>\322F\346>\210G\246>_\364\220>vj\263>M\212\n?4#\350>\206\307\241>mq\030<P\372R;\375\327\213;\334RS;\017\325\242:\004\014\246;\322\2167;\330S\250;PG\215;)\025\256;\347\022!<\257E\241;\313\322u;\267m+C\232\001\332=\377\231w=\200\252Q@r\2779>\0021(>\346\345\226?]J\0009\376KC>\035\323\214\301\231\311\265?*\353\202?\032\276\356<\251\006\340>\220_\211>\323N\231=\256\n\254=s\317g\276\200\3557\275\243\262\275\275\370\321\032>\342\321\234=<\000\266:\201\233\203:\036\331\t;\231H\037;\212\253\177;\370\230\221;g\t?;\256`\345:\014\'\026;\253\362G;F\332T;(dE;\227l\007; \006L<t\2354<\361#,=\027\2361<oy\376;\355\371\020>\\\333\3627\311E\355<\323|\033?\t\371\036>[\007\356>\226:0>;7g>\256\305\022>\277\003\306=E\322\310=\021\375\305=\272~\024>R=\301=\274\260\276=\236\005\335=\272\361\223:\337UM:\264\232\267:\tM\346:PLi;v\255T;\314B\317:\306)\244:\333\014\375:N\003C;@0\';\027!1;\031\\\212:\267m+C\261$\301=\346\265(=\227YD@6*4>w\037.>\"/r?\231\014U9\330\024\032>\237\261\221\301\324J\304?\223\267\351>B5\306>&\334o>z\326\333<\013d%\274\t\2013\275\005\337#=\252\351)\273\273\233\215=\345\344\331\274\360\210I<\024\031v;\0024\032:\2019\230;b;\225:\221\202\222;\236r*;&\224/;\213\330\303;\336~\312:Z\242\367:C0c:\207r_;\034\236R;\347H\310<6\2446<\375\262\037>\257cS<\3544^< \314\262>u\265\2708}er=\314\230??jp\t?\242\374\305>Y\252\270>\005\023\032>\304/ >\r\310%>\n0:>4^Q>\264sH>\207`%>\255\313\021>Q\240\">\271Oz;q\201\3369\311\266r;\260\2541:/}\017<\244\351%;\220\305+;\344^\251;\033P\236:=>\034;&\334>:q\331-;w\200\017;\000\000\026C\277N\022=\016o\004=P\024A@X\357\267=\324\337\332=Ki\265>k\372\210:\247\275\223=\376x\235\301~C\362?\321\325\364=\333\311\257=u\227i\275>>%>H-V\276!\337\230\276\257\227\260\276\354\307\235\275\3558\354\276\275\244\342\276H\t\210\276\n\247\023;P\333\251:\304\231\220:\334YD:\270\277\010;\016:y:\370U\245:\357P_;`@n<\306\006\357:X{\037;S\2459;\274\221\237;\'R\256<p[\231<C\333,>E\203\002=1K\323<\366P\243>\210\005B:T\212\206=\231\357\217?\0204J?\306$\371>\n\377\232>rB\263>\374\331\016?\337WJ>e\362\263>\353\316\222>\335\273\211>\245!M>_\371z>\021E\213>\303\224e;8\'\277:\203\233\003;\306\305H:\276\251\263;\341\305\221:\227\310\246:\375 \201;>+\203<\362\211\251:\233\2116;\037J\210;a\252\203;\000\000HCLE\032=\322\036\247<\274q7@\342\016\000>\206\r.>\311\023\'>\3176\300:\262a\007=\235\033\251\301M:\007@\014\237\211>{\221\234>\311\t\r>\342\334\323>\372+o>W=0>b\300\227\274\375[\304=\310\\\351<,HD=1e\367\2740\201\327:\367\376?:\343\272.:\271F5:\364PA:\033\301\365:\033\260[:\004\272\3519\242hv:\241\247\3439\027\200G:Z\241\214:I\312\203:\273OM<\334T\'<\321D\205>\300\323\211<\312JW<\237\024\273=77X:\337\371\234<\317~\311?\347\254\352>\204u\332>\3070\335>\2072\311>\231\236\253> -\242>=%R>!\356\241>Y1\205>\373\0245>x\022?>\022\311!>A\274%;_\330\226:\222\327M:\326\214\3729Z\034\343:\225\275\347:,F9:\327.\001:\242\024\233:NN\000:\202Nf:b\005\253:\335\246;:\000\000\026CcVW=\214\266\303=\204bN@\333\027+>\332\307B>\206\265\312>\272\321O9S\225P=\200\327\211\301\364t\306?1Z8\276\206,\251>A\313\203>\256\347e>\227I\335\275\027\364(>?\030)>\311\231t>\341;\016>\364\355\324=\252\267\035>,I\27690\210\2319\366\032\225:\214(\307;\271=\n<\252,$:\252y@::x\3259\356\237w:\016\007\t:\002v\006:\036A\202:B\214Z;\205z\t<\352\362\036<Pt\'=dJ9</\016\346;H^B=\310B\2708\014\207\362;\023Ws>k\245\022>\374J\220=t3\005>:\325\316=\341\313\264=\277v\224=\270d\330=\216\241\257=%E\200=\260A\233=P\250\277=p\225\275=\"\023B9\302\313\0359\223#Q:@$\242;\251\210=<j\355\2269\034\273\2159\303\030`9\277\2777:xg\3549\177\335\2109\037\277\370:&\3669;UU\005C\021\177\372<\331\236y=\030\231L@\003\324\010>\033\255\030>\320\323\206>\030>\001:\217\276\334<A\307\236\301\">\336?\224sc?\307\225\347>\345\303\272=\240\252*>\255\325J>\365H6>\004Z\260>\343x\252<\240\304\024>\\\207\021>~\220\276\275X\373\3079\313\305\3109\256\212}:\323\375\001;\016<\222:m\037E9&\251\2749o4\3049\003J\304:\245\002\2129\016\250V:\267\217\t:\272\336.: \221\356;\225\375\334;8\262`=\212\202)<\003\211\002<\224w\236=\365\335O9=\354\250<W|\002?\303A\236>\311R)>L\376\001>\236\265\373=~\252 >\217\315\">F\030p>\325\254f>\314\0321>_\031L>\3140:>\024*d=[\25399\350\016\2329\003\213\33191\213S:\251\235E:(\344\2348\257\316\2039lh\2139|y;:\345\374\3328[\353\3049^_\2769\205\\19\267m+C\267\014\246=#\233R=\240\002C@\331\001>>NEF>\306\274(?S\306d9P\277\303=\026\321\221\301/\356\316?\244(\276>`\373\253>m\352\315=\337\016\333=\331@=>\006,5>I\221\272=\212L\355=\034\007\257=\025\023\177\273\242u=\274\3348\013:r\2469:\324$\241;\246\014\206;\271\216S:O\332j:\240+\\:$ \232:*\242\223:\242\'\235:\211\237q:\275&\3779\207\313\356:\nA\201<\315{\330;\027\007\304=\276\017J<\361Y\377;\0241B>\271\327\2268\366\2310=F\366\265>\270\2656>\363\316v>\033\313K>j\247\351=T\231%>2\243\363=3\306 >\353\200\033>\004#$>|\3322>\2431G>\010\376\034>!\027\2329\354\301\2629\360?\217;\263\031\266;\"^\27494\033\3469\"p1:6sL:\273\311\027:\021\250C:@@T:B\254\2219\371\311\322:\000\000\026C\367`\306=\235M\242=\177\243O@b$3>\021\204*>w\305\217?\354\014+9O\320&>\332\327\206\301\227\211\211?\240\030;?X@\201=D4.>\n\355\000>\007=\315\275\236$7=\\\003\203=$T\225>Dt+\275\307\370.\275\316\0146\276\234l\177:\345\372.:R\363\244;\201\026&;\305\003c;)Z\321:\022\300\t;7\371x;S\336\032;\017\3555;\006\032\324:\321\351\371:L\"\035;}G\216<P0\314<bI\337=`\355\376<\330Mt<\274\212\216>b\023\3028\227\230e=%IY?\216B\211>\'\017\010?$\211~>K\007}>D\227+>\264\0257>\2423\332=\220\r[>\247\351]>\241\000\372=\214\3601>\303\005\344=\212z\034:\223\252\3519\365&\305;\346u\030;E\0310;\235F\234:\245Y\345:GG`;\327\266\031;\327\326\022;r!\236:\367\207\013;Et\263:\267m+C^\317\346=\325v\257=\206\334Q@B\332V>\017\0224>\314\014\234?{\307#9\213Wh>L4\216\301\3075S?\001\252\276>\034\013?>|\221\237>\271\2573>\3552U>G:U>\243\335\343=\322u\310\273\300\342T>\303\336\207=\340\305E=\370}\2259\247r\3539x\334.:\224[\031:6\211\241:\323ZZ91?*:\207Ts9B\330\2679\023\004\3769w=\2529\336\264\3639)2\34796i\226<X\206\\<C\001\220=\330v\276<D<2<\375\363a>\313\334a8:\002\217=\321\000\021?\246Qz>o\246N>\251\263$>\312\023\366=5\350>>\354@\\>\230\262I>\345WQ>p\244M>\031J@>\355\215\033>x\010\013>t\310\3538\0372\2729\367D\3059\360Y\3449>5\224:E\364\3518\252\326\2159^\316\"9\033ep9mb\024:A\322\2339\n;\3419\243\035\2149\000\000\360B\347\265\"=w\340\215=\003\037M@l\202\354=fu!>=\2436>*a\033:|\253:=\235P\216\301\207[\020@d\300\225\276\365\003\271>\"\036[\274\266\260B>\354\340\017\275\214xL<\355e\215<\216\327E>\354Ye\275\327\275\232\2758/\227\275\306a\245:\216~n;c\323\371:0\377\024;0H\255:\270\243\033;\255t\250;\236\021&;Z\351\203;X\315N:\356\016Q;\030\2053;\320\206j;\374\251!<\344\314\277<9_\214=\212\337e<Y\201K<\321\016\210=\001\364A9T`Q<\204)\025?S\'\211>\331\225\331><:o>\347\377`>\245#w>\214qU>\225\034\235>\224\215\213>\023\376_>q1~>\213\223\210>O\241\200>\212S\000;\2671\212;\013\225\024;\333\026\033;k\345\372:J\255\013;C\342\235<\245\250i;\217\327w;\362\004+:5J\275;\035\322*;\344\250\247;\000\000HC\341\330\260=\201N\335=\252\tP@\355|\'>\007\034(>{Ud?K\030+9\226\204\021>\331=\204\301\271\224\216?kX\207>a7\304=<1+?\027\025\215>\224Q\376<v\201\016>\004\320\204\275\231s\333\275p1\230=\211sR>\336v\361<\0339\312:\200\033\256:\325\231&;\215F\253:\357\177\310:d\204\343:S\365\320:\365_;;\316\355\017:\021uW:\235\'~:\247&\267:\337\216\245:\020\013\223<A\3741<\344\262 =\261x\205<V\301H<\215\275%>\032\346A88\357\251<\372gc>\321?1>P\021\207>\020\327D>Q\373=>\270EL>\261\254}>0\266\034>,.$>\275\0334>l\247\027>A\321\025>78\n>-\301v:!}\301:X.\001;,c\206:\222\353\210:O\230\035;\327\241\214:\316\021\036;\2402\2329\277q(:&*3:\202m{:\331\351G:\000\000\026C\201|\253=[\310\233=\303\200K@6\3560>\334\2574>\2271,?7j:9IE\325=L\025\217\301\023h\327?5\360J?\270\313\227>\314\313\274>\341\341)>\204\230O=\324b\037>(WY\275\257~E\274g\\\272<\224\316\272=\003\022\204=\'!\3749m8,:\254\351 ;]9\266;\250K\263;\265^\320:\025\004\276:\274\262\271:\3011\355::-\343;\365\255\212;\266\242x:}\202d;\222\224\203<\250\n\211<\213\206\262=y`\264<.\300S<\002\036\013>\231gf8:q\377<}\253\237>\250o\t>\233\205p>\272[\021>\030_\">\230K\224=\333\000\312=A#\313=\207\212\327=\205\337\372=B\345\222=.\244\205=6\266\200=\330\267\2409\314\276\3029\335\217\304:\210:\237;\247\341\223;\250\264q:\365\244\257:\243[\304:\321d4;p\274\247;\006\227\331;\377t2:\\\230\316:\000\000\026C\370U\236=\327\236\031=\372LO@\245^4>\037\317;>&\023\034?X\371\2569F\027\272=\225\t\223\301\264j\326?a\276\355\274\010O!>\226n\204>\363\343\305<\222\265\244>\017\332\031>\365\364\323=\321\303\363\271\250\340\224\274\033+\310\274\231\213`=\370\364\035;\2352|:ys\323:;\372#;\206\033\276:\357t\027;\362-\305:\361;\304:\370\005*;H~\244:\034+\203;\354\032\223:\316\274+;\340kS<\346\360\304;\213\033S=\356\tE<q<\351;v@\033>\305<\3118\027U\n=&\367\304>\244\325\206>\246\314\201>\256q\312=\267y>>50S>{b\201>\225\324\226>-m\217>N\006\230>\231\377|>\321\3557>\260\311\361=\245\360Z;\201m\004;\264\321\021;!b\245;a\353\275::\222:;%\350X;\243$\016;\364\340Q;\210#\337:\343q\246;\034\252\217:[\004\313:\000\000\360Bu[\226=\0310\223=]\033P@l\014*>\255\317.>*\216C?9\337\2359\345\236\366=\370\255\212\301\255Q\231?\267l\330>>\366\255=x+\373\274\267[\305<\253\234\253\275i\263\357\274\366\3540\276c\306r=\301m\213=4Z5=Fl\014=\034A\246:\337F\233:\324I);_\221\212:\276~\002;\370\247\r;\266\361\260:\263\351\325:\\\375\215:AM\206:\355\362\n:u\266,:\205\241\316:\324\001j<\026t.<\263\255\006=\377Q\236<r\3149<2\316?>]\247\3118\200\323\033=q%(?G\366\306>72\000?\251(\275>+rP>\373\007\234>4\305\\>\254G\203>\361\306X>h\264\237>[\276\250>_\256\217>/\327F>\274K\302:Gy\322:7)\314;\304\324A:\322\276\036;\234\246\365:\274\210\333:%\331\031;\0069\240:U1\220:BV\3329\361*-:>e\335:\000\000\026C\223\306\013>\251\007\261<\244\3771@\353Uz>\017\357O>\350p\230?\274\321\3538\'\233\205>\003\250\240\301\254\030\363?\'6`?x\327\014>}\376l>\036\017c\275bG\022\276\003\336%<7\256\023\276\007U\226\275\376\323\023\275\336(g=\177z\233\275QK\360:W^\240:\304\324g;,\240\305:\203\356\245:i}\240:\177\262\244:\004\016\241:\177\340\306:\363s\217;\372\353#;W\344\250;\361\271\010;\266T\370<\331&!<\353\351\202>\356\316\334<F\266\250;\217V\365>>\333=8\3178\365=j\265r?S\033\317>\357C\257>\224p\231>\253\035\221>\222w\240>\361k\227>\374\025*>\023\337d>\377\204(>Mb\373=\310\\\251=\t\352\247=q\244\251:\026\274J:\030.\023;\342Q\254:\031\367{:\323\2014:\272%C:\225\262w:\376Z\235:8\331$;n\202*;g1\210;:\275g:\000\000\360B\245\272\240=&\356\232=iXL@p%Q>N\213I>\023/\014?*\337\3528&\010\221=\315=\221\301\254\207\310?F\274/>\337\352\275>\354\036\035>:\203\333>~\307\004>\351\022\344<\025\241\013=\355\034C=\267\355\363=\227\331\330=\2574>\272\214\355F;\007B\3729\312\375\033;\353\230M:2\r\035:\220}\036:\210\n\036:\204\tC:Sg\004:\304\337M:\226\215=:\235J\261:\251\230\207:\207xl<\261C\000<\273\255\353<\225\264l<\351&\217;\245%\006>$\321a8\351\2320=p\307\263>M\340\036>d\215\010>\005\224X>]\371\334=\367\270\314=E\234\215=\001\301\377=\321\030\021>\263[\016>\225r\032>\221\2740>\231\342O>\324\022\324: \321\2509d\237\206:\355\327\2729\223.*:\235\216\3579\354Z\036:\003y\264:\355\264N9\237\357\3219l\257\3269+\336\371:_\234\030:UU\005C\222\364)=\257@\204=y\216N@\225$\357=\r\354\031>X\330\222>\314\0055:]\351`=\007\026\222\3019\277\010@\204LT\276\301E\334=\027\332J\276\177\353\213\275#\032\037\273\301ZA>y\311\001\276JEU;\231f^\276f\003\213=\207\236&\2752\367\000;-#a:\000\371I:3\010\261:\251\250#:\243\nT:\205\335\343:1U\212:\021\211h:\036\3458:1\373\240:W\361\306:\367\241\246:\320L,<I\036\327<\377\037\263=\265\027\257<\335\210\242<\036\324<>\014\364\2539.\001\331<\367\025\211?\300g\304>\337\255\254>=\264\202>(\373q>k\220c>|\262>>\343\007\225>DmQ>\366\"B>dq\207>\275\0046>\020\250D>\257\202/;\3406$:Y\347$:\370\236\236:\021I\025:#\2565:\267\225\357:T\345v:\023v\217:\222\030T:\244\3032;cKP;\370\346\206:\000\000\226C}\363\002=\215$\006=q\341>@i\321\001>\025g2>~\223\025>\353\325M:j@\013=S0\235\301\376\2050@\322\205l\276\022\307\365=#f\332\275\333\220\232>^\353W>\330\202K>\250&V>r\260\217>y\346\232\275Q\313\031\276\361O\215\275\006\335\232:\327\321J:\327\\\234:\307>\305:\2242l:\227*8:\320k\246:\005\036(;\224\354\225:\224\"\3519\3732B:\000\355\267:\'\337\217:\304}\307;\201+\014<\354\007&>\376\345\230<l\3628<}\340\223=\3428\2519\342m\375;\225\244P?\370:\332>\211P\272>Q\3332>\315D5>\032\245\223>\217\213\237>\375\221z>\224:\225>\010\257k>A\034b>\331\246P>\010\263%>%\032*:\356=\017:\263u\273:\367\255\266:\010\214\201:\343\262\3709\312B\221:!\331\017;\253\332\214:\376/\3009F\036\3559DI\001;\376\334\037:\000\000HC>\324@=\025V\277=O\022S@\353\000\362=\004\374\000>4\344\003?\035\324\24390\014\300= \310\215\301\246\372e?\247\030&?\021G\333>\240p\246>\352f\264>\021\324G>].2>\034#.>\260]=>W\001\3229Z\360h=\032\345<<Z\325\2149\325\265\1779a_>:\232\r,:$\275$;\220\210\204:b\017\3619M\222@:$\233\006;N\362\227:\234\034\3159\361\314\3549A\004\223:;-\037<\255\324S<ao\262<\376g\306;\246\034\335;Y\264\337=\222F\0079S\325\222<\300\376\227>\2625\221>\300\314\236=y\034(>A\221\t>\264\275\227=\344\031\206=c\"\245=&\'\217=\377\267\276=\364_\026>\243\026\010>]C\273=\326\257s9 \241\0179\357\301\3329\365\303\002:\237H\000;\013\246\244:\222o\2449\310\245\335:1b\272;\323\341y:\354e\3569\3700\3439\026W\303:\000\000\226CI-\346=\244 {=\322\316S@\304)&>\307\345\021>r\312\247?\227\201\0039P\0211>\304\377\213\301\320\241\377>E\240k?|/r>\266\322\374>\271z1>\313xe;\336g|>\335%\366\275\315>\026>97\032=\357\347\237\275\017\376\270<\221\020\245:\375D\':\313\202\236:/\315\227:\215;\006;\226\324g;kA&:\032\261\214:o\023\006: J\351:\363\304[:\024qL:\024\001\316:\376\031\004<9\253O<\217/\372;\375g\332;3S\027<\200*\255=s\275\3617J\3271<\372\365\312>\007|\">A\352j>QV\033>;\311\315=\320I\320=v\010\324=\327\254\332=\364\335\256=\253[\320=gb\314=50\325=\311b\225=EUJ:\244\033\3449\334\232\241:\231\035\226:\277\3704;?\016\305;\007Y\2269Rpz:\350\233m9\212\177\023;X\252\":\256\323P:9\252\312:\000\000HC\333\200*=j\n\213=u\030C@\032\354\322=l-\373=\350O\205>k\246+:\007\242\\=\365\253\226\301&\362\301?\004\\\007?:\3076?\253\330\r\274f\024\006?\234\361\017>\206\327\301>\257G\214>y\016<>4\276\372=\014\316[=2#P<\301d\2219\013:\2169\264\022\370:\341\224\333::\330\333:\330\214.;\244B\027:\335~\3179\321}\3259AT\3159\213\013\271:\350mi:E\223\232:/\310I<+%\263<\314\255F>\023\363[<ws\036<\234B\353=\026\346\2059\354Z\000=\370}\030?\017\210W>N\240;>_\323O>,\2202>\201&=>\2315\340=\227\271\323=\367\351\363=l\334\010>\313\352->{\372\244=\204[\030>r6O9\0075B9l\000\340:\035\246\265:z\274\003;\214\340;;\352\232\3149\265G\2569L`\2579$<~9\034[\276:\213\216\254:\313}M:\267m+C\005e\035=\263\243^=\t\2741@;/\324=6\241\013>!\tj>\024\001):\000\310.=}\364\227\301`=\006@4\322\016?\237\314\016?<\333\014\274\260\212J>\036\036$>\361T\363=\\\310\224>\361\256p>\331\307\300\275\367\256\226\275\3502r\275\362\302\221:R\220c:\212\365\030;\320\232 ;\377\026\261:v\213\230:\227\325E:\362iT:\270\024!;\2123\344:\345s\236:\245K\253:]J\254:\370\3273<\273&[<7\000\026>\372\333\317<\365\001\214<u\027\t>b\334r9\345j\274<X\236\341>d\335\254>\211\032\256>\355\314*>\334W3>\001y\235>\264\n\226>{h\212>\332\217L>\344vt>\222\237\213>G\320d>\034\353\005>\214[\255:$\270W:\337\373\261:\361\031\300:.\302{:\350\211\224:\354\362!:4\313::\235\273\235:.\223\336:\337\273\220:.&n;`9d:\000\000\360BGx\207=\250q?=\347hM@\030\3206>\0233>>?\324\031?}v\2369\3776\307=V\261\224\301\225r\334?g\372\214>\205\344\247>k\320\206>\n\025\202>\333\003\250\274\331\007[\274\355\374\361=\301\217\242>\211\340Z>6\213\357:\005Z\231\274\262EZ:\204[\004:\361C\375:\255\024G;Y\026\016;G\270\027;\362=\014;\372\226\373:<(r:bS_:]\346|:\305\206{:q\303\376:\342\343\225<\211lP<k\272\275=\226\'\216<\344}\'<\014*N>\036\236\3248)\300\201=\031\376\372>\235}\243>\275\357\264>l\326~>E\237R>\300\242m>\374\025\243>\211\325\204>?\220\263>\234/\247>NlB>Z\\\245>\017\n`>\314\352F:\010\231D:\206`D;L/\324;.\311\022;S\217(;\337\306/;\026\3300;\tE\224:\037?\3679\024\246i:\344<\312:\252#\345:\000\000\026C\310\226q=s\360\322<\325PD@1\2553>\264\0304>\\R$?\244\221\3209\307\343\307=\021\330\234\301\'q\201??]\261=\367\332\006?\352\351\300>\370=\274>\305\'\004?!\305\233>\304\316\235<\002\316\353=\351\247\323=0-\'>\305U\006>\227<Z9]~\006:\361\353\326:\0032\260:D<\222;5\t\320:r\317\033;S+\3669QN\3629\303r\3309N\357\013:\245\261\206:\230\235\352: \215\376;\2669H<\275\037\310=K\034\247<\201\004\027<\271^W>1sf9\004G\013=\354\262\016?+\275\232>zz\340>\363\275\233>\237\277C>\337\352\216>p \204>/cS>\355\n\261>\236\252.>\021Vn>\013v\013>\316\017h>\337C\3558+\242\001:\344s\321:\'?\371:\270\377\260;PE\264:@\3162;\r~\2529\377\353\014:|J\3229\006_+:\204b\235:\277\222\252:UU\005CyP%=\250\370I=q\351I@\226Q\277=\347\003\002>\306\301b>m\017\026:d=k=\261\023\217\301\246\237\004@\277p\021\277#\256\205>\375\317\030\275N6\250=\257\034V>\363\t\307=\335\253\215>;\200\214=O\257\314;l>\034\275\321\221\231\275I\005@;\365L\255:\225\032\232:\224\341$:\361\322\344:\276\303O;\036{\275:5(\005;\'\\\272:\217\022e;n05;~\207\200:\'\177\002;T\274#<\002\337\301<y\343\316=\r\330c<\013\245,<3#\341=\355\300\2119\364\276[<\347hR?V\377\235>^\326\343>\215\244y>5Q\235>}\323[>\\Eh>(\034\205>\030\224:>\253\033z>\366\360\">\005\377\027>:R\377=\361FE;\3067\251:\342n\253:\270\t\013:x\310\222:\364\220S;\302\327\n;t\235\320:G6\237:\376sC;\326\350I;\205C\326:\321\366\202:\000\000pC\342\225\343=\356G\001=\240HC@q\033Z>W\037S>\305\256P?|\212\0209\027\317\024>\265\226\224\301\306v\214?x\0201\276_\2172?x\335\333>9\317\300>\203]\\=&\2247>7\303\206>GC\210=\215-\346=\312O\200=\020g\200=W\215\010:A\366\3419\002\372\332:CO\025;\215\365\321:\213\025\034;\373\021\220:(@\215:\233QV:\355D\203:\266|\177:C\261\003:\360Z\212:\024\350\214<y\007\023<S\203->4lo<\271\235\304;o\010/>\272\00778\356\363d=\321\343\024?\366P\024>\202\000q>\202SI>\346\250\365=\000*\033>\211q\343=\320\323!>\266/\020>\317\344\035>\n\\\027>\322\362\007>Aj\351=\346\004\3129jL\3459\240\321\252:A\331\333:\000\332\204:X\205\361:\247\350?:\366\025I:\207M&:\013Mx:\251\370\030:\333\273\21092\273\3519\000\000\360B\013\245\205=\2559\372<\251\271M@\331\245\037>\224\227+>\354D\034?T\354\024:\313\314\310=P.\231\301\204%\305?$Q\230\274W-%\275\345\023;>\022\2401=\360^\034\276|\277\202\276\361\235\242\275\347\373\245=X^\207>qO\022>\351g\220\275j6\3729\267\303\300:\307AY:m}\371:\374[\020:T\000\364:\311\217\036;C\001\036;\376\306\034;e_\2419p\331\3319\372\021\001:\362\035\360:\226\300\277<\036\357S<G\273\215=\314b\377<{p\225<vn\267>_\354\2629\207\304R=\244\357<?\311\332\003?(\244\006?\317\177\230>k\031f>6\251\244>f\324\216>\305\341\257>\375\275r>\250V\220>\317\343\262>\302\316\250>\232|k>\212\353!:@i!;\014\260g:\013\017\364:\023!V:y:K;p\350n;bw\234;}JA;\2662\3259\307\245\010:\005\004\204:\205`\310:\000\000\026C\243\036\262=\347e\016=\373\350P@\367\256\">\266\001\033>\t\307x?\200\366|9x\375\034>7\235\222\3011\313_?\252\343\025?9\367\237>rYw>\355]\301>f\372\262\275\201g\231=H\264\345\2754\271M>\361\004?\275\r\213L=D\022\t>\211$\255:c\321&:\266\202\231;\002\321\016;\225|!;RB\307:\242\364\204:\255\230V:\365x\\:?\273\301:0m\204:\235\247\243:S=\357:\236\366\244<\262\217\272;\t5\022=^+\251<\232.\"<\253\215\215>7\365\3478\\\342I=1X\237>6\360\215>\304W\233>h\262\250>z\255\212>HM\245>\204Ij>\027\240\201>C\336\210>h\260\211>Q\353V>\024=\211>\332Ik>\374\242\300:\314\\`:\246\305\265;@\001F;\316U\007;?\375\206:ff\221:\021wv:\330\312\021:F\206m:\271\355\237:\340\346\240:\355:\266:\000\000HC\335\032\226=i\231@=\0171R@\006q\r>\311\000\025>#\365>?hFK9\264\311\374=\200\022\213\301\252f\251?\3522\205>\245\206Q>\316\212\223>\016kJ>\215\023\326=\342\274\244<;\314\302<\350-\237>\273y\357<\305{~\275\203\351\226\274!\304\352:k%\312:\251\255\024;PV3;\336R\212:\366\007\246:E\013\221;\033\032\323:\227\357\250;\030i\224:}CE;\345;\353:<\213\037;\324\255\003<\300\336\370;\226\035\260<P\'S<\334\033+<\344\236\330=S\276Z8\010\377g<:\262\221>\232\246\016>\266\031\271>\025|+>\322\244,>\022\037:>\231}\342=g\304\345=\017\357\020>\325\233\335=\035\250$>\213]\036>\316i\315=E#\304:\372\342\202:\022j\312:\253\3638;xfq:A\327\222:\206\301\203;\233\247\224:\215\304\275;\025\321\033:T;Z;t\007\250:\023)\264:\000\000\026C\264Z\233=\375\311\222<\205\226K@\r<\006>\233\314\t>\353\206T?\320\21239\247\345\002>;F\230\301#d\016??\345)?\352\237\037?\276\342\022?\212\323\027?W\377\350=hU\204=\026\332\323\275\003\232\210>!\361M>\341\321\212<\336I\263\275\326\007?:q:\004:\'\371\327;\235\264C;\317\335\223;\032\343\022;\374\243\352:\366\244\026;:\221\250:3l\331:\022\232]:\233<0:U\362+;\026\315A<JS4;6\250G=!;\222<\272\347\227<<Q\t>\212\23358\212\366\206<7\010\277>\010\r\026>c\300\026>\212\357\003>L\006\016>b\325\346=\376\232\240=D\250\321=*\346\314=[\335\266=)x\327=o\335\302=\230G\301=%\231\3249h\207\2219FK\334;\203\362%;\nK\313;\350\2471;l\374\201:\210`\304:$\364y:\221\322\262:\275H\034:T\211\2369s`\006;\267m+C7\017m=\223/\303=\227\351K@\206\374\010>+\030\036>\234]\001?\005\263\2159p\257\265=\353o\207\301\022\276\201?\013\253\021\275\306\006\242=K\357\322=\307\216\242>\274\017\013>W\333i=1M\302\275]\210\222\275x\350\031\276\003\256w=\212\000{\273=\253\022:\233TJ:\353g\316:&c3:\255#\210:\256\360[:\326\345\3169e\314L:#w>:\032[\223:\235\334P:\320%\021:\377\356\014:\025\207b<B\004\241<\364\217\244=\3124\246<0\236J<\256\326\366=\244\371\3418?\325\230<\244\352\377>=\323\250>\373\241\302>#\275D>\247\245k>Z\0004>\327\214\'>v\201l>\372\224\207>\024%_>\310S3>\r./>\360\365\034>Z\260\2279\2443\030:v\2641:\202W\3549\325yJ:\341f\3009Q\214\2109\2045P:-\343\2669\262\244\3609\212\302L:\206Ne9\014\313~9\000\000\360Bz\'C=\r\306\352=\300\030E@S\023\004>\303\310\027>Q\267\337>\036\254\3229\356\261~=kA\210\301\224\204\315?\334\022\021>\027\017%;\321\033\242=\347\347\277=\333\305\230>\325\313j>\010\217\225\274=\027\217>\014\363\200>*!\273;\303v?\273\342\322D:\251\266\025:D\363\301:=\366\305:\001\266|:\245j\215:\327q\226:\"\223S:\231\222m:\263\277T:\305\005p:\341\311\235:i\3104:\247\220e<\362\031\312<\330<\371=\363#\206<\305-\023<=]9>\347\24509\347\365\r=\t\261\274> N\216>(\203\262>`\337T>o\0046>\000\"[>|\201\033>=\266\020>\347[\024>f\251\035>\360-\335=\004\355\327=L;\021>4\262\3209\341m\3709Gz\226:\347)\245:\272W\':\272\031O:\021w,:\2727\026:\375\221B:\332+\031:}1\033:j8[:kp\2479\000\000HC\376\300\327=r\r\214<\207\313E@A\362:>m\237.>cc\220?y$\2179\337\327;>mD\236\3013C\215?\357\220\231>j\014c>\231\214O>\327\370\255<\375\017\332=\323\005\244>\333\342/>\350/\014\275f\231\223=\264\014\255\274S\274\234\275v\303.:\261f\010:\276\304\272:Y\325\322:\373\027R:~\313\032:Ey\010:\001\271\217:\373O/;\225\022\266:\231J\266:\013\030G:\315F\245:\311\235\337<8l1<d\327[>\270\356\212<{5\005<\210g\310>\333-\3768\227\020\200=\342\344Z?@\021\374>\0034\252>\276V\">\0277X>\232kz>:\027}>\300rc>\000\367s>0\304z>X\237f>y\252:>\250f/>\271_\230:\253\022\3159s\001\334:\024\000 ;\276\230\220:2v\3239\3662\3259.\211\275:\377L\222;O+\227:\036\215\322:\242lm:\303\360\240:\267m+C\247V{=\224:\213=u\351F@$\335\027>w\330(>\252\027\361>\373\373\2659}f\240=Y\020\217\301\240^\331?\007CS>\331\220\227>\245\212\246=Mf+\273]\034(\275\327\355\315\275\263\2407>\236H\225=\227\225\033\274\330?G=\302\321,\275\036w\3739\306\344\2659\310H\203:\021\345\243:\357\031@:c\361\314:\202!\307:+oD;to\272:.y\260:\354_\342:W\377X:c\361\255:\036PG<j%\304<\360\352\363=+\030~<Y\275B<\305o\033>\331\017\3658)G\336<\335-\334>^%\263>\023\360\215>R\2444>\301x6>#\025$>\275/\023>;Z5>\353\367\177>B\nF>\370\357\204>kh.>>\n1>|#\3549\371#\2039GB~:R\372\275:\334\242\025:\314\332\310:\017\211\202:(O\034;/\036\216:rq\342:\r\216\024;Ep;:\2560#:\214.\332B\313\300\006=;D\330<\204n<@q\325\356=\366\235\'>iK\340=\256 \r;\263J\000=4\217\253\301\033\265\034@:\254\266\276\272p\230\276\321\372\024\276\304\031\326=q\322\271\275\372C\016\274\212\232$>9@\335>\034\035\207>\366}W>\323A\300=\255\273\022;0$\3459\027\025\305:h\020\354:\216\270\3379\026\227\021:\323\2538;\257\202\216;\265^\376:\345{\363:-\204\260:\335\306.;\tSy;j,h<L\253\210<\362\277\246>\270!\024=\235:\002=y6\302=s\276\204:\310\214\361;Yj\334?\311\347\020?\010\326\r?b\234\342>7O\221>!\301\263>P\224\222>\\Y\361>\302@\010?\022\326\003?\351H)?\340\231\357>\224#\230>\365\301\334;\374\254\304:0\370-;\321\020\245;\351b[:8\251\326:\036%\240;t05<-\"\\;i\304\312;\312\201O;\361&\315;p\206_;\267m+C\265TJ=c\332\216<\230\202@@\301Q;>\317yH>wk\321>\260\232`:\222C\203=9q\252\301\004\314\032@\227\201*??\333\303>\345`\335;\022~\010\276Tw\241\276\263E\230\276\352h\037\276\213@\341\275\246b\000>\240\302\365=\020y\337=p\007\020;\316\356?;)\360s;\360>\\;\3656\201;)\247\224;\030\344\235;\275v\370:NZD:!>\222:\037\272>:<R\263:\341\037\201;7\r\307<\031\2213<m\035\242>\010\034\013=\364o&<\0021\224>$c\3269\361\273\261=\346\006\225?\371\274\333>\'\357\262>Bk\241>\243\331\207>\tB~>\010ec>g\r\237>\317\371Y>\277\321\306>\237a\347>\264\245\315>\357]h>\002\225\313;\337\024\230;A\022\311;j\311\261;\031f\275;\013\265\276;\013\013\377;t!G;$\275\330:\225\205\363:u)X:\260\005\324:\226\227/;\000\000HCi\016k=\353i\247=y\274J@BJ\033>\023\335/>!Z\344>\263\323\3029&\\\210=\247\256\213\301\247\006\330?\375nO>\017\206\237>H\256k>b\301\232>Frq\275*\241\200\275\356\026\211\274\317F\220\275\306\301W>*yk>\263\310\260=\213\177\332:\345\017\035:\027!\007;YF\361:\022\016\333:\363\256\031;^\246\325:#A\037;Za\023:EG\250:\025RN:\256\262\353:\341\024\303:i\365W<2\307j<|%s=\250\027\251<Yc;<|\027\032>\217\32189\337X\313<t\377\307>9*\006>\305\236\236>\212\020k>\313\003q>\364Z\352=8R\013>\"\273W>G\016\177>\350M~>\001\246\231>.\343\224>\351\350/>\224\302\341:\341\361\3429\346\201\243:-A\235:\034\327\275:\315l<;\032O\264:\316Z];\343\203%:uC\334:\013\013\020:\366\211\231:\332\360o:\267m+C|\255K=\374\200\233=\265qR@>\370\342=@\245\006>+\214\344>Q!\3159\333\024\241=\341\226\215\301\240\211\275?\013\332\265>z\327#?\027\271\324>\317`s>\271.\242>d8m\275\321\021\300\275\342k\260>Q0\346\274\364\223\302\274B\367\324\275\010\353\006:\327\235c:\274c\r<z)\036<SX/;|>\211;\031\213\266:}\206\254;\205\003\312:\3177\264:\203\226\035:\002\024\205:i\256\275;\031\346\221<\303\2424<\233x\271<2\345\302<\347\242\237<)\\b>\323\200F99\377\025=XV\275>\230G\214>\0046O>+\357>>\352;>>\364]\300=\2402\347=\261\200\330=\257\242\003>\337K\330=7N\023>e\223\354=\355\215\371=P\032\3039h\272S:\230\250\204<}[\273<\211s0;\357;\272;\364(\235:A^\340;\327\241\005;\215q\210:.\327\t:\205KX:\244\323\331;\000\000pCo\000\247<k\213p=\376@@@\033\026\336=h\253\034>\025\247\030>nCn:\316\203\232<:\322\232\301\235\006\375?\324\017\020?\306\270\033?MB\200>\337h\032?\324\302\244=\224\270&=k\273U>\233\035!>\027>\220=_\345-\276\301J\034=\010\273%:\324\231\3369\233O\317:\330\375\035;\222\036g;\233\360\024;e\240\006;z\023\270:0\351\200:\327\344[:\036)\207:\344\321\005:\313\243\301:5H7<\274\367\301<j6\203>4vu<\245kf<u\302\267=\367\227\3139\241L\213<p\317\346>6\t\257>\t\034}>\321\232S>\006\252}>\364x!>\225\034\032>k]\353=e\202\325=\253,\t>\004\355\244=\'\320%>\345i\330=d\365L:\373\250\3219\316\t\225:\335\260\315:\347\275\230;\356#<;\222M\302:\007E\247:\007\225*:M\205\202:\346 ?:\010\000\3729\302d\241:\000\000HC\235g\204=\206C\224=j=L@\027\252\'>\361\t,>\341C&?n\367I9\303\347\324=K\302\213\301sb\321?\303\205j>\217\302I>=k\375=\326\203\355=\010\214\224>\276\262s>\207\\\017>\202\226\010>\013\221?\274\022J\324=\254\355\377;V\030(;-G\220:\177\007\241:D\316n:\2703\214;\327\357\264:\333]\231:\364\337\265:$\345\033;RS\254;\2358_:+\373\304:A\260\357:\263+\244<Z\275\223<\360\251^=\362\\\254<\177\355#<\356\005h>Au`8\034h{=U\341O>\207YX>\024.\245>\341\016\360=P\347I>\260\2646>\221\231 >\256AT>Sv{>\024T%>PJ\033>3-l>hv >H\374\340:\3040K:$~\020:\265\336\035:V\337Z;h@u:A\364\206:\305ma:\342\245\374:\230?\201;\n\347\n:\245\340\251:\233i\215:\000\000\226C\216[#=\217\267\276<\216\3341@v\263\237=\210,\277=PA^>\335\354\215:\246\347\214=\270\305\236\301mD\210?<\343\376\276\336\313\r?\013\310f\275<\211\002=\371\326\277<\325ho\275\267\370^<\356\206\260\275\244\305\033\276\007\t!\275X\330\203\276\271\365\025;[\006\306:\233w\014;\306n\331:\254\rq:v\342\2439sQ`:\323\246=:X\224\226:\030\306\224:\321\300\220:x\371C:\3620\323:\013\335#<K\232x<6h\215>LN7<\370)\232<\343-\010>\311\256\3119\361\377\237<\023\306\213?\267\016O?Z\367\366>\263R\360>\333 \264>\312\037\237>_Q\213>le\241>\300\305\275>\024q\255>#M\222>\337f\213>\006\320\222>\324e\025;\326.\t;\227\235\235;D\'\";\036\301\322:\362p\2409\267\375\322:\254\226Q:\212\010\017;{4\362:=\214\302:2Ak:\245\354\265:\000\000\026C\023\020\366<#\312%=|\000M@\367\231\360=\371\023!>\347z\030>\2254\353:,\317\311<;$\244\301\014N\031@\225\231\336>\246!T>|w\362\275|\331\032;\315\376\222\276\027\031\014>z\220\037\276\026\360\347\276\307q\211\276\227\tS=2\0165>\031\325\361:\200n\003;\342\321\206:\264B\212;\252\350\323:+z\010:\2368S9\031\002\013:\204\201h:\3213\2459\032\007r:T[\031;u\354\005;\377^\202<rg\245<\311s\251=\317\023!=\214\251\337<\277{\367=\3204f:\325\331F<\024\321\226?\264W\263>\225\321\375>\372d\371>*B\257>\377s`>\244\373\262>G\313\364>\320M\327>\016\275\316>2g\222>[W\224>#\264\240>3\204\334:sL-;\024\177M:&\244\341;8\222=;\240\357%:\314f^9<\327\240:\300\277\254:\024\364\31697\312\326:\363Xc;JI\357:\267m+C\374\255#=\266T\236<K\337B@\321c\260=\353!\326=LN\263>[\322\202:\026\270\210=\006\n\237\301\244\277\322?\000d\321=#\t\">7\357\320\275\372Il\276\320\\\335\275QW\216=\352\250_\276\362\021\007<c\2721=\236\030\271<93\320\275\357m\330:\355}\347:\221\2723:\220\357\260:\010ZU:\212\335\220:\226\026\002:\253\004\026:\243\214\004;\333\002\245:\270\023\232;q\342g:ii\026;\211oW<\374\340#<\354\233\234>x:\313<N.\330<{=2>8\351|:X&\356<\242\225\333?\30275?\276\202\265>\306\206D> n\203>T\301%>&/\213>0#\217>\227\007\215> x\224>\300\330\237>\222\355|>>:\205>-Z\235;>\242\241;{\317,:i8\377:=}#:r4\234:\247\330\3309\r\272\037:\261M\207;<\257\332:I:\024<\220\0377:\206\3114;\000\000pCbJ\221=\306\353#=^\370F@#\235 >Z\211*>\2370 ?\366\35299\356\323\312=\315\311\222\301\030\311v?\243mn>#K\304>r\341a>\021\350\010?\275\237\013>~\250\306>\244>*>#\312\330\274\307:\216\276\303\204p\274J\260\317=\177\374L:\227\376\3109\001\010g;?\221|;\270\372+:\253[5:\177E\201:1\203\275:3\277N:}\007?:_\232\216:\277\363,:?|\267:\024\212\016<]\303\261;\363\262\313=\310\377\316;i|\274;\245:\373=\212\\=8\230~8<w\352\352>\245\220K>?\246c>\324&\260>S\3146>\007\202O>\315\335\030>\312\270o>\334\265&>\016|@>\300[)>\352\225)>\t\301S>\341;\035:\351Q\013:9R\023;l\223\030;\252+\3049\376\255 :0Cm:\027\350\312:KWD:\020\311\3229\265E\026:\355\264\3219z\0310:UU\005CZ%e=\004\027l<e\225F@-Z\016>-\367$>t\340\325>\363;\2569\365ls=0\230\235\301\366\322\n@(p\223>*\252\240>\320\201Y\2747\247\246=4\266\301=\022z>=\374^\002>0p\250=\300l\373=\264\275\201\274\3751Z\274\313\276\235:\363\354\025;x\202^;\216~2;A\321\023;\266\361\363:\342\370\\;\357F\215;p\370\255;<\266\204;\305t\013;LN\250:s\276Q;\347\007J<\223\334\177;\033\300\270=i\317\210<\316\307\022<?U\025>P\227\0039\003\210\004=\344\2052?^\023\221>\016!\370>U\343A>\242\362\212>\300 1>\214\363S>\306:\'>T\334#>\n\031\037>\017\326\037>Go\030>g\2258>\023\267\353:\375\016\034;\001\310Y;\323\rj;z\313\212;B\025\350:W\303J;\345\231\230;\214\326\001<\266\354\223;\317\264);\223\004\257:\212a\021;\000\000\360B\006Bx=,\324\221=\353\250Q@.\366\020>\221\235\017>\010o\022?\206\305\2729\204\321\262={\352\216\301\375Z\266?\326\016\372>\377c\272>\223jO>\307Wq>\010\206\360<x*\025>\254F\300<M[\026>N\264\030\276\222\301\302=\"g\243=\377\360\214:\267\343\261:\2144\256:,L3;\355\323::\350\250\246:\030\032,;6\000\001:\023\360\000;`3\3139\016\326\000:0\022\2749\372\223\301:\017\275\013<\371\337Q<g\252\365<<\225\355;\265\247\264;\364.\327=\026\265\"9\330-\324<\257\355%?4\374\000>\016\315\274>O~#>\007+\247>N\253\037>\350}V>\023\334\014>\367\313a>\317\355H>\324l(>g\000\032>\n\306\014>\206\203\200:\364\375\257:\375\354\222::\026\234;k\010\3629\220\n]:\237\225\020;W\266\3519)\204\241;>2\2019FK\3049\214m\2469\250\243\314:UU\005C\237|\205=\262c\240=\024LR@\244\211\032>\305$/>S!\013?\365A\2239W9\262=\001\304\210\301\276\277\277?\303\3334\275>\242\351>\313\233\002>V\347 \276\\\324\255;\240\252G\276(\252\301=\265\350z>,\250\316=\332\345e\276\215G\017>O\371\262:W<\204:/=\300:\237I\022;)\252\343:\017\226\367:\377\030\246:\212\366\007;\346\240\336:\027\346\266:,c\362:z\316\313:\326B\304:x\005\302;3\016\031<A8\256<^\323\021<\273$\373;bP\314=%\315\3408$P\306<\243I\200>\2571\200>\340\273\202>\344\031\206>L\204\020>w\"r>\003I\037>$\227z>Hh\230>\365kg>i9\224>G\013;>\022\\5>\003\'\271:\372C\220:\362\344\241:c\004\024;\244p\022;\372t\325:\337\325\235:\356\307\027;\354\362\345::_\225:\306s\021;\222!\014;\264\277V:\000\000\026C\204\375H=\0259\202<\007\356L@s3\354=\244\004\014>XJf>\'\036{:\351\304d=/\237\247\301\310a\226?\326\032\205\277\346\036&?\245Z\032?\361\177$\276B\214\327\276\322\234\345\275\373\252\267=\257\267$\274\324W\242\276:\222g\274LV\007=\252\334\266:k\207{;\303\026\266:\265L\270:a\202\216:\346x\3519\237\300\203:\006v\3669\000X\317:\215D\227:\201\007\3109\274\252\222;\007\007=;\371)+<\310\337\021<\007;\004>\367P\304<\371\225\234<\233[\000>\253z\3219+\316Y<\030\335u?\272b5?\352_\302>qn\014?T\r\006?a-\203>K@\247>\377t\266>km\303>\254\204\301>o\037\274>\202\3249>\010\321\204>Z\320g;-h1<\306*o;\255o\004;\304\316\257:\323\023\233:\337{\001;,a\273:\251\276C;7\371\\;\345\343):\354\315\324;W\007P;\000\000HC%\265\247=\0364\261=e\311S@\377\334\034>\332)\026>8Tj?\215\25049b\360\026>\250\343\210\301\026\341@?\tU\027?!NN>$z\203>Y\224\241>m\340:\275\213Q\303>\265\025\375=00\307=\324<q=\324a\242=\203M\022>\274\242\212:\362+p:y;\235;\213\230\212::^\266:\001\0239:*# :\325\252\014:%\326\3639\3401J:\250\323\024:\300\3412:&\256\275:\221\221\266;R\306\030<\354\370\246;,\256\022<L\260@<\327R\210=\005#[8\320%\364;\037\211\233><E\311=\257oi>\231\206\355=\313\255\320=\333\010\243=L\272\335=\010\356\006>ZE\337=\247\372\016>V\360\273=\361\t\215=(X\213=\204\234 :\016\312q:\203R\260;-\331\230:\305\267\300:9\304\3309\244\005\010:T\350\2179\376\251\3029\027H6:\016\211d9\2653\3139\245\211\261:\000\000\026C\355Y\235=Re\205=\366\210C@~d1>y\353?>x\313\003?9\312\3338\336\'\233=\221_\216\301\213\344\204?\234f6>h\014\033?\036PS<-Aw>\325M\203>Th^=\203)?>E\337\026>#\302\350=\252\301\277=\234r\364=j\222\017:\235\031\031:\202\213:;\177\335\352:o\3343:\234$E:\367xD:\003\001\240:\2614\3329\356\335I:\207\271f:\006Q\024:\3227\\:CJM<\201\262\340;\357\274z=\205\3008<*\235\336;d\317\303=\231E\3217\020\322\205<DY\325>S\231\352=\tJ\021>Mx\321=\360\227\304=\361\251\340=\203M\252=\370O\257=\r\347\324=\'\252\265=\221D\303=\r\273\335=p\355\224=\337f\3759\211f\3249k\355\331:\303\"O:;\330\3229R\354\2769\2762\2379\253\032(:\013\005=9\266\277\3029\017uB:Y@v9n\260\3039UU\005CKM\244=JI\331=\0041Q@\253C\036>\021`\037>\342\323K?\323PA9\364\204\000>\344\360\204\301\030\271\201?\361\035\221>L\226\207>\240]\000>6\225\260>s@\223</7\231=e\253}>^\205\300>\300\345\354=\365\266;=t}\300\274?\2545:\361\325\006:\014\204\004;\033[\226:\026\300\347:3\233!:\247Ky:O\035\224:\357>\257:\0175\367:\036\235J:}oR:\324\203\216:Q\001\223<ha\232<\336\032\216=M4\246<\177B8<\031\014[>\244\326\3758wA\023=\'0A?\357!d>\247~,>`\2323>(/\\>^\032\004>\361\320:>\320+\025>\222:.>\n@\017>\246\265\347=`_\356=\310\032\276=\211j\3549\233\014\2469F>6;\327\332j:b\337\031;\350\020\2169\307T\025:/\212S:\323+\220:\366g\264:\006w\002:\246\212\022:-\267B:\000\000\026Ca\205\366<\273|\230=eNL@\2170\376=H\260*>(P2>\371C\2429\324\021\376<\031)\220\301jD#@\257\007m\275g\370\310>\355z\204=?\021\221=Y\237R\272?\360\010>\247`\027>\213\240F>h\244b=\005\177J=\252\367\n=9\360>:u\226\373:N5\371:\037\305\327:c\332\253:\362 \234:;\014\257:Pkb:\240\352\266:\273B\221:\364Q\014;\243@I:\276`v:=\266\235;\311\014C<l\016^=\321\246\303<\033\227\201<\033\013\261=j\270\2578\377|\375;\020\225\262>\260\366]>\360YG>\322\034.>z\343\222=\307\002\314=6\375\365=\177\246\257=\350\360\267=\265\263\212=\377Z\003><\206\221=%\363\232=Qo\3579`\206\324:\346\037\212:\246\"\207:\017 W:KUA:\276\327(:@u\001:\317\200Y:\337\2635:\335\345\314:\326\213\023:\354}\2709UU\005C\354\312\244=W\356\247=@WR@\232\010\032>\007\016\025>Z\002U?\276\234G9\201\014\r>\242\020\207\301\2471S?(\345\302>\337SB?`s\004<\2018M>u\207\241<\331\222\277=\304\3561>EOg\273,k\214\275n\347\236\275$\356\346\275\220\214\034;\361NS:,\230\212;y\016\311;\0269\347:\225\2653<p\266g:/\343\226;\\wg:m1\337:/(\221;\373eI;\346\313\256;\030\007\"<\230G\027<b7\240<\n\366n<\3574z<\362\255\377=\341\233[81\006\312<\004&\236>>\370\316>v^*>\271\266K>\301H\034>\316h=>d\354\013>\025\274[>\251\263[>G\321\376=\305j\026>fj)>y \326=\226\222\306:\316&5:\267\036V;5\237;<\3210M;\271\032\235<\261n,:\241\365\265;\215\201\272:\000\013\346:=\244\207;\312I\002;\306\345\242;\000\000\360B\323\033\343=\350<w=\243\325K@\263\351R>\250\0316>]@\235?\215\331\3678\357We>j^\220\301\327\310\266?\321=\250?\256Za>\223q\220>\317\3026>\270\252\247>\240-\344>A\251\221\275\257\344\024=\225\340\237\275\351\2572\275\024\202\260=v\347\220:\265G\211:*m\257;\352\001g;\202?\245;\323\275_;X\333\251;\301\357\004;R\344\211:\n\353\270:\254M5;\272\273h;\000\033_;\037\354\221<\315D3<;A.>\353[\227<5Z]<Z\214\332=W\321\0138\367\331\376<\222\236\311>\352{\276=\217\3504>\221O\312=\267L > }\314=\013\320#>\016B\322=i\356(>\207\315\316=\272\363\347=\256\212\356=\273\377\334=\n\234/:\235\303`:\317\250\325;\031\030^;Qg\232;t@I;\300\376\343;\010\373\325:4\362W:d:\230:\247\315F;\036\344\217;\3113\002;\000\000pC\035\336q=q9\023=dOJ@7O\021>\212\017#>Xj\013?\240\253\2429\030\352\270=\002;\221\301o{\277?\273\355)=E\216\240>H\351a>L\2405>\006\237\267=\314\332\021>\233<U<{\205\272=\224\340\200=H&%=\207xB<\265)]:\266\247\036:QU\366:!\017\355:\252\300\231;\031\007\254;\260^\030;+\363\300:)\342`:\200=\241:\302p\255:\005\275G:\243m\366:\350%Z<\250\341+<~\371\277=O\036\204<\247\003$<\222\322?>\336\t\3138\356F\007=\234\270J?\t?\300>X0\014?w\"\225>V\032\226>\365\204\202>N\025z>=\376i>*\035R>\221\371R>\327\306i>7\341W>\373\372\035>4\206\\:\360`\3519\203\211\324:\376\252\344:\256^\022;1\220W;\216\214\251:\265\276\232:;\324#:^[\302:\007a\236:\257\247(:\375Ie:\000\000pC\207\367\370<tC\260=q\347Q@n\314\270=G\375\375={aO>\222J-:\320\352\010=hv\221\301L-\003@P\201o?d\275\225>(\254\227>\2733\257>\324\301V\27558\213=X\377\201\276^=\203\275m\201\375=\347\344\247=O^\302=_\036\224:\t\374\2009\261Y\304:L\314\226:(\250\214:l\216\t<K\350\013:\252\202\213:5\367\2369`E!:\263\213\360:\236\3272:\\k*;\227\363\342;r\373m<ZZ\223<T\202\203<\261\317\257<\232\000\267=fGt9\310(\250<\024\371\002?L\244\\>\224\262k>\2049_></\034>\035\3519>R\350\r>\243\352\274==$\024>\224\235\312=\234\364\005>R\265\357=Pp\325=/Ii:>mI9{\306\211:\"\370\251:\317)q:f\310/<\177\305\2559\0137\220:\312\211\2429\230\365\r:Fb\352:\203\331$:\000u1;\000\000pC\223p[=\252K\307<\005\227H@n#\312=5e\317=VP\037?cv\3419\326\t\321=\210\220\225\301\002\001S?\350\272o>\243\316\211>\227\203\251\275\201\302\370>~\014\">\004\266\314<C\204\351\273\350!\016>\313!D\276\344\327\271<\316\030\310\275\020/\251:{\372\265:{\363\254;\225/\2319\330\314P:\006\341\002;\317\205\205;r\324\r<\351\216Z:\021\225\247:\177*\274:\356\273R:5\036i;\252\233_<\204i\032<c\257&>\336C\025<g\034\177<\223\302F>=\222\0179\036\204\220<rz\t?\223\317\014?2\321\227>\036D\312>\363\266<>\345kH>\324{?>\367J\217>\260oU>\2454,>\236\356\210>\206\234T>\036w:>\037\361\370:n\371\372:\\P\005<\262s\2439Z\032\230:\2641\024;\303\267\217;,\3261<_\276I:M1\275:\326\343\344:\367\005A:0\221H;\000\000HC\230\305\214=\236\276\242=\221\330N@>\340\014>s`\024>\337#+?\236%`9\026t\357=\212\340\212\3013&\204?\366\252\374>p\037\003?I*\267>u\252\233>$\263[>sI\211>\320\tP>\311\365\361=cE\374=l\362R=\210\013\030\275Y\257g:\000\274#:9U*;I\212\334:/:\353:\226\215\273:\357M\225:*6\265:?\253\302:\256\233\212:\001\017\210:\275\2057:^f\234:W\205.<\034-<<\267yK=8E\004<\373\210\346;\246\026\003>\361\203j8ef\306<\035\005l>s4u>-T\002>\032I4>\232\347&>\234\2479>\224\032\003>;\213\003>\300;A>\250\031\023>R\007!>\327\034\022>$\314\272=\034tW:_-@:\306sB;+\035\261:\235\277\334:\313I\232:\211\253\317:\2068\244:^)\277:q\032\203:q\317v:\301*\027:x;M:\267m+C\207\272|=\204\267\217=\204\334E@\r\306\027>\270E\036>\302f\000?\254\200N9:T\213=\214\207\224\301P\273\225?\024|\204?\224\371\200?\212\270b>*\033\356>\017\361z>Nh\020\276\344\371\020\276\325\247~>\265\373\312=\t\005\315\274(\027\367=T\241\267:K\245\033:2[\261;\215\006\263:\r\257 ;N\272\366:\315\224\225:\263\353\032;G\364~:\'o\241:\326\350\3449\003\213\212:\350\357\360:\315\020^<F\300\267<\302\261\324=\330\026\235<~rO<4eO>Jm\2528z\371;=\201\353\006?\032\n\034?z\331#>\342i\315>\022\204->\311+B>\000~\366=\307\246$>\364\257\013>\270s\343=\275\225\004>\027\006\361={\214\265=[.R:v$\26293\306\300;\037\005\275:\203\271\304:\324\321\300:\347\307l:<\347\330:zr\234:K\272\210:F>\2619dw\037:\363\364\270:UU\005C\010l\214=\002\000X=#\036M@\255\250\006>\366N\016>~\021\'?\365\002\2479\300\252\341=+\346\213\301\217;\214?\274lG\276\226\311\267=v\021F=\250\023\327=\037I\200\276\371G\177\275H\256,\275\354\0101>\221g\005>\000s\221\275Q\036z\275!=H;a\265\2339\363S\";6\303\322;\202\340\240:\342\230\371;\307\225\225:\2109\347;\334\364::G\2171;\203k\246;9\224\025:p\320\264;\312\226\027<?z\217<X?\300=\346|;<w\233G<\272\335\024>\214\213\3118\224\315\234<\367@\366>\331\267Y>\2025\246>~B\035>#\365/>H\260>>u\327H>=\030F>\275|\235>\356\315j>\304z5>o\353_>\313tM>(:\210;\266\331\0279\254\016\203;\340 k<\375\230\302:\003jt<o\244\306:\332\332\004<\247\2473:\25326;9\305\013<\024\2055:D\263\241;\267m+C\021\200\252=\357F\346=\010\367S@@\207\032>\2107\037>\235\255V?\027R\0259\340#\010>7\262\202\301T\001x?\221\341\210>\225\205i>\350\233\002?\356Q\246>\340C\032\276\254\337\200>\335W\223>\267\353%>8\324\002>\'7\320=\035\027d\275\230\331U:Vw\017:iU\223;\254\177\031;.\302\222;\253\333M;\033y[:\252\301\235:\311\031\220:\262\306\242:\357\316\006;\240\244\200:\361\336\006;\202\240\013<D\267\200<\201\205\316;\024\\U<\375YJ<\213\373\273=\277\315\0218U\274+<\332u\210>\342\262\023>\324\302\013>\367\2209>N\031\256=\036r\356=\221\210\304=<q\261=|\317\264=\344\261\304=\331J\244=\301\350\361=T|\205=\312\032\3639\177\221\2139J\264\231;\301d\332:}\357j;\325\227@;\303\315\3579!(\256:\277e[:\344/\201:\010\256\310:d#a:}\366\245:\212\235\270B\037\007V=\376|\265<\030\371F@\373\205\037>\034\371/>\033R\305>\271\227c:\202\377B=\031$\247\301\344 +@.\375i?M\307\002>ks\206=\026\336\234>\212\272[\275\340\006\033<l\344\221\274\234\261\206=Q>}\275,\304\233\273[\240\300=:y8:\372\024N:\'\210\021<\223#\216;\3343A;Ob>;\210\271\177;\274 \275;\333\"\367:\213\330\232:\010!\232:\r\351\":Q\265\231;J%\306<\373H\\<_V4>\201X\014=4\316M<\260\243\260>AZ\020:J\276\202=~D\213?z\324\336>\022\336\351>FO\177>\256\2537>#\306A>6\006>>\261n\030>i\316\021>\215\320Q>\305\230\036>\005\373\013>V\334\326=\030\364X:\3012g:(:U<H\021\002<f\003\';p\235\206;\236z\007<\360\"K<\214\253k;\237{\\;\274\377\225:\325s\034:+\017\227;\000\000HCXH\365<\255\254@=,E@@4\021\223=F\241\332=9o1>\3051\230:)\332\003=\340\275\241\301\277\340*@aq\247>\277Z\342>\233Un\276|\003\336\272\371\223\246\275);\264>\215\346\002>.\262D=c\372\036=\310_\350=p\266\t\2755\334\305:\347=\225:M\234\371:\014\340\030;d{a;}\232\024;x\326\021;\311\260\010;\006P=;\274\360%;\324)\324:\362\312\325:\034\323\312:$N\206<\025\210/=\276\034\244>_\312\007=N\360\t=\340DM>\246\315\200:\316O\010=\002\033\000@\232/\213?\377\\\343>\246a\334>\203R\272>k|\246>!\352\333>\230;l>\357\270\026>)N:>\032i\231>\005\275\200>\265\307\320=\253\013\004;j*\255:\275\n\367:u\367\036;\341\360\207;3\3040;\345\001\022;\322:\311:\'yS;|\244F;\031X\303:\355W\327:\374\263\224:\000\000pC\002\033\252=_\027e=\300\251@@A\265*>\021\346)>\223jM?\225\212j9F\017\n>_`\216\301\376b\264?4\"\323>.\275\225>u|\367=\270\205J><Mu>v\\\331=\245T\267=K$\233>C\267B>\001i\025>\030\210b\275\006\241+:[\032\031:\305\212\254:+u+;\332\000\211;\3035\255;w\337\037;\262U\003<:\3772;\336M\241:Q\265\3709\177\216Z:\241Lp;\306x\257<\251\036I<\307\364\022>o\244\240<V0;<\177\221l>\252<\2068\364\315q=\246y\007?v\232z>,N\226>\013{`>X\223y>C\241X>\320.R>\027x.>\227\032X>\200pe>^\035\223>p\365J>\265\344%>\311BR:\310k7:\352\220\226:\326\306-;\031\004\221;*\321\310;\021\203\377:\360\206Q<\002\2310;\023\033\312:\226(\3149}\350\212:!5S;\000\000\360B\223\371\313=\363\035\220<y&M@\001\035O>\016z>>\342Xh?\300L\2179\205\222:>4c\241\301\004C\341?\354f\332>\357.\330>h\005\316=\315\307\227=\r7l<\242\017\217\274L\243P=\023qA=E~S=\010\355y\2746\037Q=\334\n\001;\030\204\013;?pW;\310\262\235:w0\347;\001\251\205:\201\\\301:\263\306(;o\003\200;I\250G;\353\377\233:\370M\303;A\376m;\243\337\271<\372\323\020<\364\244o=\220\232\344<\374ot<n\003\211>[\363\2539\356Q\226=\244p\344?\230c\213>&\242\233>}\262\256>\247\200\211>\270s\017>o\t6>\340\371\326=\266C\007>\212\223\356=\005j\036>mL\023>\237\342\230=\351%I;\317\241\004;\336\352\202;\363\303q:\261\340\312;\325>\177:\017\314\313:a\265\376:[\026\332;w\010C;\206@\363:\335\354\303;\"\346\345:\000\000\310Bk\3424=$>\340=\"ON@\361\241\367=K\346\024><\330\226>5\317\3619\371\327~=\215\300\210\3015\304\307?.\376~\2762\034\016?o\366~\275o\265\352\273\'\374\005\276\240\262\311<\224\265>>Wy\221>\\\331\201>@Cc>\356\236\037\274\372\331\025:\211\227\3479\272\'\275:\362\233\263:\344\245\350:\255\240M:\261(\241:\354\243\013;\275\212Y;>\261\":XR\271:\352\023\022:j}\312:[O[<\220\271\346<<b\263={\253\016=rM\336<\210\346\032>r\37409Y\254\366<u\232\354>u\361\315>\276<\313>\272\267\221>\223\327:>\270\343\014>y\'\035>N \230>\007U\223>\234\267^>h\246\234>\307C:>;\004\026>E\365\3459\037Z\3249k\255\207:\225\276Z:\353w\005;\307+\3769\243\306\226:\023\342\024;M&\204;\333`\2549+\004\005;\031\203\n:\271\306{:\267m+CD\235\231=c\000\r>\326\322S@\262\004\023>\210\310\022>\315\313i?\221jZ9\303F\017>\025(\202\301\013\335\266?\007ZV?\300\262\331=\210Jb>\373Oc=k\321G=\022\362\\>\345\333\371\274o\367\373=\363\257\353\275\n\022\266=\350\215\365<\353M\221:{\323t:\237\253#;\365>\016;\261v\370:Zd=;\331_\007;\337\201\234;+\027\033:\223<b:yi\324:\315\357\206:\213\355\374:C\251\271;\357\265\033<]\212\307;\207mT;\341:l;\233\203\256=\243Xj8\351\226\030<\354U\023>t\252L>N\202\261=\233\220\225=\005\022\226=}\007z=\345\344\001>p\203\375=\313\\\236=S\340\333=\265j\233=\0032\177=\363\026\222=\210sa:\21570:a\267\261:M]3;]\354\276:\002=*;4\035\253:\307U\335;\230 \3309\317\260\006:\t\003\255:\027MS:\2531\332:\000\000\360B4\240\257=\301V\312=F\275Q@\375\363%>s\255\">Y$c?\267\26799\254\021\027>-\372\206\301*\222\206?\2640\360>0\262\346>Km\234>\272\212\325>\272o\261=\240l\r\275\001{\206=\352W\205=\024\373\330\275\374>O<\206h1=\317<\260:\003\252 :\346`\262;\314\032\332:f_d;\\\377\237:\007@\316:\257\227\n;1\206K:\027\214\270:\235\021~:[`\354:\201\237!;\234A\236<4\361\216<\301S\t=\0031`<l\324\321;\206cg>\033\370f8\242!\027=\201*\371>\277*\202>k\374\254>\247\227\354=\332g\370=8O\030>\236u\010>o\311\027>V\370k>\343\353\377=o\267\032>C\241\036>\265\226\034>A\275T:\360m\2469s\330H<\260\017\000;\270N\324;/\257\203:\324\'\233:\342G\224;\007\214\020:\323\270r:N&(:\2518\226:\376\371g;\000\000HCg4d=\335E{=\242\267K@\260\234 >\241\271?>\256}\257>%%\2109\320\333/=\267\255\220\301Q=\000@nQr>\245\301\321>w\366\247=^\376\240>\350I\005>\327\253\227=\001h\034>{\373\316=\025\312\354\274@\225\215=\205\000\023\276`R\255:\3160s:\354\216V:\005^\t;\277\250\231:\354\200\031;m\314{;\335~?:/,\004;\2329\226:\254\004\300:\211\337\002;\274\220\352:\215\377+<~\2023<\377\302\301=\252\304q<\343\227\357;\240\254\303=\000n\2228\351\237F<\244\253\n?\030\323\005>y\222r>\227\2347>?@\027>N\361\001>\225(\374=H\357\022>\273\276\004>\215\323\272=hC\321=0\222\013>\221\225\037>%\252\251:\367\305S:\3256\033:i\371\231:\016\322A:(\373\324:\253\240\241;u\030\':\004\376\032;\241\360\235:\231\343\312:\345r0;\3533\230:UU\005C\245N\204=\332*l=\354\317G@\343\375\023>Ys->J\343\000?8\367\2539\177\247\253=\212u\216\301\370E\225?\255\371P>\317H\343> 5\246>\243\221\313>,\363\312=\024T\236>B\214\255<lO\367=\316\245\002=+\2078>\352S\031\275\022;\225:\335\325\204:\031\251\321;\350\342\364;\322wJ;8\036\237:\266\377\203:V[P:\016\'\006:\217\262\364:\361\371\004:\376\0012:\230&<;\300o\'<\333/\243<c\307m>\270\'\023<\323\307$<\371z\320=\320\307?9\236s\260<\251\363H?\342k\233>\223\362=>\353\333\225>\t\277A>\341\2574>\226\235+>p\"M>\023\325;>\243.$>\014Ll>\205\245t>\034a\316=\3356M:_\025a:\274\006\266;x\357\353;\177 \267;f\361\216:\362\226<:s7\023:rP\2369%\313\334:\223r\2149\305\352\3359\376+\032;\000\000HCO\372\303=\221_\346=Y\214R@\024!8>(\006)>\216\306\205?O\317\0179\317\360)>\206\026\207\301\227\033<?\206\350-?\025\225\022?\330\322(?\314E\341>\256\213\204>\r\354\212>L\374\337=\244y\017>@3\242<\275\203\370:;dO\275V\223\223:\032I\032:\225\303\211;\356\232\";\342fz;[\013\347;\302\321\";ro\342:\225\354E:\304\250T:\347\220\201:\364\372S:V\272@;\2712E<\271KE<\333bE<\235\247O<\321\024\003<B\223\027>e\201\02389\007\253<l\031\233>dp7>\0333\210>fyW>Y1j>\335\345#>\017S)>\306\324D>$\325\303=\n^\371=X\214\306==\216\257=\273\035\224=\017\374\214:\367\260\2309@\272\205;\207\304\320:\022\201\225;\273q\004<\325\034);\322\374\025;\336Q\3509\364%\t:\322\342\211:!\014\3529^\375\002;\000\000HC\325\020\273=\033\t\304<1_I@\200!\017>\327\013\014>\352Tw?\351\340v9$4\022>\353\246\224\301\277[c?\303\213!\274%\n%>q\345>\274\361\262\222>\372\265\221>\225y#>\347n\337<\215\364\234=\352\277\201\273$R\377=}\343\256=^^\t;\037x#:m\334\347:B\312\357:s\327\333:\373\233$;\245\232\003;\252a0:\262\377 :z\3776:\265{\330:\245\337\263:/k\245:h}\221<\350u\n<\000>\014>\336D#<\331\322\032<*w\227>\033\347\2248\315\241+=0\037\375>\267\350\034?\036Ir>V-^>\320\005s>\261\014\032>:\030\210>\344xD>\376}\221>D\300q>\021\222\027>HT >\327JA>\350:X;\211\213\034:6L\236:\340S\335:\314\254t:\316\263\010;m\210\003;Q\272\37592b\3539\317W@:\302Y\343:\341\035\364:\254\256b:\000\000\360B\370E\212=\335\242\262=\357[S@\2060\014>\324J\033>T\342\021?\356\255\2029S~\304=O\241\205\3018\231\334?\316\373v\274yw\256>\001\221\367=\367\3329>4\222p\276w\240\206\275 ,\246>\000qf\276\3667&=.\236t>\267\r*\275 \220$;\265\301\337:o\035\267:\221N\027;\032\006\325:V\'\314:~\005#;\006\353e:@\013\263:w\004\315:*5\216:\036Y@;@\373\314:\240\233\005<\322\340\245;p\002\000<\213=\021<a\374\273;{\226\323=\273\331\2348\323\023\327<C\000N>I\332V>\277\')>\235z+>\310\321$>\327==>\026\001{>O\026?>\326\231\203>\200\343<>e\0200>\365.\005>B\367\307=\264\324\004;\0246\342:\016:P:\004RH;\261\221\230:\322b\205:C\321\307:\014\006\017:\226\250\212:\252\014\222:Y\004x:\356J>;\207pG:\000\000HC\205\275d=as\'=~:E@\354\262\330=\336\203\345=\370v\037?\357i\2719~n\321=V3\217\301\340\016\223?\312\206\260=\254\"s=r\221\354=\266d\033>,\024\375=eq7\275\'\370\302\275sy\375;\226Bj>\005c\226=w\025\303<\230\346\324:k\371\210:\360t\243:F\215\306;d\367\245:Jl5;P\2264;\304Y\356:)C\t;(b\035;\203\010G<\024\352\3709\375 \224;\240\245\204<\230?l<x\251\013>\027mo<\035Ya<Og\232>QV\3428\215u\021=\244\210\021?\335\210\005?\017\325\347>\273d\231>\210A\270>dZ\210>\276`W>\005WI>\332<\200>P\361\210>\361:A>IKh>g}D>3\2446;4\331Q;VH\262:\0030\346;\030\025\236:\336 \031;As\244;\324X\234:\006\356\231;\373p%;~\025><-\246\r:_\257G;UU\005C\004\264e=\221\016\307<\000-C@?\271%>:\323<>[1\342>\316\205\2739q\247\206=*`\231\301\367\321\370? c\020>\256\035\340>\325C\256<vr\214>6\230\277\274\231\021\r\274S\0220<\031\360?=[\316\252\274\021\331f\274\021X\017\276\223\323\276:/\227J:\201\301>;\307\354\245:\367\230d;\246\017\340:\303\244\226:\217\325\002;\235\330\005;\002}\206;\3115\320:\244\312\330:\254\033\001;+\373i<\354\364\237;[\360\342=I\265v<&K;<H<#>-\377\3258\364C\345<\233\212\037?\2147\265>\362\262\326>^\205\206>\300z\214>Tu\224>\253\212_>\250\371Z>ouL>\017\234f>9\234\033>\374\037%>\353to>\275\201\332:6\004b:\251\2330;:\270n:\336BQ;D\222\322:\217\206\250:8O\333:\257[\320:\302\261~;u\307\274:\022?\t;:_\202:\267m+C\356r\242=\304G\366=\030\315Q@3:8>\301\0179>nTL?\331\332<9:\275\000>\013\272\205\301\306\304\245?\014=\021?\342\033D>\201.=>\307j\374>\350\0270>\361I\226>\tcO=.\373?=2m\027=\267A\340=:\034\367\274a\251\322:\263\0277:;\023\305:\004\262\322:\234<b;\304\033\326;x\223\314:\360m\243:\345\035\345:\223\033\216:w\200\263:\362\353\215:4d\000;\314Kg<^G|<\004\337\005=\270\242`<\230\305\365;[\263\'>\224\23518\356\251\r=a\r\027?BsM>\027y\230>p\0276>\006\223%>\337\365!>C\003\367=*n\t>\361\301\">\'\014\237=\305\337\273=\377\257\304=E\243\310=rK\267:o\277\030:01\231:\005X\027;[\\\021;\371\362x;-\025\216:\253\304\257:\374$\261:T\341\200:\357\333r:\017MY:\322\377z:\000\000\026CC\007\263=\031J\310=>\347R@}\2165>\271\360+>\247\224p?1\357J9\026\346\033>Q\302\212\301S\374e?\024\254K?F\217#?p\374\214> \\\226>v\005\234=j\001\272>a\212\275\2754\272M>#\237\262=\371/\313<\227\235\326=\234T\222:s\300\016:\275%\273:_n#;kh\232:\201\231\313:\300\263\200:\026nN:\027p\243:q\254|: S\257:\316\347\3669\321\375\233:\235\211\343;\226\001\016<\326hY<\242\301\t<Q\371\020<Mp\250=,\034y8\260Qz<\211\271\332>\235\027A>\267m\227>jy3>\360\034\r>\007\337\347=Y.\314=\204\334\360=\203.\337=\331V\232=\303\023\271=\366\325\321=\200\002\235=\263\002\301:4\345\2729\030Q\315:\274\231\020;0k\237:%1\270:m\206\212:\035U\3759T\300\360:\327C%:\313\351\343:\224/\3329t/,:\267m+C\215/\241=\265\310\210=\351\221G@\307\273.>+\">>\227\313\033?~\250M9\251m\271=5\376\215\301\310\026\336?]\222+?\202\037\347>;\005\177>\322\262\307>\344\314a>&I\200>\344t\334<\356\010\027>q\235\262;\217\017\320<jf \275\304|+;\327<!:^#\343;\300\314\252;zK\232;\323-\323;\255\366\257:A\037\236;i\211>;@\n\212:&\374\330:\014\354\326:\207?S;Q\220#<\366\260\002<\325C~=\030mF<\262\375\367;\267\315\264=Y108\230[\236<\n~\177>0e\000>\326\215\022>\373\230\345=?\352,>\3572\032>\252\347\014>\215\"\033>\207\347)>\257i\t><\353\013>\356\201\006>![\304=nw\";\232\017\2609\2227\257;\200\360G;\311\266\366:\256\276\226;|\026\203:\242\352|;\210F\020;\316\006\214:\227\267\365:\367\'\205:\'\014\224:UU\005C\030\257N=B\337\350<l\302J@W\355\337=\325\014\n>\272\303\330>q\033\2369\003\232\242=\331\320\223\301E\267\324?P\037\351>/\300\236>i\226\241\274\227\265G>\276\"\337=*\314\026>RM\206=\260zh=\312\262g\275[\253\177:\210\250\346\274\204j\377:\n\037\":\354\223#;\205TD;5v\000;H\020\025;\252N\017;\037/\020;\350\237\005;\001[\217:K\313\365:\203\204 :]\003\364:\034\203\030<\277\010c;\301!z=\204\2130<\341a <jt\003>\240\363\2168\r\317\251<\362J\236>\335\255->i\366\014>_g3>\025\202\">\301o\014>\317\3127>\306\016G>F\243\333=\022j\306=R_\365=\276\004\002>\000&\301=\334Z!;\330\r\3469-\001\010;\300s\032;\307\247\347:\372AS;\275\330F;\331~\003;\310\320\007;\'/3:\203\202\312:+T\2509\221ns:\000\000HC\277\344\255=\344\307\262=\300PR@\220;\t>:\201\006>f\253g?\367U\0269\251\023\034>\037\024\203\301=7\210?E\005\206>\217\372\365>\361b\233>7\314\234>\261\325\r>!\267\207\2749Z\037\27436\246=\223l\224=\251\224l:\033\256\251\275\001%z:\273\025a:*6[;g\253\265;\315\237\001;P\247\003;K\273T;n\222);\370\326\233;\312\t\014;Xq\370:;\207\203:\345W!;\036\376\030<D\030p<\320(}<\302?\273;\031\312\341;\315\016\017>\025\256\0078\212x\253<\372z\314>\3534\214>\020\326\230>\347r\014>\211q\264=#E\267=\215\300\023>\370;\013>\215Z\n>\210\013\341=\337M\262=\255\003\315=\275\211\256=W\375\3279\206\027.:\370\221;;\203\251\234;\306m\307:\243\220\233:\335\246:;\201\033\360:4\347\216;\r\036\366:\"\206\325:Bc\000:_\"\240:UU\005C\031\024~=f\357A=\304\375M@|\363\002>\242=\016>\373\036\031?~\245\2229E\361\322=\373\331\213\301\277\347\254?Nh\321\276\024<\026>. \003>\202\330\032>\247\266\020>+\227>\276\210_\002\276D\231\254=*\'\272\275WL\362<\004f_\275\357\224\264:\024\317O:\347\224^;t\351$;\272\361\001:\263\034\244:*\r\231:-\031-;\034\3044;\224r\252;\243\215\022;J\361\3459P\372\r;c\022\003<\347g~<]\026\205=kh\'<\034\214-<\221y\002>\024\363\2428\314f\323<X\266\320>W\256\247>*\262>>\302\376\205>X\337&>ko+>\255\r!>\026\217\001>d\244\002>C\3363>&\375D>\274\344\000>\306\247k>\tbc:\350\244I:\250\237B;I\272\003;h\360\2309S[\261:\3335c:\177\322\010;\246Y\031;\374\320\315;\"\241\341:\260\320\2079\341r\301:\000\000\026C2Z\214=\211a\214=l{Q@e}\026>\202\271$>5b#?\004kr98\270\335=\t\217\211\301V*\232?\232\014\347>\270\254\265>\2700D>a\304+>\225o\200= ^\343<\313\177\010>\014c4>0\326g=\351\036\350=\273\377\214<\"\373\016;!\257\253:\216\227Q;o\314\340;\236KZ;\000\336\254;\250\2172;>K\";\211\217\316:k\202;:\002N\346:\030\341@;cs\212;\203\356\274;)dp<E\252\t=/5\206<\000\311l<$\014\237=zJ\2148s\004X<\210\244\003?\343\226\252>\351\200\266>\334\341=>+\201\006>\227H@>\375*\023>\370\020\305=wi\022>\327\244\024>/u\360=\314\324\025>\006k\233=\030\0174;\336\344\345:\nb\254;\357\240,<\026k\215;q\372\004<Si\226;\177\350$;w\302\225:\376\207\3249\2659\';\362g\272;H\177>;\000\000\026CX\367\337=\034\207\'=\301\272Q@\354r2>*\374\">\343\244\223?=q\0009\375\342I>Bh\215\301v0r?jo\214=\363\002\023?\235o\262>c[<=&_j>\210\327\005>-\350\324=gV\004;IM\014\276Y*\\\276\221\343\037\276\003\013D:\021\207\210:\304p\257:\311\266\331:\2328\274:[\032\205:\210\257{;\373\351\201:\232\215\036;\030L$;\037-\312:\315TG;@(\337:(\307\177<\341f\205;\035\r\235<\302m\215<\263Jj<\205\357\017>\0328 8j|\321< 1&>\364\232\200>\266\2146>\244\241F>K\321E>kB]>\371\243h>Y{+>\336\003*>;\362,>*&2>\226\r\037>!5\352==\345\3609I\266\304:\037\006\217:\302,\365:U\003\315:.\020X:\276\035\204;10\037:\336-\220:\025\005%;\236\347\260:\271\005!;\244.\205:\000\000\360B2ch=\r\025\271=\275tP@>X\026>\0252*>\345\277\362>\177y\2539\306\304\212=\267\373\213\301\303\r\315??\360\250>\200\326\370>qb\223>N\205\256>\247\375\263=\026l\212<\275\023\003=\343}\036><x\317=3c\327=9m\227=O\324\240:\344R\n:ho\216;\3515\\;\207Z\035;o\273(;\022\213\263:\264]\337:x\325l:\214\267\211:,V=:\374z\235:\350\022\357:\006m\253<\036\3144<\375\223\020=\336o\224<(\n]<\256\276X>\317\300\0069*n.=\317\222\204?\261\014\370>\277f\270>_m\\>4P\016>\242\001\005>\323\247I>t\236H>w\315=>\312\"$>]\306\363=y\245\036>e\377\354=\355\362\220:\246_\2309\264-\233;\267\253a;\013\020\337:\357\377\t;\266\344\241:\362U\270:\177\330\021:\2265Q:\212A\032:\336\005\261:\2748\235:\000\000HCk\363d=0=O=\'\023Q@9\023\020>\306\242%>S7\372>\365\017\3509\'\014\252=\336\031\220\301\321\272\321?\037O\007>S\237\313\275\362\000Y\276F\360\221=\370*\004\276\300\020\211=i\277\017>\333\207\002>\317\025\375=\002\333\346<HXx=\272r\332:_\331\2369\240\213\237:\331H\020;\005\224\346:\2738\271;\013\223\2549\303\273n:\227\307v:S\336\307:T\366\000;\337<\3609\335\276$;\266#*<,\352\n<\361\350\037=d\017\250<\037\225k<-\\\020>t$i9E\214\252<d\032\007?g\333\241>}\026l>\376\351Y>\311(K>Q\014C>\247\247\022>\272\215\227>\237\037\310>O\022\222>P\227c>\300\0035>\326\304\t>\260\273\030;\342%\3569o\235\267:5\321\177;!Y%;\021\032\030<\251\304\2509\370\027\216:\304!K:\016\204+;\256)\014;\302\010\3619D\253\032;\267m+C<\276Y=;\225(=\211+?@\271\227 >*\236,>\035\002\340>\354%\026:#\241\235=$p\235\301\370\235\267?f\357\277\275\371\000\227>\007`\020\2768cV\275I;_\276\266mX\273~\013d>]G<>\256]->ru\206=\3659\334=\362\223\037:Q\264\002: ,\023:\014\357I:\\\304\256:+jJ:\034\317\3229\255\336d:\274\270f:\257\232\245:#wq:k\334\017:3}p:e\333\257<\341\304\352<\305\354\207>IS\033=&\222^<<\240\277>\222)\025:\330U\302=\032\266\302?iX\377>\325\357\316>\226\230\263>A`\023>v\377\210>-\237u>\014\303{>\340\355\227>\\(p>\203\nh>\002\031\235>gbB>\030\275\t:\270\267\3139\tk\000:d\000^:#\246,;\354\023\241:Ds\3369^\345\341:\022C\324:%\267\323:}\376\241:\206\200X:/\333V:\000\000\360B\037&b=\324\"\371=\367R=@a\272\023>%d/>5\233\333>/G\2739\022tf=d<\212\301H\351\265?\022<\255>\327\031\262>\303\357\213> \022\354>\361x\255=\214f\323=9\363\263=\031\356\244>\205!\310<{\267\035=\210\220\256\275\255\250\031:\313\304\3209\270\247\301:ww\251;\333f\265:x\210\270:\301\020W:\036\016\246:\006\234m;\3460\211:\321\245\226:\366\376\032:v\352\355:7\220\263<\336>\027=\366=T>\",\347<\227\353\253</\016i>9\367\2219\310\215L=\031\2044?\374\006\256>\nh\003?\317\177\025>\223\366O>\017\311\037>\360\240+>\333\264\222>vH\027>=t\227>\312-\332=\221\010\332=\365\270\332=\013\256\3359\364a99\331\273\214:\373\204\304;\320\353F;\203\255d:\336\202\005:\316\"\207:\3747?;\270\376\351:F\306\234:b\003\002:!q\323:\267m+C%DU=\310\006\240<\005[H@T\334+>Z\r>>\362)\333>og9:\314p\243=\264\276\245\301\316\004\027@_\245\007?\262M\007?\010\343\">5ma>a\303,>&v\246\2757\202\271=\371q\006>\375x\314\275\025\345\002\275i(\200;y\226\217:%?\3669\277\353\\;\177\314\313:\254\233\020;\346\3434:\262;\336:RD\342:\265y\013:\216\201\262:\227\200\321:\324F#;\372\374\344:b\321\271<\307\247\331;R\371\325=\361\315\030=\312\320\241<Q`\314>\021\376\2359\345V\344=\266\370\236?\007\210\345>m\361 ?/oc>.U\201>\223Gz>6-\200>G\273L>\322ec>\361\201\203>\300Ue>\036\314.>\266\033]>xMU:\201\237\2379\231\275\214;KO\007;\333h\';\346\251\035:\037\211\342:\246\335\307:o\003\030:SME;?\266\013;{\245\005;\216\227\237:\000\000\026C_\017\026=Y\234u=\000\235M@?\017\323=\234\264\021>I\004U>F\3663:IoR=\237{\221\3015\"\t@v\016\340\275\300\336\205>\373\331\336\275x\245-\276\247\372S\276\263\224\275\275\320AD>\'\363\257=o0\240>\342*7>\006<u\275y\304\3339\234\276\n: 7\3049-.P:\243)\232:\253\270\367:\211\361*;QP\235:\307\300`:H\257\2259c-\2679\210\024\036:\034\030\204:|\276\325;\027\332r<\370ya=h\237\r<\2142.<\201z\304=\221\335\2049\037\220j<,\000\356>sB\207>3a6>\023\231\221>JI\r>\3658+>\227\261 >\352g\032>\357N,>(\363\027>\004\235D>C\360L>\254\246\r>Q\271\3039\367\336\3609I\377\2459om\3759\270\010\221:\315\375C;!\337\325:\344f\254:U!@:\273h^9\2702\2429\223:\2769\356\265R:\267m+C\250\321\244=\205\247\210=\243P=@\007/>>w\251I>\010+\033?X\037\2739\371`\263=\271\240\225\301$\022\272?\305\2706?Ni%?\233\032\202>\255o\377=e]+>)\314V>\016\350T\276#V\027>B\262\016>\327\301\250=u#\301<\261A(:\177ZV:\017U}:\224\005^;z\241\256;\260\024\357:I\263\376:\232\241\200;\375yi:QMe:\352\272\n:\205\200\3129L\337<;\225G\234<ls\270<C\316:>\266I\365<\t0\214<\345EA>\364_\3628\220\245F=\214\2267?&\203\253>s\002\203>\203B->\324\323\'>\336\214\023>\222\323a>\315\265O>\030;\263>\360\327{>El\216>\366a?>v\361\342=\0107\240:[B\275:\372\010\242:\343\323\344;I\024\354;\254\347j;\305bq;\350\010\010<\321~<:\376`d:\364hD:\307]\2229t\023F;\000\000HC\344\264\272=\202_%=ibQ@\344\246E>S-:>\2540V?\234f@9AT\033>l@\221\301\242\312\264?$,\231=\303\346\246>\242\2526>\270\250O>Q\032!>P\000\341=?\337\230= \362c>\373r\327=\255Z\337=\256W\231\274\2423\3669G\023\335:\251\036\007;y\007\034;\313\263\326;J\343=::]\245:\215^-:$)\320:;\302x:\204i(:Ipf:\1779\014;\374\213`<\010\021\270;\373\274\236<\\g\237<G\0205<1j(>R\377\21189(z=\020w\250>\202\2301>\003\261P>\365\350\346=\376\316\323=u\026\347=\023\245\025>\250\260\353=\345\t\276=\026\"\026>7\026\313=\356\253\377=\350\214\332=\307\365\2619c\247\231:\013-\273:J\340\026;\356|\337;\375\211\37194E5;A\254\2439M\006\221:\302\352\031:\320\314\2569\214X*:\305:\336:\214.\332B\03608=)\217!=\324tF@\342\261\010>\003\302&>\331\222\236>Q\263\003:\300\376W=\3538\226\301\216\\\370?\275\031\304<[\341\310>\0061\177>s\035[>T\363\304=\343\227\005\275\027\317\343\275\'t\310\275\264W\020=\226\244J<\261\217\217\275\237\n\023;\362-y:\373H\213;*\256\323:?\266\014;\342\311\337:\223\376\226:\313xE;\314\301\272:~\305\306: \276{:&\211\030;\022\332\027;\311\266><gW\216<\227\371\n>\321\372\271<\242Fp<:=\375=\223\020R9\3350\255<\277hl?\351*\306>\376\214\340>h[\304>\025R\314>;\233\277>\357\002\244>\313\373\223>\016o}>\253f\222>\224I\245>ux\221>^\350\204>\204\277w;\315+x:!\332p;\210\374\233:\210\357\t;*\300p;\235\235\236:\224=\177;\204E\233:\263\342\354:\210\210\241:z\217<;<\220\247:\000\000\026C:\350W=df\263=\353\347K@s:+>\2003A>F\246\325>E\342\230:\024\232N=\232\227\221\301\240\231\354?\327z\221>g\347\223>%e\234>7\216\240>13b>\210!&>\261\364\003>;a\004>tf\364<\344\333\253;\007\215Q=\0025\031:\'z\037:\010\372\261;A\014\257:\347\037\3769;K[:\235z0:\002\306\350:\357\273\3509&a%:5\251(:kC\031:\323\r\337:j\346\224<\273\252\245<\020\307g>\224KF=\361\365\371<C3D>\n\243\023;\327Y\357<\350A\333?#\020\337>C\202\212>$>\222>\n\302\000>n\350\">5X&>&\335\271=\367\241\017>\314\374\375=\342\242\027>\r/\001>\330!\337=\005\031\031:o\240\3329\3525\353;0s]:\261\251\3029\217\242\301:\343\225\r:\225\244\305:\207\013\2349\025<\3219\030\'\020:\204\332\3569,\334\362:\267m+C\364y\223=\002i\206==\023K@\343\350+>\241\255/>G\305\031?A\325\2419\360\346\300=\250|\214\301\371\031\216?B\261\205\276\006\205\277:\003\377\253\275\330\2032>\345E\343=\344\321\213=v\010\351\274\273w\205\276U\326_\276\005{b\275t\026@\274\177\356\270;\217$Q;^\027/:oH\236:\004\177P:5\271w:\273O\017:N86:y\344^:\2264\220:SD\201:\t\236\240:\356\235\016;\013Y\235<,>E<\333\331_=QB\204<P\326\r<\371\223\036>C\307\2728\3331\346<^\340\263>.\366z>b6\257>2\334W>M\000\025>l\314\036>%\016D>\243d5>\022+v>\375\271\033>\254\375\033>\034>^>\310\234\225>HM\036<\233\244\201;?\036\3629\203\362p:\224\214P:\230Z\207:4`\3369\347&B:\2764\3619\nE\237:\201>c:\t\273\205:\0274#;\267m+C\005\316\320<#\330\367<\264Q(@K\211\275=7\006%>\236\224\240=-\335\254:\237\262=<1\233\256\301yQD@\313t\316=\231!\262>o\262;>\335\022\253>\227\266\237>\276\001>>T\177g\2745\032\207\275H\261\031\276r\241\216>8\320\031>|\327\241;\t\270%:~\312m;.\377\206:JY\321; \2411;b~,<-z\2559\357\033X;\'\360\004<\311h\352:T\233\032;\2157o;\254|\375;[Vf<!\231\247>m\354\234<\375\036\250<\377\335==\007dJ:\247\231\366;\2607p?;\017*?\240k\367>\323\010\322>\273\276\253>X~m>\361\342!>l\262\306=\332P\340=\240\274\007>)6Q>\224\262\364=\003\246\343=\032\227!;\355\202\3649q(T;6A\036: +\200;\n\370\355:\221\233\004<\355FW9S\323\251;\022G\257;k\235\252:\2165\361:y\210\023;\267m+CG\025\307=\227`\255=6\033E@\\\224O>#\024K>b\'??e\313I9\271\335\001>\224\023\212\301\247\301\344?\001\2613>\374x0>\232\275\364;\247\241d>U\214C\276A\213\264\275\225\203\220=\334\207j>v\310(>\232\276\373\274\224\212\230\2742\262\265:\223\306L:\244\335\315:\261y\354:j\032@;\276\'\245:\343\277\362:\330Z\327:%\224\322:\244\316\364:r\033\326:\355*\270:\r\304\237:\321\307\273<\244Z\236<\275`,>\253g_<\204\220\257;,\n\036>\207\037\2258@@P=R9\273>\343\206\202>$\005]>uOu>\327\351\023>/y\021>\233d\032>\225\317\010>V\2215>\303@^>Z\214\014>p\035\035>\375\013\350=\231\365\241:\357\227\033:\256\231\263:\026\252`:\246\363F;5k&:\361`\205: \351\265:\312T\265:\2244\236:x\224\231:\006>\232:\227\2149:\000\000HC\263\313\242=n\276\027=\006<Q@\300a\014>g.\020>J\003`?}s\2779$\363\013>\235^\221\301\322.\207?\235v\r?\017\347\217\274m\262q=\275\3309>\213k$>\035f\365>|p0=\342O\343<$\030\367<\252\036\326=\025\257\343=\354\370\230:\304\034B:\220\036N;\307\027q:^2\307:\330$x:\227rf: \034\222:\262\347\257:\333\376M:s\321>:\323\345*:\303\235\215:\222*k<\375B\034<*R\001=\225E\n<\332Z\001<\303\3756>\315\022\014:d{\337<\332\246\207?\351]\205>\351\020_>(\016\320=\216\037\006>\016\235\343=Cn\315=\334E\001>\002%\334=I\222\367=\3414.>TE\000>\336\261\300=L\205\223:]A\003:\200\221\331:\274\205P:\336f\247:xg7:y\3751:\262\334z:\374\035:;\262\334\025:\204v\014:\374%\3059L\303E:UU\005Cm\001B=\201\365g=u,J@y/\307=F\342\002>M\036\211>\272\013-:O\013\211=\016\013\220\301}P\222?\221\366M\277\351;I>\300W\211>\014\200Q>\357x\317\275NB\001=b\263\257=g\241\304=\352\270\'\274k\024d=\004\302J=%\370\300:f\'$:\244\274\002:\274\003\203:L\304!:\017\340\212:Q\362\3619\266\321\005;\266L\007;\341\263^:\373\212\203:\226\034\214:#S\246:[\333\036<\033\241\237<\000\231\277=\310\223(<\347T&<q\261\023>\306\212\25694W\240<\301% ?\331z\334>\343f\376>\364.\237>I\177\216>\274T\211>/\202\241>\352\013p>\"D\233>T\"\246>y\272F>\214\217i>\024\217\202>!\304J;U+V:\363\316\023:Cr\253:z\230\2729\004\202::k\376\3519R\025H;\003w@;55\224:\364x\246:\333q\376:\014\315\230:\267m+CF\t7=\204j\010=h\022;@\225\247\002>}\353\014>F\305\311>\332\220\3519\310\255\206=\221~\231\301\201\377\313?D\242}\276:g\206=\236\024,>y!\235>\020a\377>\'\246j>\3025\022>\227\240\344=b\'\355=*H*\276\236\247\\>\301\357\3769\213\260\210:~g\245:\314\265b:\2750\032;\030\364^:u\223\333:>Z\':p\367x:\3375?:\307bJ:\375\312>:\310\033\206:\236\001\223<\362\240\017<\220j5>6\210\362<\030\037z<(\203b>\317\330T9\217\317\234=\325\324<?}\220\230>\007\305\301>K\005N>\275\016?>\302x$>[\317*>\374fP>\354a9>\022~\373=\251\256\n>\033\220\366=\033\010\020>*\277]9\325\333\n;H\275z:\215\317$:\004\312!;\016(\021:\017\007\022;~\214\013:\257\023,:4?L:\027\375\261:\212\304\001:\314\223\\:\000\000\026C\325\346q=E\025\221=\035\251!@\321\021\355=\2217\">\036\243\036>@\006\3659\375\260\237<\313\036\225\301\316\005\001@_\364\237>\34282?fh\234;\221]\377=q\312\203=2\340\240=\375D.>\353\330\215=\233H\254=\232]==0\033\205<\312\255Z:\366\205\226:\004\177\365:\274=\246:\226e\267:g\243\014;p\225v:\366\255\232:\345Z\230:K\263\234:5\215\210:\024?a:\256N\210:\217\355\306<\335:Y<\006\306\326>\013}\263<\260\202\221<+Au=\370\351C9E\2721<\233\1771?\001nl>\311&\267>\225L\233>e\314d>\320\2323>\357\201k>d\202<>o7+>\362\231`>\235\0136>\307\253\017>\346u\r>Ft$:\222\004\307:\371\341\224:\341vF:Y\316+:\016om;@~):s=R:\024^j:\376b=:\345&\036:\3745\205:\316-a:UU\005C\221\010C=d\375\376<\345\346H@H\231\346=\".\000>\006i\321>;@\007:\024\274\231=\025\263\223\3017\231\241?P\357\264\276\007\354\006>t-(=*\310.>g\306.=%\254\306=L\010\t\273\003,\365\275\263\333\023=6\246\302>\022*C>J\002n:U\201\207:\205\007x;*\237Y;\343TS:\212\254\276:vIk:\221\357\204:\\\010\r:!\230\3739\231\243|:\331I*:\006\202\372:\210\306\002<\236 \357;\177\312\334=\227\230|<\"\024b<\322\242\377=\243p\2029\246N\211<4\222\003?{\261\204>\367\250\204>\245\267\237>\243\311%>M\257\234>n\303Z>\003\240K>mNU>\225\225C>\215\270>>nYX>\234\210<>]Z\200:\230\032\223::\2434<:\032W;\312\303\200:Z\247\007;\210#\032:\250\346\216:\342H\2659\002\337\3009\332\226H:\261\023a:\367x>;\267m+C\266;\306=\213\032\006=8\265L@%F3>f\3354>\022\274_?\353\004`9f+\002>u\n\222\301\036p2?cry>\005\335\025?>\354\313>\203f\225>\374\230\n\276\327*i>\226_\022<\312|0=\004\256\245=\270\204\207\275s\236>\276\3427k:\264\377\306:`\031\372:\225J\326:\374\245\306;+\332\230:\r\n\212;\3063\252;\2577@;6\350O;\357^\214:\375\320w;h\372\\;s\370(<!u\370;\326y\225=\314`;<\356]?<\000U?>\257\367\2258\271;\317<\327\031\262>\341Q6>\345\265\242>\311\373z>\262\300M>\207}T>s\\c>\374U\221>\3414v>qw\203>`\224u>T]\222>\273OS>1:\274:\335\215\332:[\345\252;O\033\024;\010\333\260;h\027P:\347H\202;\224w\253;3\240>;O\336\203;\354bH:j]\214;Ey\352:\000\000\026C\344\241\207=\227\257!=\223\207,@\021\341\020>\331\033\034>_9!?\263\024_9\326J\327=i\r\224\301\330*\367>[\017\351>\366\3130?`\323\353><9\316>\274I\235=\234\313\031\2748\307\003\276\023Fz>\271\265\275>\266\364\260>\334{\032\276i\221\233:zv)::\246j;\215\224\266:\233\201\305:Z\273\231:\315\205\026<\345\360\017;\360\366\004;\034 \265:ki\3669\025\245\3519uY:;Ks\250<R+L<\000]G>\026\343m<\3042\202<\213\213\360=^\355\23785\'S<\324\202:?\014\352)?\351\372#?\177(\204>\346\306\217>w1v>J\230\203>#\343f>\364sP>|\313\202>\001\312\265>\277\264\231>:\245`>\270\302\200:\240t\3239\013\274j;\\,\240:\357^c:\307\242]:\341E\r<y\251\324:\351<\255:\366\206\226:\021\007\2079\022\232\2279\306\031\006;\000\000\360B\230\357w=\035\337\336=\376\025H@\356\2372>\367\337;>\261\203\006?\"s\2559\366\235\232=\310j\214\301\024\373\260?\351\317\355;K\300\177>\177\230\224><\370\203=\307U\215\275\271\233.\276\324\371\234\275\030\265\t=\343\324\241>\345\025\203>\230\201/>\200u\010:4??:\353\027\200:\365\017\273:\361\206\351:\324\212l:\270{\212:\032\257>:`l\177:cE\3039,\255\010:\301J\3339\tU::%\210\262<c\310\005=\224/\024>\310\233\201<\020\306\r<\227\251_>\016\346\20794\2479=`\226!?\275kq>Z\355O>\337\247~>\332\377\001>;\324P>\326\246\">\337A+>\017\025|>,\221/>\373?\205>\310\270!>\"\033(>\252l\000:U\2426:\004\343&:\222\362\243:3M\336:\235\346\016:\004\364(:\232c\020:\017(*:bIv9\354{\202:2\006\2729\346m\3429\000\000\226C\355{\376<j`\314<\363\032B@_\336\370=-\313.>\006\202\002>7\216\220:/h\347<YY\243\301I\2641@Xa)\276\013\351M>K?\026?\332\257\021\276\335\357\224\276\372e\200>A\\ >\002\370\003>\261v\\\276\346\234/<\265\262\271=\350X7;\262p\013;\337\346z;\247N2;v\0054:,\237\024;\261\352\344:\002\320\202:\024\361\360:[\370\037;c\304d;\177\032\205;\367l\177;Z\313\334;\222\367+<\300Q\022>\365\231\220<\202\227\212<\027\204e=\0241\32599\217 <\331,R?\024:\274>\024\\Z>\206*\206>\221\254\243>\217\221O>Sd\226>\335\227\262>\276\377\270>\2178\256>\025\231\302>\357\274\220>\244\224J>\350\371\375;\221\255V; \314\346;\321\\\245;ON\234:\210\326\332;\330\373};E\325\277:9\254L;\014\272\350:\317\373\254;\321\025V<\360\354\211;\000\000\026C\035%\217=A\242\010>\355\030R@\365\205\030>\003\270\030>\307C,?\353\252\2109B6\352=%\274\205\301\207\201\203?)V\370=\370\030\034?\351{\217>\265\364T>8GQ>^/\\>BCd>\371}c=\276-t>Y\364v=\343\364+=!\214\2719=+\3249r\272Z:6k\361:\241\235\037:U\335\277:\261\246\033:2ob:ey\212:Y\025\3119\267\022\211:\211]\2149\257\"\\:\271\0065<}\252h<\233>\210<4\177\036<\253\353\021<\\\243\033>\272\013\3408l:\000=\355\236\223>Z\231q>\346\362\021>\2227D>$\t\256=\201\024\370=\262\351\024>\274+\373=t%+>\037A\372=\265\025\r>\323B\266=\366\342\232=O_#9\227\211\2149\366\375/:\200\240\020;2\275\2759t\t\255:\242{\026:\327\357\260:\231z8:\312\242p9\222\331J:\260\025\02698#\026:\000\000\026C\312\"\226=Iq\257=S\224S@\230`\n>F\354\004>V\235\\?L7\2079\323)\013>\354\371\211\301\325u%?\315\367\035?\213\003\377>&)\354>\326Y\312>\304\377\275=\t\326\230=R\326\201:\222\031<>9f\'=H\235\335\274\356%\224;d\215\300:\220|3:h\272\220;\263WR:\017\317\020:\267\361A:\324\3510:\001\350\023;\007h\3409\332[\036:\344\374(:X\337@:\215)\304:q\2379<#|2<\317\272\005<\031\245\230<5\005}<\217b6>m\222\0139\371\033\223<\251#\223>\232UZ>\003Q\211>\233\"\036>\272r >\245r\003>J\300\031>&\021#>2\256\022>\256p\025>8I\025>\263\264\327=_:\340=\226\314\177:;U\245:\233\260\233;\352@^:\323\223\017:\3143D:\232\t\017:M_\345:\255,\2029\257\203\r:n|6:*\266\3629]\224\226:\000\000\026C\001W\277=7\275E=@\000R@\364\332\034>\266\302\025>\3227\204?)\346-9B\000\'>\2306\211\3012\373\222?\'4\231>\373D\221=\260\233\333\274\207\343\205=\226\007\343=*\247==\307\300\017>j\375\207=\376{\031\275Q /\274\331\007\005\2764\261\214:g\237\036:\222\273\024;\3707\220:\274)\006;Y:\323:\033\262\351:\377>\227;\244\353-;\0317\344;3p`;~\330\243:\303`@;\0017\030<\271<j;\030y\213<v\356\033<\364\302\325;\325#\024>\215\236(8\276\321\316<\007\256D>\335\252\367=\256\204>>h\261\001>\222\213\340=/\303\037>^\026\022>\035\233\374=\216\035\010>+\372\315=B\371\365=!U\r>\002\310\005>\315\360`:\321\302\2719\323\216\310::\307\222:\376\352\243:^\223\000;#I\276:\271\321[;\'\315\010;Ew\376;wI\217;\n\234\006;%q\346:\000\000HC\240\242k=<d\246<(\306G@vH\007>i\202\025>\313\021\017?(\230\2219?\307\311=\237\317\224\301@Q\215?;\251\000<\t[\031?x\350\037>\305\377w>=[M\276.m\274=Z\365\n>\366z\035>\014\004\330=\351K\207=\225\273w\275h\344\231;MR\250;\204\002\r;\307\300\353;\026\253%;\352FX<\204\177\324;$\002\211;w]\004<\331\215\266;\300\257B<\341.\232:p\315\376;\032\2615<\030a\251;]U\006>\220[\213<\342&\212<P\310\027>t8\2478\257\214`<.a\022?afK>\324H4>\345{\341=\230\241A>\'\273+>$\331\331=A\347G>\251,1>\025\273,>\217h3>:A\347=#Y\003>\357\260\237;\tH\004<\237 \017;\257\017\360;e\014A;\221di<$s\034<\036\036\255;\353K\024<\246\3735<\237\242$<\323L\033;\223\314p;\000\000HC\312rE=\227\242r=[?R@\307\022\017>\237\331,>.\277\315>\246b\3279dTt=\304L\216\301/7\325?\224\254\010?\206\275\250>s\224\307>\244U\231>\267\355\002\274\035\343\311>\021c\351\275b\370\025=\357\240\376\275\370`\254\275\007\313\356\274\242\356W:\356\374\341:\323:&;\241\251!<\304\202\234;\304o\365;H}\256;\031\251\217:\245\313\252;\202c`;\237\023\210:\343\035d:n\372\335;\254\037\266;F\360\000<}(\250<\021\353$<\250D\034<\354\021l=\355*\0379\247C\203<\254\355d>\225~\031>\357\3504>\243|\301=\272\324\300=u\202\346=\373\276\361=\022\332\361=\210\014\312=p\337\256=\305d\375=\022\327\030>\202\\\375=\340w8:Fu\275:\270|\024;\256k\312<\242\276\032<i\231d<Z\211\"<\265\322\336:\247\n\017<v?%;\350vv:\233\027a:\036\217\337;\000\000pCJ\317\245=\005\2223=\346\333R@ `+>\203\2322>\273\325G?E\207\2109+\255\371=\255\333\215\301\257!\245?\353\377\357=\324\352\010=\030\261\031>\363\247`>\337\002\320\275ES\343\275\310\274\211=\241K\326=\261u&\276\3257\334<\017\266\355<`x\307:\320\2140:^w\375:\333\002\374:\257<O:\022\356R:M\267\242:\003i\362:\037k@:\020}\270:E\360\031;\277\032\205:\nR\246:\022\005\201<\363\351\235;\224L\225<\013\340\271<\004P\207< \304N>\260\247\2658\231\211\366<WJ\222>\260\013N>W~\265>\234\331f>h\356X>\316\037\200>\010i>>j$\003>\2323(>K_9>\200o.>\255_]>\r\233:>\331\207\274:\022Y\027:X}\277:\332\357r;\027b$:\361\025@:\311\243\255:0o\271:[F\016:\230\374\306:\263\200\327:O\3072:\250\333j:UU\005C:@[=\n\177\334<<jM@F\211\013>\032\200/>,\330\220>.\232\2749\234\266L=\330\265\225\301\272\373\023@L4\247\276\010\330&>o\254a\276\0336\224>Q\267\264;\363^\016\276_\033\272={\033p\276\204\220\207\276\016l\017>\276\366\023\275\234\341\277:\313\025\322;/$\232:\360\336\360:ad\263;.d\302:\032\316\242:\212\320\214:Eh\333:\347\007[:\016E);)\376$;\226\356(;p#\313;\303f\207;\223\231I=\332\314O<w\266\027<*\267\221=\352\231\3038\007\344h<\377\374\253>\016Z\244>\312\006\216>\333\324<>\357+z>bFO>\201#r>C\244\025>\267\0018>\002|<>\322\017K>\273\342$>\303p\277=us\206:\313\201\241;\324\341p:vq\000;@\214\336;\\\377c:\004C\220:\265W\224:\356\022\361:Z\261\3659\371\004\310:\321u\004;\322\037\340:\267m+C\220j\234=!\264\271=\350\254Q@n\244%>\033\257(>\31419?\215\342O9{\243\007>\216\335\206\301\304}\326?\375\010\353\275>$\227>\014\330\210>\376\300t>\r\300\002=\333\0071>\362\"V>\354\373b\274\246\205Z\275\236W\213=\002\263s=\231$\223:\253Q\305:5\261\362:\377@,;\346\023\315;\233)\022;\312W\033;\222\233a:KZ\221:\327\324U:\316\267\252:/:\337:[6\004;\014\352y<\362>\024<\341\376\367<vo\233<\221M:<\340\0221>\004\350\2248\202\3517=o?~>\020\221(>\326LV>\305\240\010>\213E\274=\3343\002>\365\374\346=\202\264\023>\301P\350=\3527\005>\225\350\335=\3566&>\237\275\016>\323\366\210:\225,\216:\326w\236:\263\033*;X\021\246;\'\010\254:(\251\351:\344y\006:\016/U:\217\330\3029\010u\234:\034\347\254:\327\272\231:\000\000\026C\352\336r=X\201\331<\332\373D@\335\320\361=S\027\366=\310\261 ?bp\2649\001e\340=\217a\224\301l^h?\354\253\353=\315p\304>\014\270\327=\232\215\022>N\225\223\275\271\005k\276]{\371\275Q\373\331\275\037&\273=\364\014\326=\2245\001>\246\234X;1\024\375:.zY:\226\017\370:\000\007\313:\301:\377:i|m;\274\254\234:\325\223\245:4^\002;#\201j:\235\233\351:~\311\003;\"\223a<\364\317Q<\335G\002>\355\224\021<\364\3647<\324eC>\207|\02698U\341<\304\'\377>\022\275\307>y\366\270>\313\332\215>\226^M>fP\232>\364`\220>\252\232\261>\342\333\345>\262\315\230>\345\203\217>9g\223>\013o`>\030\253?;p\304\006;\245\3139:\255o\031;\345\362\007;\225\330\024;f\\?;\3236o:\317h\306:@\371\212;\366,8:\305C\315:\216\251\220:\000\000HC\373\341\256=B\203\302<\245\027Q@\tU >\272~\032>3\341r?\266\234\2049\376\227\013>\3155\225\301\263!Y?\216\'\030?\233*\204=\2547\354\274\003s\335>\202\357\234=\007W\242>\201\245\025\276o\005\271=\370\331\372;\374K\304\275\320D\345<\215\276\207:\250\200\024:\367\215\330:\234\255/;\2444\216:\000@\313:\323#\204:M\203\327:\237\377\026;C\013f:\027\023\332:^\202Z:\016R\320:e\004&<\347k\212;`\\\343<\335\375e<\323\3172<c\347#>\275\220\2578-\327\340<\023\273\304>\3139#>\013\256\203>\360\002;>\202\023(>\250\373\010>\242B0>\026\377\021>\345\212\000>\033-\n>,\0356>\263F\004>\363+.>\344\014\251:\254\237\3549\020\014\263:\265\253^;A\304\225:rX\312:\r\341g:*\332\014;(=C;7\034\352:\205\361\251:\177c\235:\316\275o:\000\000pCi\327\212=/T\225= fP@\364\350\036>\006\342$>\035\361\032?\022\217\2749\251\233\315=\230\221\215\301\025\200]?\320\376\352<,\034\017?W\357\342>[?\340>\260\346H=\261\314\014=\030\003a>\340\310-= `\313;\247\252\265=\232\327\335\274\223-\001:\203n\3769^8\251:\215\216\n:O\232\203:dz\316:!\'m:\014\320$:s\206\3139\354\017h:\010\355\022:\202-\2509~\220;:\212\005\273;@\357\250<m\253S=\202%\360;\017\210\271;\335>\336={\300\3428\211\352\235<\2540$?\"t\212>\222W[>5j\241=\351{\325=H\324\370=\326M\017>\023\033\005>^`\340=m\213\027>\007\253\377=\250\222\372=\332\205\006>4\315[:an\3119\245\r\266:K\215\2469\363&\203:\203\217\302:\002\002D:@m\026:\214\226\2059~\'\030:\340\223\2539\252\351U9\005>\3279\000\000pC\220\035\214=\321\254\250=W\372O@\003\343 >\000w+>\3123\025?\020{\2059!\375\300=\216\255\211\301\325\216\272?\2178\255>\245\346\025?l\177F>P\260\237>\\\r\360=\t\245\220<!\233\220\275!Ww=~\215\241=\205\013\327=\226h\266\274)\323\032:\313\236\377:\2474\210:\377e\236:\202\026\374;\355a\372:\340\316\252;\254\000\230;\276f\312:\273%\312:\000p::o\305\210:\343\375T;2\327\212<\3750\240<\226\311\231=\271W\237<\257\225\020<\347\2248>\267|\0069/s$=.\302\010?\255\342b>5\361P>\367\375\006>\354\233\021>\207\000\006>\253\331\372=\004\030\317=\202\247\030>\335\254\225=\314_\243=\231\377\303=\201<\200=\340\004\017:\244\303\353:\330\300\033:\201\304\204:,\305><i\325\231:> \262;&\0266;\232\235\207:\017\237\272:\327\304\013:5\313\227:\255\3379;\000\000HCP\201\262=\253\206\031=R\014O@\330P\020>d\312\001>\376Hl?|\241i9\316\306*>\216\256\217\301\004*\250?m\313\246>\214\263\243>\304\246\207=`\245\016>\003V\275<\204\036\220\274\352\2116=\3147%\275\205\216\244=E2O<L\037\354<\301bh:\364<[:O\323\006;\\\207E;~\206\036;\272}\225:\303\242\247:\215T\243:\207\\\324:\222\001\025:\014b^:\205C\373:\033r\266:oSH<\0356?<\327\n\221=\354o+<\022\364\266;\276\036;>u\366\2438o/\361<33\016?0\264m>\004\277\210>~\241\216>_33>\032\021H>\241T:> \373\023>\024=D>;\2404>\307/\033>\205\322\021>\272\n\373=\335RL:S\035`:\r\314\332:y\355k;d\325Q;\203\271Z:8\323\216:8\1778:\237\327\313:\241\345\2639[$%:G\203\232:\345\365\207:\000\000HC\204\364\"=\247\307F=\002CD@\201\362\261=\332\345\325=\000\365\225>V\251\205:\241\275\204=8\006\226\301\200h\305?\261\020\202\276u\205q={\324\204\2760\313\221=S\362\374\273F\020\236>\252q\207\276\276\376\237=0\033\030\276\201J\362\274\371\265\033\276Tk7:|\373\2649\021\335\3559\314G\354:\337\007\n;\362\016x:\326\267c:\331\375\273:\231\365\320:\262UL;\260j\203:\365A\035;\343\322\375:\034\237\375;#\305\334<\334\230\202>D\031_<<\034\212<\\?\007>d\256\3059\3769\265<\276\331/?\353\220\022?\201\230\031?\251{\267>+\332\262>\016\247\333>:\301\230>\250*\232>\337\005\222>7\374\205>a\335\274>\301&u>\320+\222>i\026M:-\355\3149]\206\3619\036BV;\"\357z;\014\237\244:z\236\217:\326\267>;\336gR;\016\033\317;\032\315\231:\237\324\211;6\305\t;\000\000\226C{[\231=\213\013\267=\254SR@\227\300\035>y\204$>\274F0?:\214\2179n&\371=\316>\207\301\256\003\266?\376:\220\275\275\024\221=[e\257<\276Z\r>\037\216\210=|{Y\275c6\221>\021+\351=\231[\010>t\213\010\275Z\201\237=Yd0:Zs8:c\311>;\355\246d:>\350\347:\337?\020:u{\253:\374\017\305:\340\306\244:&\225\307:\370l\203:\237\3642:H\273\261:\265\037V<4\351\330;\016\035\253<\007E\227<\006\227.<\327o;>a;\2468\233\354\026=\333\315\212>\232Is>-\363\240>O\265\217>\337,6>9\3048>\207\304k>\342\016\237>\266\316\200>\231/\245>\200\025h>\030D_>\267\3353>\306w,:[\231l:G\335\014;\026\373\036:un\226:\372D\n:\336\362\372:B\204\237:\300X\360:\002@\036;K\257\235:\361\214=:\327\3661:\267m+C7\326u=`|\265<\257\362<@\245I\355=m0\t>\334\204\343>\274T\3479\303\366\257=^\367\232\301\311\206\200?kg\327<]\323G?\320@e>?\026\354>\345S\304=+\312(>+\260s=\316\2770>\237t\301=\234# >\232\241\035\276[ \000:q\370#:\2651\252;\251\242k;)\273\355;\225\273s;\303Me;\006F.;\031k\036:/\255\253:\345~\3649\252F;:n\205:;T\265(<u\3564<\346\230m>\034&\356;\017q.<\303\277\030>yp\2429\026\216Q<fX\260?p\032\272>1\005\030?\210\245\247>\315\367\223>e@\203>E\351\217>YP\036>*\221\226>\256\215h>\272PX>\343\265\\>`\\\'>\217w\007:\277\026G:\230\204\235;\2612I;\365\017\344;%\310y;XkO;\333\233\021;\272\2201:\307G\212:\371O\3629=\271+:\235\017\372:\000\000\360B\332\261\026=THR=c\367I@\365x\026>i;E>[:\014>\277\234&:\374\027\206<o\034\241\301\204\232J@\321\217\360>M\217\267>W:\263>H4h>\207Pt>b\000>>;M#<9=4\276\332\377\311\275\225Pd\276\223\315\031<O\005\006:\357\2746:\317\001\n;\251mh:\350%\373:\205\023\350:\206\260\341:\264\223\373:\270\344n:\245\341\000;`\237\363:\223\367\366;%\010\032;\372X\235;MU\305;\231h\305=v\310;<D\247\366;\361<\321<iK89\1773\246;K\224\373>\026\223\027>,\220\211>\251\353\027>\036L\360=\0056\036>n\207\350=\346LK>\305\253\026>\246C\201>f\372B>,T\036>0\027_>C6\3549=\326m:\023\255\372:\220:J:\314\014\222:\\\346\264:\306y\277:\r=\214:\3440\212::\265[;\233\244\002;\2120\342;\307\314\357:UU\005C\035\277e=Y\304\253=LlP@\377\235\004>1\014\033>\177\316\364>\224\006\2419\020>\235=m\220\207\301E\345\330?\345\364\342=\217\272i>K,U>\024=\342=\202\236\240;\205\031\r\276\312\300v\276\250\377\025\275p\306\312=SD\031>\302\375p=9\020B:\022\031,;<\316\336:5\3311;wo\272;Z[\325:DF\236;h\335\025;\302!\004;\356\320\021;\235\017\226:>\247\232:>\001<;\332\226><\035\345e<_!\017=\205bP<n\323\004<\243\037\013>\023`\0009%\267\341<\213z\033?W\"\230>\377\353\266>\234\177j>t\2316>\374\277C>\236^=>\204\334\024>>b\014>\345z\006>\200\201`>\337\311.>\227\010->\313\266(:\337\341D;\026Z\225:\tF\345:/\263\244;\333\346\355:\304\371\004<\240\343[;\326\204\224;/h\027;ewx:\325\375T:\366\362\016;\000\000\360B\037*\261=\270\016\323=\272\201Q@\"\037.>\213K%>NbX?Ty)9\002W\017>\222\214\211\301\363\034t?N\224\014?\250\356\033?\247\227\315>\002c\272>\272\345\023\276v\233\321\275\214\317i=q2\340>|\333\352=j\320\023\276\346\364p\274>\205\007:\273\203\3479\306\353\255:dK1:\017X\004:\307\255\345:d\007!:\360kE:\326\305\006:4$\267;~\372\262:\326h\r:*_\330:a\013\020<\225;\271;S8q<tY=<i\206\355;J\n\351=\212KI8\000\313\271<d\375X>\322\243L>/\256Q>\223\030:>4}H>}\255,>\343=&>*X%>\355T\\>\'be>\311G\201>KU*>A\2360>\222\222\2269&\235\2249[^\301:\030\321\3649\235\260s9\367\177\261:L(\3169\314\337X:\267\271\2259\250`\215;\201[\037;\257\313\3529\352\236\227:UU\005C\367\253T=\023\347\221<\226fJ@\014\340\341=d\206\002>\350\321\003?4p\2209X\273\277=1+\231\301A\304\375?*\225\222=\207k\204>1\265\'>\3047\242=\255\345\177>\0267\215<{\367(>E`H\276\335\271\326\275\330V\021\2756\315\231<0\342\\;v1E;$^\316;P\200i;\322Z\251:\313\362\241:t\224\337:d\220\001;o\316\201:\310\217\262:\364\373\216;\305@\315:#\226@;\301VC<o}#;m\221\200=N\210Y<e\177\020<\352\250\031>\272Q\2428\2729$=\226\017\200>\0217[>\036\221!>\344a\000>\036M\262=\271\0323>\032\257\376=F\027\370=\366\373\">\304(.>\317T\023>C\033\302=\220l\267=)N\200;22\031;\307\217\302;\007\327\';7\366\232:A\275\337:\215\364\217:\352\245\245:\377\304\230:\311 x:\230\267\341;\267\201\267:T%\363:\000\000\226C`F\213=\276k\255=S\307C@\003\021!>%|%>\033\002#?&\304f9Q\355\331=z\357\214\301\024\006|?W\352\202>\372\025!?~\370\244>)\263h>\304\324\236=\343\265`>\336\335\221>\216\006b>\233\207K>+\245\306=L\030}<P\212\216:\226\321\2249\376\247\337;:\335\214;\271y\324:G\212R;\234\021L:XzX;&>\3169$|\206:O\030\266:\357\354\3139\210\2418;e\3548<\346 _<\224\263\316=~#*<\346\250\275;\306\030\031>\316\251\2348C\216\364<\036\323\243>\321\025\007>mF\210>\341\325E>\035e\003>\026\357\362=\373q$>\023X*>?\351\231>\306r\024>\255\221P>\260\250\004>\373\244\'>\272\376I:>\273\0369\223\277\312;\326&\255;\277\245\243:\230\207\177;\2337\034:\274\256@;\221\336\2469\021\315\225:\204g\270:l\22459\362\263\335:UU\005C\204\300\314=J\313\333=\205\353S@Ay?>q\2748>\273\206\213?\202\370-9\'\237\033>\034\016\205\301\354\305\200?a\234\006?\226\205\224>r\205\235>\021%\361=\240\010\323\275{xp\275m\207E\275\307\250\272>\320,\377=:k\270=L\203\325<x\202\3579\\[\3759\313\274X;\306\277\263:\255 \223:\236\374\255:\371\245\002;\322\372B:\252\227v:s[Q:o\3747:\214\035F:\024\364\223:\207TI<\217\313\234;LR\256;~\260y<\373\270\031<\216&\024>\235\314I8*\005\241<zmd>\202\r5>5.\202>j\016\004>\246\ti>\177\0270>\365\303O>,\3760>x\023S>vc%>\363\217;>\202\2427>\277\316.>\211\262\2419g\217\2319\220\263\034;\225\250\321:\365QO:\215tj:\227\355\315:\264\244\3549\241\024(:\332\216\006:<g\013:M9U:\370\334\033:\000\000pC\375&l=\240\312\322=(iO@R\244\352=\307k\004><e\373>0\304\006:\375`\277=\304\336\206\301?\335\246?g\203\344=\017\231V<\303$\224\276\320a\'><\007\322\274\036&\331=\002>Y=_~\231\275\"L\250\275\225\\\037\275\274T\217\275.\276\311:\312v\356:\326\356\216;\351\220\300:\345Y\350:[\337\360:8\266\260:C\215\';Pq\270:\203\277\305;\231\271\";\231\241\267:#,r;c\037\230<\246\033\360<yf\351=v1\351<\336\270\261<\357]\\>\261\262\1779y\"\304<\211\351C?!\n\360>\023f\337>\332\330m>\326~P>\212\022\222>\323j\222>k/7>\360\200\256>\243}x>s)\241>Xy\\>\212\220\214>\275(u;d\351\034;\177\222\304;$\363\021;\260<d;\354\025W;\373\327\361:4\305\365;EG\023;u\351:<\325\314a;d\260\022;LGW;\000\000\026C#\000j=\241E\262=\301NR@n\206\034>\267\3207>P\r\344>\010\377\2009\216q\214=T\355\207\301\341\267\236?\235\\\202\276\243\367\257>(\213\025?\224\350\321>u_\341<T}\317=\205\275\221=F\234:>\230x\237\274\310\010\277=\331\222\365=}\035\023:\262w\2759\253\013\202:\217N_:\215\375a;\006J\343;\007xW:\372\3236:\345?\013:\375.\210;=\244w:\232~E:;4I;;\236\006<H$E<f1\321<\366\333\002<\t \250;_V\324=\235\240\2348S\234\226<.\266\202>\323\377>>?5:>\260J\000>\211\305P>\322\371\344={8(>\223\034\360=e\341>>\276\302\034>\205^\375=\341\373\237=6\030\264=\313\306\3069n)o9\366\014Y:\236\016\014:\331\000~;\262\002N<,D+:\377\263\t:\n\240\002:HZ\205;@[\255:lX\032:;DF;UU\005Cc]\217=\320\333\277<\245OL@\326\225\016>^\255\023>{X;?\033\372q9\253\266\364=\023\336\224\301\"\322\254?`\347\274>Ht\323>l\234Q>\345\227N>\277r\315\274\217\n\035\275\262+/\276\203\022C\276\033/i\276\241:T\274\310N\354<\357\370 <_[\303:\255\033M;zW\004;\337\351\030;p\204;;F\217\300:;\304\252;\242\246\260:\034u ;\303\003\334:\363A:;\207\337~;\245$.<c\336\210;\004\335\215=\260\033V<\022h/<\035\202=>EG\2518\363\000\002=\001\231\372>v\237\235>C\376\303>\214\266\200>/\220\033>?\207n>+WW>\202\203\204>A\244A>z)V>;\211\223>\005\375\220>n#e>\261\2657<:x\365:\334\020\';ka\340:A\0101;\342\2629;\235\027\240:CR\303;\302\333\300:\374\220`;^\201\257:N\274\033;\252\025\';\000\000HC(\202o=\033\344\221=\200\323Q@\n\325\006>2\221\024>Z6\t?0H\2209\313J\273=\037\367\207\301\372~y?\225//\276{Y\000??\276K=>\216\317<\300\236\316\275t\225m\275Ak\265\275\271\201\222=v/\251<\241~^>\241\344\316=\312$\035::\034U:\r\000\202;>\234\235:%e\240:s9\227:\177\031\377:\211\220\224:\354\005\036:K\031Q:\354\205\3749\270\370#:\304\001\251:\250\032(<<x!<\354\240\300<\260\236\204<EZ)<0\255\n>,\253\2578h\\\220<\362Q\236>\312\"S>E\356V>\024=+>\272\367\006>\317\014G>\301\260\020>\236u6>\271O\020>\221\251(>\307{\033>\331\'s>\315{4>\216\303\2529\':G:f\336%;A\327q:\034\373\211:9)\301:\333\032\301:\364\3146:\323\027\31695\226\006:\373\261\2109:\033\215:\207[\031:\000\000\360B\244\017\205=DO&=\223EL@\354\262\n>wD\016>Z\370\033?\311/\2239SA\330=t;\220\301\207\355\361?\014iL=8d\210\275E\003\273\275w;\306=\247\270\276=\337\351\263\275\374\335_=\200\237\347<C\322\307\275\030\242\311\275v|j\2761\010\373;5\261P:3UI;jS#:\221\305\364:\242\010>;\027\\\037;\260X\215;\270k\257:\303}%;\322\261\376:f\3714;\0310c;\352\356g<D(L<\306w\364=Y\364\254<\307\036#<\313\265_>\247\r\3368\374\205l=c%:?\030\367\243>\035\362\n?{6u>\333/f>&kS>1\276d>\200\003f>9\254#>\320IL>\246\3123>\321E\">\002\310\206>\000\260\374;8\326\024:\213\365~;\263\024\n:\270\350\331:\304o\031;\330\273X;\027)\277;\221t\366:l\355.; \311$;\266_@;\003\327\350:\000\000HC\034\204\265=\0101\267=\0377P@\007\343\'>.\207&>\346\224T?\300/\0369>R\t>\235\331\204\301h\024p?\004*\034>#t\006?19\245=[\242$>\325\3438:\235\371w\275\261=\216\273\315\334\303<\326\020\321\275;\2020=\347\357\324<\332h\232;\032UQ:\030\366\265:2\320\n;0\200\276:\317o0;\242f(:\013S\225:\202Y\321:;08:G\265e:\374HM:F^\324:QoL<\344BX<\3570B=\365\353x<\324\2754<~0\026>\270~/8*&\350<\306\353\310>\2525\213>\332#\211>\342a!>\375\376K>\223Q\363=M\362\372=nH\273=\036\330\034>\200B\030>\245\2257>\3749\237=\033\022\004>\3255u;\334d\031:\262 u:V\352\006;o\213\301:\234\256\007;&\225\3469\265\211=:f\357\025;\3040\3729\214:\000:\224\031\2679\t\003\203:\000\000\026C\2018\213=\341\034\246=\347AN@ea\025>UA.>\222\205\351>\272It9.\307\236=E(\206\301f[\271?\003\311[\276\372\244\000?*\023\307\274`\016L\275\356~\177<\352\007\350>\330\345\377=a\305K\276dG4\276\246\t\032>\320,\233\275X|\372:\241B\334:\036\247\037<\357\317\226:\350\365\036;?\244\266:?\276\247:\361\r\344:\275\221\272:\336e\256;\374\224\252:S\017\n;\027\270R;\201@\340;\236?l<\021\001T=n\255\330;\020\210\031<\004_\303=E\236\2018\333\3657<\306\364\217>/\356t>T_@>\006bh>\t\3034>-\2477>G\231W>D\377\\>\205\243\212>dr\213>|\034m>E<)>\351\334\017>/X\263:\352\342\273:\225\373\035<\324\000X:\334l\276:\201\233\332:aa\216:\276\262\002;\375/\224:X\331<;\357\344\264:\255\316\232;*\000#;UU\005C\3271\313<\337o\271<\276\025H@\256\223\277=f\277\022>cx\245=\000\023\263:\203-\331<\362P\242\301\310\3575@\022\246\217\275\256\231f>\030\230\t=\342\265A>D\275@>\363\205\237\274N\233\010\276\243&\205<\031g^<N\2154<\277`T<\320\204{:\277\200\025;/\354J;\206\211K;\206\n\357:\035\344\272:\236\270/;\002(\211;f\244\363:\245B\370:IZ+;D9$:\265;>;\330\253\003<\377]\006<\224^\031>n\372\264<\031*\267<\336\213\'=1\350K:\336\230\031<{*1?\355\346\203>\320a\274>p\200z>\236;\241>)\321W>h\033A>\212\220F>&x&>2\211A>\335a8>\260b\033>\031O\035>\265|k:O\2406;\335\305\315;!\005t;\222>\343:r\r\220:\314\231\212;\306\345\033<\220_\032;\3713 ;\305\261\202;\205\023\020:\003\0304;\000\000\360B\265\033\235=\300\206,=\310\326F@\004\271P>\026\365M>\233q\326>\304u\3019\346\222/=\005\341\240\301\216R\014@M=\005?[\365q?\030\347\201\276\031%\232>;\205\002>\326\022\023\276VQ\221>\215\303\266>\343\300\275=i\373;>\200\254`\275\246\310R:|\031\2549\327\r\027;\217\315\277;\370r\241:\261q\3619z\350\224:\256\343\225;\303|3:i\365=:\211\330\3329\210[\351:\331\225\031;\317\376\334<\212\232K<\376\313\327=\272Z\233<x\336\217;\372fM>\311j\0029\205\266\221=\3004\230>t\226V>\210\352/>D\330\023>b\365\260=\250S\260=\236\362\237=\334r\350=\007\023\316={\224\275=ZD\350=\234\301\356=\351\306\323=\230sB:\2531~9\032\345\365:3\277\007<\230\003\321:WU\3179\265\254\214:\027\020/;\307\305\003:<5\006:\206\205{9\177%\261:~S\365:\000\000HC]_\216=\232\313A=\221\366H@\306Y\005>\253\036\010>\315\371L?\257\261[9\220\204\004>/d\214\301-\024\204?\372\033\002?V\"4>\267\006\247>E\332\262>Q:\027>\230\223^=AA\241\275_\001i\275\273M\307<Z\325a>?\300\'=l\305M:r@\206:2\222H;f\267);_\275-;\266h*;\374V\t;*\352n:\275\217$:l\020O:xF\204:\261\354\241:\271&\316:\257\325\211<nn\024<\330\211\317=\277\202\262<\"\263\231<\t\346\031>\300K\2228\027MU<\223l\225>3\346\210>\200\203=>O\317q>\005\374\024>\200L\010>\266w\006>o\'\376=)\010(>K\215\026>\340\317\352=0\'\036>\346y\t>\336\214\3649\017\254\216:\207\231/;\345\306\t;\362\370\373:\223\223\004;\263{\020;@\210\231:\371\211\3559V\3278:\245\006e:/\033\224:9\332D:\000\000\310B\366w\222=5\321\323<\234\217H@\305\231\r>\371l\030>K\312-?\\q\2269\001\223\365=J~\225\301\376\251\256?\235\356\000>\261\373(?v\361\327>\353\226\257<\200\346!=h\375\352=\322\001B>Z\323W\276\216h\005\276q\006\n\276\316\305\303\275\234\3759;\320\351\201:}\204\004;\030\006\014;e\240\323:\207\323\013;\353]\210:\300\n+;Q\316\341:\323\343\244;^@+;\032\355\211:j\277\n;\201\334\226<\035\023\300;\370\027\274=\270\377Z<\241\017\020<u\327s>w\004\2758@\300\033=\3671\236>s\026\240>\232\324\233>\375\036\243>u\\E>\000\262\017>\314\275r>N\004z>$\361m>\001\320t>\221\272%>\032\216D>\345#(>\246\240[;0>@:\034\312\255:\302!\275:\302\226\240:Gg\362:\254\364\214:\314\306};9\270\261:\023X\301;x\256&;\020\274N:\2761\314:\214.\332B\377\220\233=\341\267\242=\271\202G@\241\2224>\225\272F>\037!\022?&\021h9\364\270\266=m\245\210\301\373\242\271?e\366\216\275d3\203>\323\225\212<\211\005\302>>I\374<!n\007>\033^_=*\0060=#\002L\275>\t\031\274\316\030\255\275\236\034x:\001\345Q;\226\034\370:\007g\351:\305\215\341:c\017R;&\351\262:V\375#:_\265\251:\346I;;\227\320q;\300g\221:\206\336\r;\r\351\202<\243D\276<7\004\213>b\217\t=\263\024\327<\177a0>$\267\3248\221\"\335<\240\212\031?H\306l>G\303\257>A@M>\356\261l>>\027\010>\205\234K>-\3738>~Ac>\216*\205>3%j>\354\257L>\356\254\">\252\305i:\333\336\343;\014\251<;\242\033\216:\303\311\220:{_\343:I\347\206:\252\321\3739\026\341x:Pkg;\346\020S;U\301s:S\027\343:\267m+Ct\266m=]\270\030=KjG@\374T\t>G\347\031>\365\006\021?9\233\2509k\013\317=\016\270\225\301\222h\234?\233\033\237<{\234\244>\3612Q>\347H\214\276\211p~>\246@t\274-\353\223>\310dn\276l\220\244=HK\263>8\206\343\273e@\222:I`\217:\301t4;PF\225:\010%\224:\226\211\233:\037&\211:\235\017:;\260\306\222:\"\350\245:\366\033\235:\256\333y:T\334\335:Xtz<\'Y\262<Q\254\004>\331\210\267<oV\214<X\243A>\205f\3028\033\273*=\271i\241?\252r9?\376\370\307>\235\237\241>k\267\216>\206\316\210>\025\244\275>?v\304>\242T\316>\350\204\356>\277\214\225>>\250\241>\325{O>\013\214\236:\177\323F:\326S\030;=\2729:\330\025\233:/4\261:\265\213\263:B\220,<~\225\202:-\370\213:\316\376\210:i\361\257:\221\\4;UU\005C\333A\253=G-\006=\030&D@\374^C>>C4>M\225\206?\351in9n\203(>\263,\223\301\223m\211?B\257\264>r\236\360>&\231\024>\007;\225=\247\217p\275\247\201\034>X\214\241\274U)\304=\210\320\250;\230`\223=\032\321\221<\216\210B:\006^8:J\314\212;X\226\261:\231\303\010;:\223b:\311,\220:O]7;,e/:l\220\330:\360H<:5\265\263:!\"\370:\270o\350<)\377\357;w\250\\>\022\304\001=\337\331Q<\304\200\266>\244D\3048\265\231\222=\214\335\342>\177\013\217>\312m\263>\322\333\317>?-@>\333\254\217>K\343_>}S\021>\347\021L>^\230!>\256H\331=\374f\373=\3419\276=\362\317,:TpC:+V\243;Y@Z:\271K%;\275\031\243:&\321c:V\221\330;U0\021:\337\237\300:^\360\033:\001t\226:\231T\001;\000\000\026C\203\207\237=\225\310\000=\323GR@G\327\024>\305\223\030>\311\325??\323\21029Dw\366=\257Z\217\301w\3247?\r\363\353=\376\254\010?\270\004%=\3404@>\235Z#=olo=\312\024\243=\333\267\210\275\306AZ<\373\307C<\030o$\274\210o\000;\355\254\240:\242\016\333:\267\267\032;\366\266;:,\360f:\342\236X:\326\312\306:[Rn:\0305~:\227\230e:\377\203\302:a\270\223:\250\307\332;l\362\306;\231\257\223<\0164\315;\374l\224;_\265\262=\233\27628\037\3544<5\246\374>\256\213#>\0026\251>drc>\354\\p>|\203d>7\032\203>0\307?>j?\221>?\001\017>g\342\024>\255\204\367=\243\007\361=\210\365\310:\243\254Y:m\261\215::\305];\366\227\3539\245\372\032:$c\3669GC\221:6\317l:\037\253?:{\331\213:%\016n:\236wT:\000\000\360B9*\277=T\231C= \036>@Y\265M>\375\312G>\360\034=?<!\2249\007\224\t>W/\222\301.\324\304?R}\332\272\360r\221>\261\360\236>\2614\205>z\306r\276i\021\253\275Ed\031\275I\005\004>\2506\255=\344\322\323<5\024n\274\n\301\235:er\361;I\030\016;\3131\324:\274\231\354:\374\252\305:\213\316\371:>\260\205:\002\367\022:\226\355H:\316\0147:\232\317\256:\032\324\032;\215\r\327<\035\263\203<\202@Y>s\265\235<\305\213\231;\327Z\227>\356R\3508\006\340\313=\203\204\021?\236\243\226>\340\r\273>k\216\324>\"<\200>\033\327\215>\360\310\220>FH\177>\215\210\267>\274>m>\247W[>\034\315_>\314VT>1\r\200:[:&<\352\002\003;\211:\277:\3657\r;\032~\254:\311S\250::\017T:\202\300\32793\364\3569\362\024\3539\376\344\210:\236\212%;\000\000\310B\301\237\250=RT\373<\304\004H@q\236?>\345\376M>\'\022#?\223\005\2629g\312\277=\216x\225\301\272\251\326?,\313/>\363\272z>\016\365\006=\233\376\227= \340\360=T\037\263=\276\006\036\274\223\215\225:a\272\207\275\"\251X<\355\277\310;\034(\303:\230\221\020:\3147K;s\241\022;\232\013\266:\205\002\266:n\360\233:\200w\336:\252@\242:\235\340\334:\212>\247:\327\214v:\2101\303:\021_x<u\233$<\301B\370=\255\242T<)If<\214\225\024>\030`&9\004f\371<7h\005?h\265\214>o\031@>\263xD>\017\374\027>\234\2617>\257d+>\257\303j>\212\000\211>\271\276\247>\225v\233>+\250a>\257\232\037>\232q\324:\247\205\3239H\004 ;Q\013\363:\202\357\300:*x\217:\251`\311:-\262\007;\302[8;]\212\314:\034R\270:\304vV:\2171O:UU\005C\010\370Q=b\260\031=\000\356H@-m\003>\300\360\016>ZH\364>2\202\r:U\244\255=\270 \224\301]\372\273?\271\262(\276h\327\204\276\240P~\275\323!\225>*\036\022>\026{\006>P\372\037\276\007\222\"\276\337X\267\274\326\220\232\275=pq\276\351\203\372:\271%Q;\341J\254:\227\301\336:\221i(;\335\321\033;]U\234;\324\215\371:\230\017|:g\335p:\322;\360:\214\330\202;a\211V;\354\237$<\263\254j<\031\311\340=\310\373\264<\2018\222<-#!>\217\007[9-\242\334<\2744\037?\354Y\353>1\313\336>\257K\301>]\214\220>,\354U>sx\">\2005L>\272\213N>\343\266{>y\365D>\204\251\202>\027jX>\357\265\214;\307\243\007<~\035/;R\262J;\343}\237;\333o\312;/\223^<\225d%;\003\342\211:X\n\264:\373\267K;\371#\303;\000\231\216;UU\005C@k\216=\270]\270=\2707Q@\2610\021>\342\270\033>\320\t\022?*\336\2069\243q\301=(\354\205\301B\366\246?\217\260\211\2752\240\301>0\301j=\307\311\271>V\342\\>\307\353P\276`\263\231\275\270\374m\276\310\033e\275P\205\347=9\342\026<\3441n:\312ey:\202 Z;\214\0344;S\251\204:A\247\341:)v\332:\0211\t;\252\030\230:^\200\203:P\032\335:\243\340b:b\206\317:Ku\337;\222\251\203<\333\025J=\263q0<\241g\371;\370i\271=s\326\2778\003X\210<}V\354>\007w\244>\354i\271>\232\203\257>t94>+\014\006>p\200J>\025Z=>\337<\212>989>1{?>\022;A>\014$\024>\220\337F:\315\026c:\271b\206;(\024\003;:db:\010\273\336:\265\302\222:7\252/;E\200\030;A\020?:\300\t\263:\215H\3639X\320\214:\000\000\026C\200X3=M\257\316=\226\251P@\316@\363=[S\022>\220|\262>\370\212\3359\337\216\205=\364@\213\301\036\213\353?\247\212\363>\017Z\024?p\351#>\004\024\232>\rf:>\265h\027=\252\264J>;Lr;\021\356(\275|4\220\274k=\344\275l\n\306:\377\353\3569:;X;5\276\371;,\033\035;\301\216\031;\307\221;;\036r\006;\322h\r;\3632T:\002\032\300:\314O{;n\254U;|\312J<\356\323\035<\204\332\374<\254\006\021<\351H\007<G\347\025>SQ\"9\030_\005=>z\r?\363\221\340>\302\217\324>\300\357J>\334\363)>P\242\010>\272iG>\225M\'>;\345\016>a14>b]8>Gs >\"\311\346=\205MV;;\273\3239\201\257\331;\030\233N<\222\255\377:\335\314:;c/\346:sT\007;\350\212#;\032\234\027:\032\356\235:o\014\021;7\023Y;\000\000pC\004\024\007=\265\366\237<jsF@\226\356\237=\2316\322=\207\r\224>\3502\271:\2064\212=\033\235\241\301\020\305\321?\323\000\024>\230$\227\275\004Rx\276\243\215~=$\243\024\276\307\344.\276\327\021\001>\364\033\014>!,\226=\266\001\371=k6\215\275\020\274\001:\250\251\3319\032l\2249\333\333N:A\210\3549|\325\001:\321\240\":\300)\":\2073\244:\242\346&:l%k:|\003\035:\205\370?:\237\001<<\322@\016<\234\250\215>\351~\035<\000\200f<\2416>>\213$T:u4\t=\330\t\220?\234\0167?HY\222>\000\321\234>\341L\227>6^+>=\330\272>i0\320>~\235\242>`V\273>(\214\261>\356\306\204>\017\304\201>\317\226A:\326v!:\215\330]9\211\311e:iS\3219\250\3272:\340E\222:\263\271Z:\302c\332:\375x\222:!\"\355:\203AK:k.\032:\000\000HCi\234|=^-w=%\030J@*\3303>\336\300H>*\314\323>\236\177\2059=IP=\301]\222\3010\347\016@CY\177><\231\376>\300\034;>\254j\204>R-\211=\0269\022\276L\2237\276\002\034\263\275\352]\210<8\021k=\340\346\271=(\033\374:K\277\021;eq\202;$\337\275;\207\307\n;\364\210\003;1\345\315:k\314\212:\016\n\232:\252\357\254:\001\356\022;\370\230\256:\224\247\016;Z\021\207<}\0147<j\224\275=\177&0<\341\225\226;|\301\000>>-\3018x#\005=\211\003\345>\274\227q>r\335\036>\"\315\014>\2630\034>\243\235\330=H\254\237=\372\310\272=\264\215\r>\033F3>;\223\357=WR\003>f\332\275=\032<\304:j-\204;0\005];EY\235;\263p\273:H\247\212:\305\231c:\030\276-:\330I\243:\031\027e:(R\350:\252\327\214:4\233\270:UU\005C.[\\=j]\206=\215\007A@\243\242\013>=;#>w\207\321>\203o\2439\365o\205=v\024\216\301\2229\000@\007\226\354={\232\250>\353\267\231>)\375\235>tO\277<\361\020\024>Y\344\t\2764\232e\275\240\306\247:\302v\317\275\363U\214\275GZ@;\216u\256:\375\t\273;\303\\e;\020\350];\365T\';I!\177;\341\030\234:U\023\330:\342\004\350:VX\213:H\354X;e.\033;U\371\177<\232\276\214<\221\365\021>k=\241<D\307G<(\024p>\324\332\2528eVM= \024\312>\372!\213>n\024u>\362\340C>\262\372W>\274\333:>\235\336\030>\216\007#>0\301\026>\322\326\026>\320+\014>2\231\003>\316\034\031>\325gI;\226\245\217:\300\033\265;\246\\\376:G\365\036; \202\261:H\203&;*T\214:+P\222:\2647{:\366\261S:\364\352;;\006\303\246:\000\000\226CJ\235\322=\22202>!\343N@\3403_>\240F7>2\216~?\357\276=9\225!?>\3342\216\301\331\335\305>\247\256$>\366G\325>\0261\353>E\036v>,{$>\255X\035>\274\032\230=1|.>+DU\275\277`%=!\226\375\273\253\267\3159\345\352\2569-6\003:-\371\37093C\2519\241Y\017:\024\250\3229\t#\2349{\316?9-T\004:\325xQ:\204:\3269\250\304\2449\177\256\212<\004\310\013=I\000\001>y\0335<Du\204;:\010B>\336\222\3418\234\267O=\367f\037?\253\235\347>\244\276\311>\277K\364>\242\216\276>?\235\246>\256@\243>\n\226P>{\202\312>\363\000j>Mr\245>n\177i>\363F#>;\314\2329,\331\3039\216\2340:\342\332\2609V\301f9y8\013:e\370\2169\242$z9\010\037\3468\027\374~9\030\362\177:\211\302/9;_\2159\000\000\226C\351\264\275=\022\214|=\271\243C@\343\2230>\331?/>\330\003j?\341\027\01496\004!>\3746\211\301\312Z\212?\336\272%>I\361\204>\214\322B>\3305\305>P2T>~\250\036>c\301\017\276\371\343\341\274\215\270\225=\037W\346=\310\327\200>`\020(:}\262#:\310K\220;/$\315:\212\260\303:\270j\201:I\374\250:\210\252\372:XC\3529\223D\3669\332g\035:?\3039:K\306\260:`\357\256<\347\2163<\344\r\343=tI\301<\036s[<0)2>\274\021\0148C[_=I\216\302>\247\216\020>S9\215>+\247\">\263HI>Y\201\331=T=\t>\222R\004>\036&f>\346\334\374=\344\202\013>6\373\002>\226\276$>N\371\000:Z/\3749\237H5;\rQ\203:\211\351\036:>\234\3559[\005\226:\224\325\002;}U\2329\257\316\2439\210\256\3639K\321\t:\347\2521:\000\000HCA~w=\332\235\304=\356>:@\256\373&>\030\2168>z}\354>\335\222\3719X\004w=\362n\220\301\260\220\352?K\355\217>\236+G>\255;j>T\013b>\037\275\222>\310t\230>\231\220\310=\'\312,=Y\375\023>\354e\300<\245\252\333\273+\245\333:\343\343N:$\222&;\266\200\351:c\315\267:\375\333z:\345\343\222:,\352A:\177\315>:\006zr:\325\362\203:-\252\303:\0375w:\330\375\326<\226\t\035=$\212Z>\276\210\247<B\310\322;$\001\207>R\323|9\223\377\200=\217\356\367>\261z\007?I\333\213>\222{\213>\211n\232>\016!M>\"=\225>\324\017->\220\340:>{F\205>$\244F>,\223\356=\252\240\030>U[\377:\021\r9:\034\273\375:\373y\221:Y3T:\317\214\017:D\226q:\215\275\034:22\3569\\Y[:\352xA:S\253\261:\236\335\n:\267m+C\r\3677=\345\\\020=8\027<@\335A\024>M\203C>\355\377\221>\022\2535:\272\002a=\374C\235\301\270\272\270?\024@\265>r\273 ?\216{\306\274c\226\372>\223\233\304=Vh|>\266\013\317\275\375\253\352=i\'\350=\356\370\037>jI\304=?\277n:U\303\003:\317c\250:R\033\013;I\377#;X\263\204:\2612\031:\231)\210:\217?\206:\272c\020:\327\024\3419\315JC:5M\265:\362!e<\356\212\035<\300A?>\005k\247<\362e\236<\273\177\030>\367\274\2659h\373\003=-[\211?\020\307\010?\335F\342>\022_\331>\355\322\211>\303ey>\275\005\205>\366\354\231>\343\357\254>A\325\270>\nN\301>\320\273\245>\343\364\246>\340-%;>bF:\205\023\273:\234\031 ;UA+;:\032y:\226\342\35398\377\243:\327\277\260:\235\220\3049\0168\3159\347s\325:!\261c:\000\000pC;zo=\254\316d=\266\343O@\036\026\025>\330>#>\305\354\035?\321\276\3229\273\r\247=\233\327\221\301\347\226\327?\347\312<?\253\014\013\276\364\002\220> +\365>\326\016\005\275\362\211\224=\353[2\276\206\343\266>S|d\275\235\371t>iH\264<\255\203\317:\336\267\3409\023l\003<\377\262\240;cYn;\r\007\204;8\t\025;\251\376\006;P\"q:\323\033i:DQ]:\326\353\030:2\326\177;\031\213[<\221\0048<\331\274W=\004\000\221<\211\2776<3\374P>b\t/9\312\331\035=LI\021?;\177\351>e\2221? \025Z>\331,\207>r\326\177>\016a\222>P\020\313>\342\243B>\223\303R>\376\005n>\205\342o>\"-8>\357\027\357:p\215\014:\232o\203<\333\266\342;i\204\325;\204\304\254;\375\313\037;\025\274\362:|\203N:\366\353\264:\033\373i:\202\277\005:\3324\217;\000\000pC\206w\302=R\277k=G-M@\330\242>>\262O?>\324ch?#r\0349\204!\022>E\246\210\301\316\322X?2\207\026\276\224\374\336>_\205\024>\332u\263=\347\216\177\274\341i\267\275\205v\323=.\366n<\356j\010>\206#\016>\364\002U=\265T :\370\207&:F\274\246:\226\246\225:BUK;\316\247\270;\313\321N;\277[\231:#\275\263:\370\302\341:\342\340K:\263\233\226:\315\320\372:OP\021<\251*\026<\350ba=\304\004*<\303q\232;\331>\000>\264\302\0278\r\352\236<\3005\226>\370\301<>\244\370[>\357\311<>5\324\002>\302X\007>\366Ax>K\000\031>\236Oz>\n\355X>\2209+>\232uA>\001\227\037>\034z\010:\245-\3409$I\243:\337\324\230:\317\334\004;C\nJ;e\320\301:<\'\237:H\230\340:AJ\334:\331q\202:\377\307?:\273A3:UU\005C5\361{=\373\366\245=\363\312D@<?\023>\2100+>\266&\327>h\303\2709\326\375\210=k\030\213\301\307\037\333?3\330x\276\363\331\334\275VZ\020>\350\2651>\205\n\310\275\335\237\203\276\357\022\233\275\234\327\'>\301\356\014>\330h\021>\350\237.\275Ff\277:/\216\007:\321\315\206:\005\273\374:\214\353\232:o\363\016;\342>\006;%I\027;\000\tB;\006h\244:\001\321E;\257\233\335:tG\020;\316Ws<)6\000=SQ\003>\006*\317<E9~<\233\341\000>A\n\0349n\014\207<@\220\r?\342\312\265>$I\320>\215!\245>\275N\222>\313\367\241>\275\322`>\365\rc>)\222\275>\315\234\223>\320J\200>n!l>\312-\365=\264O\250:\253y\3369\254\003K:(\300\340:F\233P:E\201y;h?\370:7\003\035;_\231\233;P\024\":Y\366\005<N>#;\313\233\031;\000\000\360B@U\250=\006\331\211<spN@g\"\030>\253C\027>\347\206i?\205HF9U\310\005>G\022\232\301\357}>?6\260\007?\233\t\264>\017\350\350:=\355\226>\373H\271>\342\337\215>\'\005\371;\351\230\206=\322\261\376\275\364\340h\275\242\034\277\274\344\343\227:\252q$:;Y\260:\234\211\242:\330\225\013;  -;|\357\305:\217\024\214:^+,:CQ\206:8\247\206:\317If:\271\021\225:\270q\023<\361i\030<o\261\220=\371\303U<\032<(<\242u\034>\247\222q8I\343p<\334NO?\251\304F>\374\037\221>\030\2136>Z\323\006>\037\372\375=\006\3705>\013\'\372=S\355\024>\t\017\345=\230M\374=\314_5>\276\205\330=F\013a:\216cK:\010\271^:]\320\204:&c\345:\270\334\217;\346\020\222:y\177\':\030\354\2669\223\311\':S\327\016:6\2124:\t\001\215:\000\000pC\373=\267=i\373\223<jNF@O\336.>\020\3173>\327\027@?\204\316m9\323x\344=\261\245\230\301\334\235\251?Z\362\332\275Kv\003?\252m\016>&,n>#\276\032>\353\343)=\017\352>\276,n\277;\343\331\221\274\302\306\331\2744DS\275\0271\037;\212\354\365:\r\301E;\332\355\264:4}5:g,\374:\364L\205:v\351\315:\224G\240:\005\262\344:\003\205\205:\223\273\230:\357\243\267:V\353T<Z\376\271;=0\t>\003\345n<\247\327\317;J\207p>\263>\2218)\317\025=\324\\\360>\220#\310>\366\007\303>>i\227>_eV>\326W/>\357\244T>\272\343|>a-\211>\013\346\\>}zM>\271K)>\367Z\027>\030Y\362:U\006\";\023\233&;\237\036\234:\241\350\3249\311W\004;O\014\':\351\302\262:\264\006s:\n|\363:\343\177[:Uhg:\206\217<:\000\000\310B\211\274\224=\363\026\244<\\%K@\241\0361>]\2215>R\256\037?15\2749~\331\322=\3458\240\301\333\313\332?\227\312B?Z\250\341>\303\203*\276\000p\013>\351\306Z\273\336\213\205<D\215A>\323\305[\275\372A\236=\\\217\007>W\261\345\275\356a\204:;\274C:\313\302G;\242K\353:X\256Q:\364\351\006;\240\222\272:\000\223\242:xNi:\256\244\232:\177c\027;u`\266:\357\021\373:\273\372\216<\025U\317;\356X\232=\001\262\222<\313\3341<\2618w>\2251/9\341\306w=L\347^?\030\311\225>\215\345\361>g\201w>\375\037l>\246\266\212>\035d\037>?\0214>\231\3031>\340\214\213>\377\350\206>\350\331j>vD\022>_\211\357:U\230\242:\032\377\241;!\313\352:\363I!:\000\344*;\277\034\355:\364\323\326:\213`\235:\362\323\356:Z\177K;\343\2607;\243\312\253:\214.\332B\3659e=\r\267\264=R\013A@\334\214/>D89>\342\316\261>\273\034\2569L\"\013=D\260\225\301\210\354\336?Y\036\214>_4O?\265\261s>h7\320>Q+\252>\220\033o>\314\253\306=IZ\306=nq\212=\223t\335\274\211\244r\275\322C\2129~2\2539^\020H:X[Z:\r\376&;\244\201\243:-\243\243:F\335\007:\207\276\030:\n\321c:W5\026:\375\330\027:\230\216i:nv\377;$\347\206<%\213\364=8\271\014<\234\343\252;\032\324\253=\323\010\3318\250\340\244<]\251P>c\306\205>n\300\207>\301C\210>\025T#>(m\017>$\353\352=\343t\271=,\177\320=\371.\313=\344$\306=\211\361\345=\024\222\003>\320\314\2768\212C49\305\347\013:n\260\034:\3553+;*\227Y:\217\351f:\302p\2509/[\2339\261VO:\331\275\3569\335\364\':\034\237\025:\000\000pC\353\333\324=\260\375a=\352\221P@\231\251C>\372\360>>R\220p?\322\341\0239\'2\017>\270O\211\301@\031g?\246S4=t@\325>\303=%=\265\033\265>\323\243\267=s#==f\335\233\274\241\225I=*Kz=\302\333\372=G\211\262\273\337\343\022:\006\t\223:\323\354\221:\030d\245:M>\002;\370\022\223:O\267\332:\253\253P:H\373\243:\341\007C:\340x5:t\261\":R9a:\237\2248<\362\251\325;\000\350P=\016\265\t<q\221\236;\327\\\021>\212\262\n8\301\034\226<\033\340\231>\255*Y>\260F\207>s\277Y>\345\237%>eu&>m\220I>\\\374\006>\376r->\204\231%>\317\032B>\036t\022>\206\307\002>n\006\2549\031\326\336: \322\237:\006\361v:\3278\267:<\316\231:qr\215:V\366\3759\305\363k:\240\225\027:JG\3139\322\301\2439\340N\3769\000\000\026C\262$\014=8?\306=\017\345N@\006n7>P\366J>\315\244W>\3313\033:(\033\010=\'\273\226\301k\275\367?k\274\262\276\230\324!?\005\332\364=\2317>>\031\262K=|\035\261>o\223p\274\2124\267=v\214O>$Du>\351\021\026>\374\367\2429\205\200?9\271\275%::\257\3239\325|l:\254\376\022:@x\2249T&\2309\347\010_9c\325\2409\021\351\2439\363/Y:7H\33691\203\035<\257\334\036<M8\250=\006!k<\263\310\n<\215$M=|OR9q\277|<6\271,?d\222\016?q\365\374>\\\235\243>\207\033\250>:\226\251>\017JN>i\026Q>.\335]>\376\021w>\330\247\017>\rWC>q\223G>\005\330|9\354U\3328\325#\2069\'\267\2129\201M^:\340@\215:a\002\2039\261929kMk91\342\006:\016fo9\217\365\021:\232\022\2379\267m+C[y\256=\032S\212=\353\346R@\006\234\t>\177\337\013>\361cr?+\342T9dD\025>W\333\206\301\004\274=?6\'\000?*?\256>\235VG=\326\250t>\374\213\017>F;i;\363\017\351\275\027\325\031\274\200\362(\276\325\'#<\271\367\327\273\"\344\336:\217\367z:\241\201\016;kr\243:\233\013d;B4\305:\332?\202:U\227f:k\324a:>o\036;5&\375:\225\322\242:\257<\304:\005\233\201<\257\377\005<\273a}<,$\002<\025\352\320;\000\364\025>\363\t_8\300\205\233<\275\'l>\236\235\271>P\240\027>Q\345\201>\310\251Y>\262w:>\325\0053>n\353\030>>\257\021>\r\2501>\335\375\323=Z\301\341=H\353\253=\226@\010;&\353\236::l;;\371\001p:\350\257\n;\235s\031;r\215g:\2716\037:%P\":\221\337\006;\3314\203:\272b\357: f`:UU\005C\024H\233=\3522H=LC1@\000\223P>\223RC>z@i?\377\304\004:\202\313\t>\213*\232\301*\013W?\206f\022>\346\246M>\030\004\243=\236\310U>\2063\232<\337\364\237=*X\234\276\376\\\322=$\267\315=\307\207\207>\317\214\276<\264\350\031:\031\244\3639~\353W:\257qU:\331\370S:8\314\033:Uz\017:8yP:E\243Z:\355\345\2639R\032\030: \364\2779R\234\3249\245\034\t=\000\220\341<\327\374\014>\216\220\337<\312\255\313;\0333??\032]x9\205c\017>\257\325\010?5m\372>6\347\207>\320O\217>\2560\216>\3754\261><I=>\244qA>)\314@>\343\364~>#\327\256>;\244\206>\353]{>\030\3117:\240e\3749}\251T:\177^\3669\246\314T:/\214\3529O}\2629\035Q\022:\205&\027:\352\210\3159`\337\2739ib\20093Mq9\267m+C\013u\264=M[Y=\200\236M@\3525/>%\0202>\3118G?*\036f9\300F\010>\351\325\217\301\323\205j?%\245\243\276\261\327j>\341\216I\276\306K\271=\026\357\355\275H`\312\275\304\251\336<\016\371\007\276\306\342\020\275T\202\361=\350\302\223=\030\340\334:\335\304\215:e\241\375:\327\307\345:I\237\210:\352^\322:}\325K:\301\332\216:\256(\217:r\014\234:yq\225:o\205\217:Jy\202:2v\255<\243p\n=X\200\202=\372\303\274<q\325><\004j\232>\021Z,9<\0326=\0325\010@p&\340>\342\267\370>!_\261>\261\373\252>\271\002\250>4N\266>n\260\247>\3202D>\254\247Y>L\003\021>\307\261Z>]\017\033>\345dK;O\234\224:\301[\000;\242\352\257:\317\252e:\222\314\353:T\233/:\305xd:=\273!:\322%\305::\025\217:\210\255Q:\247\212p:\214.\332B\334#\206=\017\211\221=\220\344L@\330\205\n>?9\026>\351\266\r?E.\2169>\004\265=\177D\214\301]$\270?\354\267\351>\225\310\256>\207\262\334=f\035\331>\372\266\223>\355B\234=p_l<\211\305\210=A\323\205=\220-\303=9PP=\r\000=:\341L0:\200\265\021;m\003\370:_`\275;\320\342\000;\323\301w:\327\205@:<\024\023:\024\246l:\313\372W:3\361\177:\311\026\364:+\225F<%//<qR~=\265s{<\237\311A< \352!>D\367\3538\272S\004=f\273\351>V\364\333>\266x.>\326\341\022>\235\375\037>c\330S>O}\">\031\222\010>\252k\341=v{\326=FJ\024>\023\241\316=\350\331\343=\332t\033:\031:K:$T\352:\267\212\350:\027C\245;\023\363\316:\'\257\211:\021n\3509\230\007\3379\242\267L:\350fN:\275%8:S+\231:\000\000\360B\376\352\240=\310\376<=\307\350M@b\2579>\351I@>\301\374+?\334\350\2029\362l\351=\205\317\220\301.\235\277?N\264\004\275\236D\246>-\357\274=\305^\277=\247\362\001>\016\245f>\021\335\231>\352Ex\275\374N\321=\276\330\261\275\276\266\254=c\327\256:T\022\002:S\234\302:R3?;ao\364:\370[\036;\307\030\314:h*\236:\240\000\262:\177vv:m\027\273:nx\343:\310\237\251:\210\314\207<\202\211\013<1\017\334=\013\212\226<L\206\023<\230\344k>{8\3678\246K[=\204\312=?\324\333\341>\"\311\265>d\031\362>1^X>\272\373y>Nbc>\310\214\220>7:\275>\272\023l>\340\205\233>\225\0045>\013|=>\3240\226:t\010\3329\241\r^:\274\231\216;\002\202\257:\301I\006;\334\036\217:Y\307F:\364\330\177:Q\3542:\245\006\247:)2\327:\312q\217:\267m+C5\342\227=.(\206=\201\231R@\350\016\017>A\255\022>_\257;?@X\\9{\342\001>\314\235\210\301\3204\216?\371e\246>\272\005\240>A\334c>\212\317\215>\224v*>\336\374\036<\215\340\253=\350\265\277=\343\030\260=\254yM\275\272^m\272#N\035:\372\206::1\215\377:\341\211a;X\224\242:@j\013;I\3267;p\360\313:~f\340:\264\272\350:\335g\312:\216\361\246:$0\347:!\330K<dc\350;\000\241B<\363\022\237<Y\202\207<%\'\027>\321fu8\312\342\302<\324\311\246>\325m\034>\030\310[>p\205\002>\234\355\000>\205\253\007>\310@\371=\210\375\000>u\020\007>\356V6>\005B\373=.\004\363=\020\230$>\201\240\3719\2624\014:(l\014;7^\240;\275\233j:8B\r;s\355#;\232}\230:\350.\223:\263\003\230:\213\014\241:\"\300v:4\232\206:\267m+CW\225\231=\320\203\360=\343\263Q@\033\023!>\375\356*>L14?8\335\2059\2378\341=\233\231\203\301\027\037\252?\270FO>\266\027\250>\023\263d>\010\3246>\275O!;\234f\003\275\022\000\337\275Aj\261=9bz<\024R\342=\236\010\262\275\361%\016:\364\2527:\343t\257:\001W\315:\223\334\t;\014\335\215:\033\334\373:\353\031\275:\2619\354:Ts\006;qy\351: f\227:\325\262\244:\341\265b<7>\306<:}\023=\230\310V<\276\350\306;E\tP>\236/\3728\326\036\006=\023|2?9\033m>\361\376\255>\220\375\177>\r\0276>\370\316\214>\311tq>S*S>\255\275n>s\326}>J9P>w\245)>\260\t2>\322k\2529\304P\026:j\031\202:\264\035\243:\000\261\017;\373\3664:Eo\333:\201\250\275:\326#\021;\277\374\324:X\264\234:>\312\224:\236e\':\000\000HC,n\242=b\240\300=\244\317B@\370e9>\355\3259>\273\227\035?\323[a9\235\n\307=eM\216\301 <T?\2276J>\245\3265?\274\276\243>\332\021\255>\324\250\274=\252\224f>\013}\177>\257\252\221>T\367{>:\263\315=A\265\365=\336C\3369\262\265\3239k|\272:\2623?;\007G\221:\301\\\262:8\374#:\300\000Z:\224k~:\"P,:\231\244\010:\023b\033:\017\335\205:\\-h<\002@\352<\310p7>]\026\313<(\305\177< \001p>l\310#9\256\320\235=+vU?\344\313\177>{Q\207>\376\371\215>!\'\313>\032\203T>V\350i>\237@?>\313\344\214>\321\355[>-\300G>\276h\024>a\2540>3\\\010:(b\2619U\337k:\026\2743;\314\212c:]3X:\270 \3739\322\030\2759\305\317\377:\364f\216:\200\334\030:\307\313\004:\033eF:\000\000\360B\326\350\276=}\202\010=\371\225H@t$=>*x5>\252/z?.dz9r\327(>\233\215\225\301\246\003\207?A\212\274>F\330\023?\376ip>%\235s>)\346\200>\2361\365<NF\365\274u\242\030>Q\212\307=\372f\334\274\341h\030=z\016K:\265lF:\274\333\";j~>;\276\307N;\031a!;|\036\205;\250\267\253:I\312\250:\356\263\272:<Z\253:\260eO:*\340\004;U\315\260<\314d\217<$\026\372=\202\272\312<(\025\224<(\230\215>Ss\3078DJk=h\311F?\362\202\226>\253/\257>\275#\263>g\215Q>\334h7>\355K<>\310E\371=\004n4>\000\\\031>\024\337\254=\327\230B>D\020\020>1\236\036:\266o\021:b\277\315:B\365D;\206\243[;\002f\014;!\213\373;\267\330\211:\231\021\200:)\313\220:\221\253\260:\326v\3779c\274\001;\267m+C#\202l=*\202Z=C\251A@f\3350>\024\357N>\322%\217>\342\353R9\r\251\225<\277\"\231\301\227\007\017@\n\312\033?k\005\004?*ux>\031\254\255><7\217=\252(\303=\214\244\036>1!\320=\204\377\207\274E\010H<[\267\375\273A\357\034:\235\202\3639/\330\207;\3766\006<\3356?;\267r\274;\336+\t;\222\002\311:\t\337m;yel:\005`\235:\271C@;/^O;\355\001><\306\332\215<\177BE>\342\221\023<\276A\007<\242\261\206=\320\355\2338\245\240\017<?\034k?\320\"\017>\354\341+>\313\200\013>\006:\217=\023\202\311=\255\364\331=\r\013\272=\016:0>K\336\323=r\307\261=\250\327\242=\332\327r=@/\2769\025\314\3429\032Dl;\016\270\256;\366k\032;\355\204/;\037^\212:\350\363\213:\231\220x;<\370e:n\336\212:u\210;;\325\301\225:UU\005C\010X_=\203\254\245<(\342=@\271\314\013>\262\261\035>\247M\347>5\343U9Z\"\256=\204\253\225\301js\267?\325\350T\275\304\332\001?\232\205l\276[\204\306>\020\032\210=\240P\232>}\347\254=\322\353)\274j\220\247=\025\365r\276+k\357\273/\214\332:\007\001\247:\371\2528;;cE;MB\342:\212\035\251:%\270P:\315\300\224:\247\375\373:\035\035\236:\031\360\257:\035\221\343:\014\353\247:\364\023G<\300\336\311;\026\234=>*\375g<\351\344><\342\323\375=\244\022x8\355\010i<\032b/?\215j\227>\214g\304>_~/>rg]>\253\241B>\227\n(>sA->\351O\034>\263\263\">\313\3405>cA\t>\326= >,\360\231:O\342;:(n\344:{b\n;8@\324:a5d:\003b\004:>uX:s9\302:\002+h:s`\253:^\234p:Ws\3509\214.\332B\304\253\203=\321\345\006>\316\321R@U\370\000>w\177\013>\256\345)?\233\367Y9&\251\324=\263_\201\301%rp?\211}u>\014d\365>\001\360\225>\343)\261>\254\255\257\275\306\250\236=KW\265\274\345*\250=M\370\323=\005\224\022>\353LO>\2271\217:1\010-:\306\320\240:T\350z:\3104V;\304\243\255:@\304d:\333\322\234:\250\240\3659p-\010;\016\306\302:\267V\207:\322\'\250:w\201\234;\340\250O<\'\007d<\315\263&<\331-\035<R|\241=\212\332b8#\205\361;x1\245>\350A\n>\022D\240>\000\310->\302\343\007>q\230\023>O\367\304=]\345\341=\253X\376=\005}\n>\254\026\320=7\363\">+%\025>\"\007\215:\200\374\3539\005f6:=p\024:\377|%;\3474\207:^Z3:\275\321V:I\364\2369\326m1;[d\336:\007\3630:\232\2558:\000\000\226CZl\202=\265e\t=\344\321N@\234\340\034>DB(>\203\240\021?\251s\2269\346\203\325=\231b\224\301f\267\306?\367\024\270>}{.?\375-\231<\021\277->\370\352 >\013t\177=n\022o>\351\026\237\275)\267\363\275br\233;(\210\263=f\\\223:\201\245$;\323=x;\2344\r;\366\034\210<\\\217\255:\301>2;\270\247\270;G\240>:8\022\002<U\0213:\274\010\200;\256\331\326;\231\375\216<\237\027\337;q\313\251=\0357|<t\3120<\000\254\\>\013\223\3658\034\021N=DRN?\350H\317>?V\336>K\305\223>\2511\213>\250\037\200>\373\276\226>\252\031\206>~\'{>\327\374\251>4\247X>NcX>R\3770>#\035\340:\330\024R;\354\373\232;\254\314\007;\017\347\233<\245\274\220:\026\344%;\374\271:<\223F8:U\237.<s)E:\032\335\226;\022T\253;\000\000\310B\t(\243=\004N6=j]Q@\005W\023>\257\020\023>\032\017]?\3250>9M\215\017>\340\002\212\301`\353\204?\020.Q<t\006i>\342PI=\205\022\002>!-\355\274\021\205\251\275vI%\275\210\004\026>\211\226<=\226\303\235\275\225\261d<\2608\232:Ob6:\306\3562;l!\363:\025\334\323:\223\323\222;\245\334\242:?\216\231:\345\222\316:\024m\352:\220\304\205:\324`\205:\310\031\316:=zF<ew2<e&p=\024N\235<\242b\221<\r\013\021>\231c\2248\212\212\273<\336\333\025?\331\3272>fi\r>6b\001>\201p\364=\356_$>s8\025>4\n\013>\207&\334=Vy\037>\345U\351=\366p\023>\347b\337=\363ag:&\255x9\350G\357:\251\372\364:q\225\217:93\226;\205I9:;\271C:i\263\243:\275\331\255:\242(1:\377\335$:\021\203\211:\000\000HC\230\305x=(\371Z=\343\252N@\353x\007>$P\032>2\267\031?v\243\3279\256q\334=\270@\217\301\356.\235?2\353\330>\225\035\024>E!\313=6\335\205>$t\342>B\351\266>\304\2616>\304\006:<M\037\315\275\247\301\300<X\224_=?B*:2_\221:q\326\314:O\340\250:@9\016;\325u\034;u8\033;\246\346#:\240\010\264::\370N:[\264_:\365\322@:d\235\262:\005\322`<\211\377y<\003(\225=\021\373\206<s\021C<F\233K>\033RF9\345\254\377<PVC?^\033\226>\270\330\346>\177\241\221>\257\007\263>Fij>\206\327\217>r\224\343=z\226`>xh{>m\037\\>\342w\244>h\227R>\251\216Y:ut\307:,\236\305:\351&\220:\360\253\013;\376L\000;\345\2704;\230\003\026:W\336\364:B\221\031:\260\342\200:jf$:\231\274O:\267m+C^8d=ic\213=O\001M@\325\236\002>\"\367\023>o\013\323>Jy\3409Y\263\223=\205\032\214\301\302p\314?\240\217n;\n\357\212>M?[\276\236\207\310=\267\207\257\275\262\202\225=\350\312\307\273\240Y\326\275J#\256\275y\332\246;6\211\204\275\272}\002;\022\270\246:C\235\013;F\\:;YM\216:*s\322:\3335\316:\230d\032;\343&\251:\325\374\361:\271\324\025;Y\333\342;t\202d;\304\272A<At\237<V\226 >~\271\220<[TN<\007\000\020>Q\362\2539\0264\273<y\021\254?On\267>\253\221\266>Z\017\255>\026\300\203>\0138\372=\027@%>bfO>\351r#>\0264X>W|\016>TD\r>\355\317\021>Ke\032;\025\313\213:\207\307\002;\026\322\306;\342\016z:\314\327-;\227B\247:\353\304\031;\0377\240:\240L\377:6\206B;\241b\260<\231\025\271;\000\000HCV\357\324<\313p\353<\263KH@\223\371\230=]@\331=|\n\001>\0061\264:\340\323\'=\250\341\240\301\376)\000@\306\037e\276\326P\n?\341\030\252>\217\227\242>\031\332\314>\201\253\307>$\001?>\353\347Y\276\"\036b\276s\254#>M\334\017\274\004<m:5b\177:\177\365\205:\027|\203:\215k\002:\271\322\2379\303lX:\337\020J:S\212\013:\211\016\":\246\031H;\271\227\t;\201\005\253:9\210\032<k\225!<\223\315e><\275\006<\235UP<\355\n\251=\332\315G:\351$\227<v\3059?C\251\014?\261B\251>HF{>\3471r>s\255\230>op\250>Y\204\241>\316W\231>\250\316\214>\355x\212>Tb7>\rI9>\312*\202:\372\353\241:\350\207O:p\021\210:\357\020\3309\023\301\2149\3734K:\355\235\025:K\375\2749\274\004T:\334\321t;\246\263W;\344\007\213:\000\000HC\177\277-=J\3330=\313\223K@\016\365\373=\037z\033>\206-\232>\230\n\325:\242\275\207=?f\233\301\n\254\364?g>\342\276\001\316f\275\376\377\212\274\260.!>\333\271\"<\350\2225>[y\002\276\314\272\024\275t.\\\276\000\232\320\274\275\207E\275\226\022\345:\3074\017;\366 |:\322\352\005;@\301\3609W\207\3249\355vC:/\366T:H\323p:\3008\2229\352\3414:\377\270\3329\330\215\313:`\266\231<L\346\256<Ts\024>y=,=\263P\007=\241\353u>\241\220\321:\016\024\010=fh\331?\227C\033?\227\240\360>V\014\020?\316At>\344\021\310>\376\006\211>\\\360\255>=\330\231>\336\366\263>\361\246\305>\317%F>B\315\223>G\027\222;S\332\200;m*|:N\323D;\375\010\026:\335\227\3729\030\024\340:\362w\021;\267\311\342:\244o\2419\374\305h:/\316\020:\223\023\306:\267m+C\\\232==\202S\"=\210RB@\347|\320=\257\253\000>\372\330\255>\025K/:f\201\206=\r\005\230\301\216\022\305?K\321\210\274\253\306\020?\207y-?\263\203\376>\301\315\234>6\251a>\370iN>\334\256h>\267\324\371=\231\322\301=\245f\264\275\002\036r:\270\311\3009b\337\030;\017@\003<t\261\005;\026\227a:`\276e:A\310a:d\332\n:\035\271\3149\350\"\\:\365\361\003:\n\307\";~\020\254<\352\254\377;\033\231\034>\214\214\274<\316\276\201<\2722\204>H\214\2379:\345\023=\016=X?\'d:?O\027\306>\323\312\214>\217\321\346>\272\205\201>\314\r\215>\362\272w>\232\342Y>\353\2342>\033\246Y>z\r1>\014\361{>\332\002\256:\262:\2619}n\351:\336\277\"<:/\030;\370\315!:J\3515:q+t:Y\346\3129\277<e9<\325\254:\227\026\3629\307\020\';\000\000\310B\311\317\263=\336L\013= %R@\022Y\370=\216x\347=\221l\177?c`]9\007\352\r>\365\207\220\301[L\026?\326~\240>\027o\023\276\336q\003?,\375\247>k\365\226\276@\355\354>\360i8>\340\312Z>?-\274=\320\366\267=\032\226\252<\220\007\031:\237\311\3159\200R;;\261n!;\346-\372:\000|\271:v\244\270:Z\310\353:\230\0148:\375\341\3719\006L\034:\345:\2359J\372\243:\026\026\300;@\344\016<\217\231\210<\337\022\257;(\351\310;\035R\240=$p^8\014[\000<\2030\270>/ U>@\202\024>\240*?>\375\023\363=\272\'\354=\325\337\351=[\n\347=\345\201\036>![\022>la\004>\220\260\002>\210\247\212=\234\251\3159\302b\2069KF\r;*\346\006;,\003\262:\'C\203:\201\324Z:\tj\332:\311\264\3309\321\027\2349\274\215\3339,\332E9w\213\r:\000\000pCxYK=\021\320\375<eL)@\227J\007>\350D!>\270\266\260>\252\006A:\343\207g=\303)\263\301\270\017\031@\036\320*?\226\271,>\375\274\340>  \220>\016\r6?\365\013\342=\204\340(\274XNA>\250`\241>-\277\027\276\036\223\347\275\310\306\33599\204\2569\342-\334:n\321\312:ZV\026;\361;\243;\200\211\320:v\226X:\346Q\3719\252\035\207:\311\337\333:\230\373*:\251\303\013;N@\243<\324\363\311< \271\317>\035m\326<\000\201\204<\224\372\250>ip\3379\024\322\250=\373\226y?\274\014\344>\253T\223>\220\246\201>j\0103>L;x>u\326.>\355\266e>*\345\210>\2553\037>q82>\237\363\027>\270\2104>\361\264\3439\334\017\2209\367\260\312:Jc9;\271Q\206;\375\350\016<!9s;1\213\227:YK\t:\317#\000;)V`;}\362\207:\327 &;UU\005Ce1z=7\306\370<`\241C@\3228?>\234rM>\325D\300>\024m.:F=\037=\305\242\243\301\276t\022@\313\344\222>+\301\302=\266\337D>\253\216\366=\366*\\\276\372R\320\275(\377v>\273\265\245<e$;\276\327@\336=\261Ws<\2714A;\233U\226:JHh:\214\302\221:\372\216~:\310y\225:\020\303\002:\0266u;\212\325\034:&p\3419\245\355Y:\022\353K:&\340\375:\311\212\217<g\307x<\325\235\222>\2632\346</\202\227<\034\363(>f\324+:\347\331\006=C\217\272?D\n\302>\222\314\307>5\346\254>\350\021\324>YB\177>6\344t>\273\266P>\250\010\025>\217\177/>\023\200(>=q\361=\231\356\365=\234\364\024<\264\203\036;>\265\027:\254\261P:\314\237`:M\221\241:\nn\2639\324\233\031<\320z\033:\255\300v9\216\214\020:R\026$:\211\306[;\000\000HC\272\241\247=\345\314\344<\301|N@\253\034&>Cc(>\244G_?\356\325 9\275\t\024>\001\341\217\301W\334\232?0\250E>\320\304\001>\215\246\312=A\272\245>\217+\343\275\001h\017\275N\364w>j\227\362=h?z=\205\250\026\276\334\316(\276\267\342\261:\325v\211:\370]\007;=h\016;\242\216|:\332\261\326:\247\202\336:<\255x;\274\230\205;\340\363\353:\375z\373:\376Z\246:f(\336:\3667\305;\241\034\337;7\r-=Z \022<\332\364\333;*\266\317=b+*8\004F\202<\372\335\306>\212s\006>\215#\235>\376\022a>\254\261\016>\242\177\202>\256\342\345=i\024 >\270\3538>l\274\017>\265\235\371=\274\030\365=\372\317\333=\305j]:\010L8:B\026\347:\247f\004;iAT:\020\201\300:]=\207:D\266B;Ut5;\237\267\207:^~\313:\252\034\221:%\013C:\000\000\310B\305\243\257=\032\302\315=Q\213S@\372\303\037>p\314\034>\203\322f?\3533\0169\0368\033>#\353\204\301\353\2567?\006\307\276>\346 3?\221\322\232>\223\225\207>\250\267i>\262\302m>\335\202\001>yux=\026m\312\274\234\245&:\232\2444\275\247\375\016:{\350\262:Q%\206;\352Q\r;,\313$;f\027\";=\364l;\337\213\304:\366F\222:v\022\272:-\271\200:\014\233K:\277]\000;\300\016\204;`7\322;\231\003\022<\202\026\014<\234\256\277;\362X\200=\232}\0028\250\0021<\325D\301>^\213\016>\305.\222>\357\316J>\214\250\n>u\246\006>E\206\341=\023#\270=\272+\277=a\327y=\271\210\234=\226I\244= >\257=\360T\2579\r\177a:R\232[;\3519\347:\277@B;\036\207U;>5P;$\305\251:\222\220l:.\355\235:\2536#:\023&\2719\003\032\213:\000\000pC\353\025\262=4\r9=)\317M@|\3760>\347\377;>e\363\034?7B\2029a\341\273=\302-\215\301\210\374\314?X0\226\276Q\031\344>\234\232q>\321\361\022>\304\300T>|\371/\276K\014\336\275\240\317\023\276\201v\n\276\222\275/\276\235\326T\276\3540\206;l\273\251:b\314h;C\215\226;Y\312j:0\247\275;\r\316M;\203-\237;\203&\320;\246\327\211:\326u\004<\267\000\027;\321\360\233;\234\375\200<\001\013a<DFB=\365\207b<1v\036<\305m\025>d$\2438m\326\021=\254\027\364>\244Q\245>\354\301u>\351>U>\243V@>\372\231$>kM\">O F>\375\300\n>\240\007\036>\376nH>\311\222(>Q\223\317=\351v\270;\036_m:uaW;\030\320\255;\342\325C:\354\370;<\361\037\207;\233<\233;jn\356;h\201<:.\351=<\202\370\317:\345\352y;UU\005C\234\347\003=\006\367\016=\371\006G@\340\355\354=`2)>\314\375\025>h\241\013:\223\334\232<@J\235\301B\344.@\003\304\000?{p\326>\264>\224>\371\265\270>\230{(>r\3279= M\022\275\311\020\301\275\347N)\276\345q\004\2759\312m\275\256\264\031;\335b\006;\360\017\215;\020\233|;\342,\001;\007\335\177<\372\260\277:\177\242e:\237\317\237; {\203;\360\'\233;\272dV:\221\232\263;G1\224;\311\270\246;T[q=w[\345;T/A<\315\371\200=\345\277D9u\342\300;\035l\035?\335\031\262>_\336C>\2114.>\017\363=>3I\262=\006\t\026>\270q\355=\370\004\326=\261\016\222=^u\225=\350i\261=_\\\200=U\325\204;\032\262h;\017Qd;\371}n;r\376\261:\240\301n<n\000\212:H\n6:J\314\271;C\3144;/\252\327;\003}\036:\t\n_;\000\000pC\352\2047=C2,=a5K@3\313\351=\234\323\020>^k\261>Ga\017:\230\204\227=\223\243\220\301.\001\305?B\200x\276/G\344=\030\252\375\275\313M\334>\334\235\303=\367hE>\202\352o=2\335\323=\302\201\227>\273\326\236>;\263*=\004\325w:\315\211\021:\033\327\t:i\022~;hq\216:\035f8;\262h\033;u\241\210:\333*\017;^\316N:\262p\034:-\202L:Ig\005;hU\320;\202-\023<Lh\207=\336\220\265;b;\336;u\221\001>T\214$9\010\312\247<\277\221\332>\256\253\310>7\303~>4\3179>\310\032\037>\213\215\016>4%)>\201\330\273>}\267\213>\277\331V>\341Lb>s\332 >\252\026&>V`I:\3467\3559p\341\3439\033\233\n<\310\300\030;\232\017_;)\273\034;[\322\234:\243`\037;\375\275\027:\030l\3649\315,\200:\310\253\014;UU\005C7oz=?\277\247<I\262B@ \004\003>\034\303\030>f\0222?D\023\3659\311?\366=l\177\240\301\363\t\301?>g3?\270p\014?\271\316\031?\325\356\204>\367\374\304\275\265\000\024>\334\327!=\023\332i\276(u\213\275\354?\033\276\357\232\256\274o!\220:(c\033:\231\230\206:e\2751:\360\277\\:\\\325\3249F/\t:\021\202\3459\247\275\351:$6\242;S\036\013:\316^>;\327\377\350:\331\270e<=#O;\215\250\341=\303m\002<\220<\255;\312sJ>\035%\0319\n\221\007=\245\264\031>\201nf>\332\315$>\332\270\272=\342\332\034>\367\022.>\274`\010>\033jq>\315l5>w\260s>\271.\021>\304\3513>.\230\014>\345\266\217:])\2169\215\355\217:@\220\017:\'\240\215:\002\376T9l\177\003:\216Y\2669\217`\265:\260\265\222;.\036\2639\322.\027;\362\337z:\000\000\360B\205<\376<Bw\225<\302\'C@\035\"\344=\202\366\'>\n\360\334=:\374\216:\306\304\n=\302\350\244\301~z\'@/`\324\274\221\025\003?m\006\223>\372\243Z>\315\020r>\301\021\224>\213\2619=\227\202\034\275\373\356\354<\332E/>\013\320\205=\214\nN:\263c\n:\242\313\310:\274\304\\;G \326:&l\363:\017\262S:\177\374\253;+z\027;6\203M:}7\253:,\257]:J\372,;?\377\010<\354T\277;\0371\030>5\336L<7\226@<U\331P=Lf\3379X\243\203< SK?\\\341\237>\324R\263>\341\226\253>\201\017\271>X\263\232>\235\304\220>\362V\224>\362\340\224>\014\306\232>&\260u>\301N=>\234\027H>\323\374=:\310\273-:\273\327\210:\354Z\311;I4\205;s\022\236;\343T\031:f\3055<\256]\023;\332\273w:[\310\271:\327\016\226:fVW;\000\000\026C4bM=\341\243\373;x*G@yr\377=v\333\037>\014\244\350>\211\350J:\272\217\257=`Z\256\301\251n\033@\221M\314>\006(Z>x\3623<\216g\323\272\320\255\212\275i75\276D\350\317\275\321h \276\302\0061\274\373k\237=J\373\244\275\222.\225:z_\3009\n~\026;\261A\337;\307\371\t;\212p\333;\'\273t:\376\372\263<;\354B;z\361X:@\237\016:\215\236o:\302J\016<\226\004\315<\303\334\206;\251\3723>\370#\227<A`\213<\245q\314>7\254\3479~\236\220=9h\252?O\334\017?\250\030\243>\231\377\237>\014\2503>\2027\031>\037\370\\>\344\257r>\033\232\253>M\220\220>?\341z>\247\016\206>\376vi>Z\374\212:\245\003\2359=(\021;\276E&<]\367k;8z4<w\327N:\247R_=h(\253;\331\256\':\204\375\026:l\263D:\330\234l<\000\000HC\214\311\213=m5\017=R\260P@E\263\024>\250+(>\213\001\344>Z\304\2339D~\236=\354\003\221\301\361`\331?!\005\260\276\232\262.?`\3306>\233\024B>\366\207\204\274i\330\017>\263\316)>i#z\275?E\362\274\361\343\230=h- =\262\004\215:\ru\245:f\313\272<ZJ&<\366\037!;IN\267;\247U\':\261XI;\327\260\263:\177*\346:\022#C;\221|\251:n\331\030<\303\322P<\324\341\261;:\270\337<T\332C<?\350\003<PF\017>\261\336\3118\312)\010=\211\344\262>d\256\273>\274\301s>|za>p\265\004>\215\321\312=\006\223\354=\376\3507>\362\3170>\240(Q>\302\321R>5\361:>\361}2>\333\036\221:\231\263\021;\005f\'=k\363\211<71\014;\240U\t<\224m\3149\0040\250;\272/\202:\016\364\362:\335\034G;\035\342r:%\206-<UU\005C\225hR=\321\032\330=j\236I@\300\030<>p\346F>\032]\301>\246\364\3648\302\005\007=*\230\217\301\375\377\266?\205\344 >j\034!?\2353g>\367\327\200>\374M\034>\351\2615>\341\241\344=BP7>\374I\230=\370\026\031>Wk\001>\311959\324\000\3739s\377l;\350Y6;%\254::\255\320\014:g\022{:y@\377:\231l,:\340\'6:\306\244\2629K\260\t:\237\023\221:q\320\017<|\345\000<i|\277<^\n\234<\254,a<c\037\241=u\21168+\032}<\027\037E>\003S6>@\302\324=\265:\353=\234j\202=\006lX=\337\330J=\376\240)=H}W=\306\3657=r\007{=c\t\002=\2372F=\230\323\2018k\344\2129\335a\371:\241\210\244:\300W\1779:~j9[\206\2229\370\265q:(\323\2019K\024\2259\356\225\0109\346\201p9\\Y\t:UU\005C\270\304m=\2069&=\213nP@\031\207\030>\367\354(>\013\250\361>Q_\3439\3516\220=\326\224\225\301\202t\334?\261Z\254>\321\035\304>\225\215\202>;a\250>\r\177\000\276\026VY\275\342\302\001\272X\356k>\r\252\212<\372_\375=P \333<\2471\342:\270\2500:\365^%;0\326\214;\316X\232;\256\235\034;F\343\227:PK\364:\335\216\313:\241D\020:\201\006\355:\"\006\022:\247\032,;\364n\234<@\000N<\337\346n=\200\325\301<\355\212l<\204C?>Nl\2559\3424\001=M\230\212?\356M\267>\263\341t>\234\304\024>NF\r>\235\277<>\254\367\'>\313\235\014>\026\341,>\231\335F>\277.\031>\037\272`>5m\021>\202v\030;\234\233\231:\312wY;0u\373;\374\003\351;o\325\035;1A\212:\205A\334:\356f\341:\221\263\005:\360\031X;\300G\023:T%\037;\000\000HC\340\203\025=\376\r\005>\035\360J@\266>\002>\323\371 >\031xa>\266\022\3219\367B\374<\360\276\214\301\303d\325?R\305\336=\004?3?\320n\220>|d\345>\313\301\222>\330 \225>\004\334\025>\353\346\205=z\t\320\275=\224\241\274VT0>\027\253\2319\335y\3039\253;\t;!2\345;\357h\241:\206*\3739\320\010l:p\r\r:B\335\245:\360$\231:\224=1:\271\306\033:\313x\001;\357\312\202<R\336\260<G\344\342=\n\037i<\224J\023<\357\274\255={\013\0139\203\344\227<\343\203\257>\332\363\\>\257\006O>%\315\370=\264c\376=q\222\363=\3658\305=\371U\321=]\235\332=;\376\270=Eh\006>8\004\302=\313\032+>\000\'\0179\0345c9a\354\232::F\237;\250\027\206:\271=\24692~=:oO\2329J|N:v\326o:Sf\3559|\002\2359\227H\230:\000\000pC\360R\347=\031TS=\237\231R@\026\032K>g\264/>~\321\237?\257\367\3778\351Ya>\266\014\223\301\213\260R?\216\\\226?\225\t2?\330:\300>\313\006\202>\032\340\020>\370\2033>^I\217=\324\234v>\006\366w<\007\275\003\2734\331\034\2766\227\3029\010\035*:\360\000\031;\0249\243;l\022B;\005\252\000;\235V\300:\331;\300:\374\312\024;p\363\007;\337\246r:\031\354\036:\234\216\004;\003\212Q<\266x\215;\371I\202<\316Q\030<\275\017\344;\217f\027>\265w\n8\331\271\306<\277N\237>\001\240\014>\377?^>\320Q8>\"\272\035>\223\364M>M~\037>{\313\014>\260\276\342=~\237\006>W4\344=8;\353=\302\246\263=\t\302]9\230}<:\230\035\n;\323\374y;$l,;\261?\370:\005\360\205:\244\244\252:Z\310\007;\351\'\020;\321!W:h\236\3459\177\204T:\000\000\360B\rd\205=\372\004T=Zf*@X\346%>q@,>Gg\340>\252o\3139\202\276<=?\000\230\301\203\"\320?Ds\364=\361\270\376>*)#>\013\"\243=.\r\264={\3336>1\361\326<\307~q\274d>\010>o\315D\274\356\230\231=\266c\204:\264\204\242:\217\016\364:1\002_:\010\202E:\207\340\034:\257\220\2729\314\3525;K\254\255:e:\3549\234\237\241;\336O\3719\360O\007;\204O\272<D\337\207<V[\210>\016X><\316\372\211;\363!\201>\225GB9P\341]=|\030\264>\006\237\321>0\206\214>@\360%>\213\344\020>(\224\355=\260s\350=\350\202\376=\026\325\321=\346&\370=Nj\013>\202<\277=\014\035\225=\262\205Q:Vi\307:\272W\234:\002\254\010:z\"\2719\002\332i9\276\321Q9\t\204\006;\241W\203:\r\256?9\317+\003<\266x\2719\035E\354:\000\000\360B\014\260d<\2630\026=\376\327R@P\013J=\225}\307=o8\377<\2536\201:-\313\264<\210p\243\301\272\307<@$i \276\021\035t>hk]\276:>M>l\256p\276\263\317\">%\205\025>\320\017}>\376J\304\275\274\t\222;\260.\024;\225\270\2309z/\3378&\350\3769\320b\301:\010\2167;\224\035\2639\2720\2429%\250\3169_k\21295fd:\315\377r9\305j\003:\027-p:\216\244c;\245\004t<RI\362<\373\t\003<3_\240<j \236<\342\253>:X\321\240;#\261\246>\001K\206>\025\241@>/\337\366=\252\n\364=\302\307\372=?p\307=\256\364\357=7\334\357=\016\222\270=\035E\320=\002\224\370=a2\326=\272\231\2209\242\325\2538\240\013\006:\355A\211:\354V\026;\363\t\2479o\335\2519\210\244#:%\373\0329\327\035.:>\\l9.\315\3229\367\350\r:\000\000HC\306\316\313<\3271\363<\265s>@\231 \217=3\013\373=z\021A=\0041\031;Qv\017=:\250\246\301<\347Q@A\370v\277!\036\005=\262\033\223\276\326\373\215\276\371\313\253\276\305\305\202\275\315\020#\276J\227\224\276O\274\204\276{\221&\27507^\276\035\n\272:\270\231\265:\233\323:;B\230S;F[*;+%\225:\0344\027:g\363\254:^J\210:\313\230\001;Gp6;e\235\211;\307\357c;\320H\002<\261\\\256<IC,>(7\322<\007\022\305<$\004b=\213<\222:\266\234$<\273\314\362??\272\207?\317y\035?x3\332>\370\331\220>>\000\242>pV\224>L\344\202>\275p\354>\341\265\304>\'\013\315>\223!\226>\227\235\273>\"\361/;\031\3169;\220]\242;\276\027\251;h\223!<\0108\246:X\0059:\030\325\004;W}\313:\352 0;\214\271\211;\361L6<G\350r;\000\000pC\334\362\316=4\202u=\305\364G@\371\360P>\321\320;>\"\232\213?\001\331a9P\336}>\207\352\216\301\205\"\301?\212\355\317\274\337;\253\273h\275\257<3j\001>\344L\013\275\001\265!=\334\300\323=\001ZS=Ms\311=\r\327\026\275\226\3777\275\375gr:\262\304\251:X\340\\:\215\032\240:\317\212\253:,w~:-EF;\364\222\310:G\302\346:\336OU;\212l\205:W\250l:\204a\266:C\305\362<g#\032=\024\265\346=\234\245-=\326\322\347<\337[\246>\td$9,\t\321=\331\235\267?\346\230x>\202\252\216>\246\317\256>\250\271>>\022%\033>\317\006R>\020\023\017>\2543->{\2642>\025M,>\371\233\374=D?\023>H\306v:7\201\245:\250\245\t:J\003G:\306\224\243:*\235>:\362{\004;\334D\230:\264i\364:k\007z;/xZ:\371\3059:}\014x:\000\000pC\350\276\311=\023g\030=>9S@\253T\016>\030\024\003>/1\225?\243\251\0329\305\036&>\302i\221\301\301\026\200?\312\030\236?\374JU\276mu5>\204\360\234>PD\325=oF\257=%\004$\274\353\371!>\031\250-\276\255\231\347=\320\025\370\275x\225\235:\2016\r;;\\\\;Ad\036;\247\261\034;n\224\035;\242\271\002;\203\374\367:\300\326\276:\274\014\327:\024\255\212:j\233e:\260E\314:\004\035\021<Oh&;-\334\371;nT\221;h\177\261;\026\\\270=\"\320\3737\212\257\365;7Z\304=\311\366\233>m\233\351=\030O\203>\004\214\005>\203i\316=\255\315\001>\244\311\344=\301\372\251=Cg\256=\222O\204=az\270=\375-\206=\365\004\207:\341\231\263:iK\202;@5\002;-0\000;\342\034\r;\2041\265:\242\311\217:!)^:\016\233\276:\245\355D:\333\275\021:\335,\200:\000\000pC\314[\304=\216\000;=ezO@t*H>T\367@>\256}X?\310`\"9$\237\023>^\307\217\301\377\222\334?\002>\240>j\010\300>~\2015>\313u\365=D\240\014>m\370\001><\345\r>\374\361\354=\321S\213<\250\007\317=W\277e\273b\367\327:\203\240\253:\375\276b;\332\355\003;\316\322S:\242\232\360:\035\235\314;\335\204l;PX\200:\322~\200:\003~\257:J\247r:4n\t;)\0204<BA\247;x\211)=\3556.<\223\304\033<.\220\t>\312 !8\'\324\003=\251\226\330>s\262L>\244\344\204>0\2629>\356\024O>\026\2208>\227\035\370=\350\356\305=\236*\344=U\202F>O\241\">|P\014>\363\2422>]\';;\346\275\206:1[Y;GG\257:\227\331,:\247F\226:\275\031`;\'6\334:\273o\032:\317\224\010:Z\340\225:\203:,:a\305q:UU\005C=z\204=\372k_=\310dO@\316E\014>-\214\030>\305\327\030?\212L\2409\215\247\315=\215W\215\301A`\330?\254\035\030?#\235\231>\241@Q>\315\270\263>\215\247\276\275\0004v\275\214t\353=I\307\222=P.\234={|[\274K\315\313\275\3305\230:4\235P:\276\275;;\243@\022;\"\177\033;\340c\320:\214\270\310:\241\347\001;\313\231A:A*\325:\005\215h:\025\244\025;\231\210\306:llc<\t\212\255;\034\017\n=\343i\204<\266z\014<\352\253\025>x\357\26186o\010=L\350\364=Z\021^>\255\346\374=Y%\335=>\022\022>w\371N>\301\215\000>o\234\010>\203\026\370=\327\226\036>\341+\370=/\017\006>\004\232\242=/-\234:\23773:(\0104;\307\036\010;P\236\007;\341\302\241:\346\274\344:\177\350\000;\232V\3629!\256\247:!\242M:\365)&;\206+X:UU\005C\355\004\271=\314=\255=aYQ@\002\310\032>rK\r>\017\226\201?r,?9\237\204)>\351\256\212\301-G\\?`\010\010?\177\026\352>\2135\312>w_q>\021\206\032>\302\nY>C-\316\275/\266)>J:\352=\373;J\276\327GV\275z\034\252:\247\325=:\256Ks:\013W\252:A\3109:a\205\201;\304N\230;\251\373`:\376\217\377:\016\202\032:\202]\237:K\271.;\205\024\002;\365\352A<\233\233\312<fDB=(\277\n<\255\0161<G\207*>\314\016<8\214x\206<\307\370\372>a\233a>\036\236\222>\202\262j>\350}\207>x\215F>\300i>>m( >\037MC><g\032>\270\026\002>\325\213L>F~&>\343\261\210:\304 \033:\004Q8:K\317\271:\026}H:\271\020X;6K\227;\307P\022:\177\373\310:h\226\3539\206\351z:\232(\367:\342[\200:\000\000\026C\374s\020=\224\362\250=L\340O@\254)\320=\010\034\004>\360\242\232>Vm\2739\303/\206=vc\210\301>q\306?\344\r\237>[\234\376>4\010F\275\027\347\335>\313\025\331;\225\023\207=+0,=#\361\250>\242\220\213=\274\030\264=\254\265\304\274dj\220:k\323\007;\354{\022;\356\223\030;\372\304\005;\331s\321:\036\276\000<\310\245\203:\006\245\266:\266\254\227:\332\031\265:\005II;\333\212F;\234\322\316;\220\177\021<\254\337\332<\211\010\001<\004n\337;\242\333\224=\377e\0039\222\347C<\251gK>d@(>wK\000>\275\317\352=\320f\301=\204\310\374=\341\225\360=:Q\016>\031B\000>\347\202\002>\306(\010>f\332\320=\355\326\264=Q\2057:#\003#;~\031\271:\361\010\377:NG\237:^\364\222:d\247P<\331\2628:#^\245:\273\216E:\250\240;:\304\377\210;}\203H;\000\000\360B@\355\020=\340\335\275<\274\237F@t\000\331=\200\021\001>\033H\326>v\004I:\251V\255=\337\232\233\301/\221\245?Ph\325\274\213\311\225>\314`\003>:\376\206>\250c\340=/O\225>\254\255\263>\353\260\224>\312\300M=\013\342R>+\245X>\343\357\2029\304y\3019\365\337\010<\373\366J;\341\257\2449\233A\205:\212L%:\201\016\3209\246\277\274:-\253\3469\271\203\224:\232\016\215:\243dT;\234F\241;\360=\000<O\365$>g),<\001p\r<\366@O>\243\246\2059\304\200\301<\205\336\027?\030\317\342>\201.V>C\205(>\\rh>Uwj>\375\212~>>\200\223>\330\255\243>i,\234>\031\365\307>\024\324i>\006\337^>\211\215f9\307\225*:\270|\345<\036p\325;\254\377\2179D\352\010;\004\0053:[\304\3279\035\0037;\r\300\2669\025F\022;\'O\032;[(\374;\267m+C\000x\227=G\351\305<\205\rG@\350\241\032>/c&>\000\240*?\341PW9C\336\335=\310\346\222\301\355\220\264?\314R\023<\274q\371>h,+>\234`\211>\035\315\272=r!\204=O\361\205=\351\r\">\236\034h=\354\242\222<\316p\206\275o#t:@\203\206:|\235\213;=\207\007;\273\222n;\331*\030;\304\263\322:\337\231*;\263&:;\247>\235;*\304\253:\372m\234:\265\251\033;\211\371\177<`k\275;F-\316=\252\310\220<\326[W<\0073A>\252.i8CH\030=A\346\341>j\013\240>\177g\242>\365\264$>\277^B>\272S\016>\300\374L>\360aH>\273\237G>\246\303\200>\305\013J>\260\3220>Y\\4>\026\254U:\300\221O:j\224\207;\"\026\310:t\006R;\013\240\024;E\004\254:\374>\347:\375 \025;p^\233;\3070H:\306NI:M\261\223:\267m+C|d\212=\362\245\'=M\227M@r\207\014>\230T\033>t\360\030?\350\200\2029\001\242\315=\0301\217\301\006A\207?\357\253s\274\237\224\265>\264\201\023>\252\336_>\212\353\241>\245\3251>\335`\362=\252\270Y<\342\227\254\274P/`\275\311\271\253=\034\300\315:^N\022:Q\200\024;\036E\354:\252e\270:\312\'\356:\017\035_:\202T\243:\367\204Y:\215\370\234:\014\256\206:\033>\036:\370\254\273:\260\320+<\335\330\325;t\372==\334n7<x\361\001<H\2468>\'\342\2758\300\246\266<[9V>\363\262\225>\016\300^>5p\227>\270!\244>\232\0247>B\363^>h\303^>?%_>\207\256H>B\234K>3\361\036>\260\026\001>\362fN;\206\031\3379\255\271\363:y\3153;\224[\254:\311\301k;\215\213\262:\364\214r:\037\356 :j2\215:\355\213f:\217\237\3579\313\231\226:UU\005C\272\217|=Ty(=9\367D@\246gM>\227-F>[\306\025?\336Q\2309\201n\331=\360\367\227\301/\232\332?%e\366>\204\000W?\341\372!\276\3003\311=y\221\361\275O\351\205\276\343\216#\276\024p\253\276a\224\372\275\342Vc\275\013\270\361\275\355\0006:\257\267\245:;;\265:\260\311\301:T\231k:\236\rC:@\362\016:\025\267\202:\033\010\016:f\001\311:)\035\212:\257k\030:\0214[:j\321k<\037*\360;\302`\022>\332\004\000=\275\212\233<f\230P>>\304\3528?\253/=\013\334\257>E\301\214>\003\210\035>\303\260\304=\032\202\010>\023?\322=\372\205\323=\357X\305=\265\027\312=\232\331\323=n\314\325=\376\336\005>\017\366\001>\271\301\005:b\002I:-\352\267:gr\000;\r\274\3649\374r\2779\224\344\2139\322\242S:B\364\3129\270w\274:\353\257\206:\033u\3649nb\3729\267m+C>\256F=C[\215<V\0271@\201$<>\371\367M>l\273\302>\003dN: \005n=\220z\254\301m/\005@\307\254b?\201\362\010?I\003\312=\363\261d>6W!>\272\377\006>I\263\026\273k]\214\275@\020#\274iq\220<b\245[\273,\215>:t~\215:\263\362\354:72\020;\340EK:\324,\350:\371h\314:(\343\265:\212+\275:{\325j:l\246e:KE?:|\317\274:\0134\226<\272\306\341;U\343\251>`0\'=\231M\233<8\262s>c\016\3129\234d\217=\222\006\256?^5\033?\335\374\374>Xs\217>d~_>\253~|>\005\031\221>\367\002\217>d\310e>\330y\217>\324\312x>I\236\215>\235\355o>\217\361\200:\272\221\t;/\276\";(u7;m\0358:**k;q\200\306:\355Z\001;\224\326\327:1q%:\003\005B:\343=\232:l\233\220:\000\000\026CP\316\214=w\007\241<\377\3714@\032\215(>\242\3466>\276\216\315>\333\315\25792\231\223=[R\242\301\035[\367?00\361\276\317\207\232>t\265\'>WU$?\344\302\237>\026\251\023\276\205\346\345=\310T\022>G\215\n>\270\274\314<K\314\244\276\247!X:\227\004\":\262u\207:k\017\201:\254\177\240:\020\3466:\250\264\030;\231=\303:\017g_;\333\360\254:\372\200u:\344\255+:$\022\271:\030\233\032=Zb\276;\014\267e>\3414\266<\246\227Z<QjU>\006~\0179\217YW=\206\2528?\201\240\266>j\274\253>\240hV>\242E->,\276\032>\234\211\001>\236L$>\336\364\024>\254\334!>\2177!>\306\344\367=\016\243\021>\3661\3729\311\364\3549\262\365+:\265\364\t:\273\277*:mX\2029n\232\024;;Z\020;\370k\214;\273&\010;\323\205\234:7\365\021:\211\337\225:\000\000HC\333f\277=]U\246=\305\363S@\216{4>}**>T\317z?\236\027\0359\217\010\031>0\341\207\301\266\245\200?H`\233>\264\337\323<,\234\226=7&\274>8\342\205\274MV\230>n\222\020\276\261\246]\276\2133\205\275E\352\235\274\231lH=\231\021\001:\037[\3729\252w\033;\215\'\031:&n\215:\365\233\":\250)L:r\212\033:\236\220$:\264\324\007;y\373\005:0\351s:\'\273\213:u\315W<i\241\221;FL\222;\352\366t<A\316\256;\242\r6>~\226=8g\2235=\245\0141>\232\316I>\216\2556>^\375\021>\232\2201>\373.\">\253M\002>\362`2>\275\306\003>\353]`>\213\233\031>\325\016\260=\207\353\030>\' \2779\001\227\2239\212\326\027;\2341\2679\376\373\226:b:\33192\2228:)s\3359M\013\002:[\223\357:l,\3449\332\374\243:E9\013:\000\000\026C\363\230\237=\350H\"=\017$J@0M\020>(\326\027>@\247A?(\266F9\371\256\010>\035\360\220\301\006\037\236?\'\344\"?\305fj>\035J\013?C\301\271>9#A>\035=\257\275\250q\222<\202\366K>\3402\362\273\036D\345:\330]t>-\r;:d`\3449\220\377o;\366\220};\375L\237:Q\357\017;\016\211\270:\267\273\277:\331\236\242:\370\004\202:\0219\254:%=\005:=t\320:\230\310\221;\354U\317;\255\305T=x\372\257;\\\266\270;d\244\212=\365HE8\025V\376;\376\024\002?c\227\317=\313\216\205>\215\200\311=\n\236\r>t\t\r>\241\3022>\302\345\022>Iy\016>XV\330=\210\210\317=\335\345\241=U\017\345=\335S\3449\342\010\2209J|:;`\301L;)\tX:\200]\372:\240\330\216:r9b:\374\3774:y\323+:\313A\210:\025\344\t:)kO:\000\000\360B\323\215\233=\205\022\214=\362,R@\260|\024>\231\235\027>\216\246*?\267z\2519\230f\342=Q\200\213\301\206\316\251?\261\361\341>\244\230\341>\337\345\244<\024f0>DJ\360\274\337\331q>\217\353\312=\267\373\321\275\245\327\226\275\367\353\214\275\007\372\226\275|\014O:oV5:\'\rm:\2741s;\351\312x;\300\236\016;\337\252\314:1Vj:\237\256}:BQ\333:\2714\016;7W\300:K\220\017;O\216D<\362\364\316;\300@\230<e\235r<\260c;<y\223\013>IE]9Sw\251<\027\265\336>\001RT>\276\352\200>M4\">\376\'\">\321j\003>d\313\036>\006B)>Xw4>\177@[>\241e\027>\000d\017>\240T\006>\257\222):\036\334\017:\252\262\3549\367\320\244;^\343\245;j\327\306:\373@\035;\216\025\233:\353\244\201:\303\206\017;\037Y\225;Y@w:\257r\332:\000\000\026C\031:\214=\273oE=\245\'G@@\3702>\004+.>?u)?\366\315\3249\236b\333=\337\177\231\301\255\271\300?p\002]>Y)\236\275\370\366\016?\346\266\357>\303\373\374=\325\277\031=\020\375\253=\035\262\010>\202\343H>\320\031\341\274\3518\244\275\302T\004:\272\327\2119,\"\232;\376\364\243:\217pg;\004Y\014:\332m\277:\210$\232:s\356\3119\331\277\3479r3\3139\202\214\2739\323\030\003;\262\025\320<\217\t\252<\211\304Q>?z\350<\264r\234<OW\230>M<N9\352\326\201=\355%7?\262\301\260>2\033\001?t\373i>}T\245>\252\250\251>\203\202\\>\302\204\025>Q\342\032>\"\253\005>\363J@>g\002e>~\3101>\306\350\3179\366\362\2009%F\324;?K\335:\214\220\304;\301\334\3279$\333\340:\373v\210:\252\252\2639T\236\3319+:\2419`\010\25392\026\006;UU\005C\234X\214=\331\274\210=G\232Q@]P9>+\211:>=\270\023?\016C\0369\226\237\263=\277\344\223\301\2734\216?.\252)?\342~R?\314\306\227=\030\262E>\223\323\247=\301G\336<v\274\351=Wf\211>+Z\327=\354?1\275*iB<\251\265\2249\324Z,:\n\310\375:\036\317\243:MO\020:dyY:&\361\020;\370-\334:t\367\3779\250d=:\0109\035:\365\200\30591\\\177:)\022\210;\356\027s;B\366\250<\350Y\224;\374\200/;\346\005\016=\344\240\2238(\354\234;\312Z\021>c\326\003>r\033\223=\010-\261=Y\223\237=\0059\215=\241\271Y=0\333\217=\\\216\257=\307\342\235=78\256=\250*\203=\004\265p=\363\366#9\025\021\000:)Q\302:\371qX:\244\330\013:d\321\003:<N\025;<\257\262:Z\236\2729\243\214\3419\251\351\2249\367\235e9\035H\t:UU\005Cp\224v=\307\234z=E(Q@\365w\005>`\034\021>\3549\033?\244_\2079\024F\327=mL\214\301\356l\273?\250\221%?0\262h>\317]T>\302\354\260>E\274\230;\366\301\022=T\350\304<X&J>\031\'\360<)!R\275\375\030#\276\261\301f:;7\3219Q6 ;\027\351\037;\305\2124;}i\274:\277\226\337:\256\010\320:\344\331):L\n\312:\205\r\214:5\322,:\3106\321:e\302\337;q\250\344;\355$\372<\317\262\362;\246\t\317;\376?\237=*P\3018\333/h<\322X\327=\"\021\303=\275\234\232=l\354\263=\226\227\235=&\236\237=\265\242\205=|\r>=O\024W=\333\264)=\275\325Z=S<m=Z\333{=\r\273\215:l\362\2269\322\363R;8\347\374:\317\3017;*s\303:\210\316\230:\203\034\002;\2362\3179\352\342\300:\241\031v:r\241\3709\322\033R:\000\000HC\374{\232=Z\365E=\3437O@\034H$>\3218+>%\3648?$Zn9\305\003\003>e\261\217\301K\254\316?\257\340\033?\373\r\204>\340\216Z>\177\224\244>v+&=\344\371\005<)\311P<\264\217\347\275\324*\224\275U\005\245\275j\371\206\274\277\004n;qE\255:\375\177o;ca\022;\361?\325:\224\320j;\276x\023;Do@;-\203\222:R!\276:\262l%;Z7\217:\267\350%;!p\216<\364\303\027<\200\317&=\257\363\267<A\243-<(@H>8\315x8\036\273I=\242\333\253>\245\233c>)_\200>,0+>|s\013>\376\021\030>\237m\005>\375H9>\205E\035>M=\022>\232\0024>\366\310<>\321\034\">\221\300n;\220\211s:\306\334p;\332\320.;\213\374\266:1\205`;\254\256\026;\335~w;\226Bw:\220?\345:~\306\252;od\223:\233O\307:UU\005C\020_Q=\t\013w=(zM@\302F\341=\354{\000>\224_\377>\2103\026:\017\255\262=H\030\217\301<%\275?\356t\250:K\\\032;\250\206A;\022\336\203=\332\020->\350\360\213\276\271e\311\275\276\1774\273\\\201\007\275\205\331\362\275\351\266K\274\375\302&:B\247\217:\362_~;KlZ:,m\321:\211\353\346:~n\254;I\242\032;:+\036;,\203\216:)\r\207:\331\236\225:\014\300+;3!\215<GI\202<\203\220\270=q\200\224<\016\330s<\232\247\206>0\306\2149\361\0102=\274\3749?&\326S?\2434\032?\273e\223>h\207\260>rR\220>\251\373~>R\232m>\017\332Q>\003=\206>a\026\206>\320\034q>ooD>%\331\215:|\256\245:\\\022\273;v\357}:\267p\352:\377\201A;2\273\315;\" W;\325\244\277;\345x\222:\264\344\022;\025\376\263:\2216\016;\000\000HC\214\353\200=7u\263<\026-8@P-\037>\336\024+>Q/\354>\3223>:\247R\222=\377x\242\301!\023\331?\330\303\245\276R|\273=\364\010\315;^\314K=\367u\275\275\304\233\177=3\204\366>#\204\'>\222\313\223<\371\036\207>\367\335\375=\362f+;v\'\007;\302\347}:\334\000\333:\330U+:\215\207\2169\340XM;\004\2661:\345Mh;\031/\206:\236$\234:\204\255\364:gh3;\234\252q<\271\264c<r\346h>\237s\265<\227\332\244<\010\242c>M\344\2049\234\017\032=\276e\265?\004\001B?\000b\253>\031`>>\250h\203>Y\247[>\220\211\256>n7\004?\033\210\367>\005\306\341>\370\364\323>\364\235\221>\261)\\>r\371\311;\231\033`;\376\030\323:\235^-;\026\306^:S\216\2329f\357\355;\357\301k:\001\336\216;\370z\363:7\005\271:\351\033(;\373\352\r;\000\000\026Cs\211\231=\253\014\350=E\307O@R\366.>\310\3606>\3315.?\357\024,9\347\030\326=\032\267\201\301\351F\321?=D\346\275\026\027\231>\306\037%=\242?\256>\246\377G=\016\035\304\275\033\330{\275\231\276\027>3\245\'=&\333\321\273\301}c\275u\341\244:\037H&:sF\350:\265F\310:~M\353:\273\0049;\"\272\266:\267\005\200:C\221\357:\003z\334:o2;;\026I\247:]\254\245:7\'\026<F?\311<b\215\355=\360\356\032<\312-_;\247\333\010>\215Ss8\366y\357<\315\356l>7lO>`l\004>\230\025\351=\020\264\031>\272\231\306=q\261\305=h8\341=:\256\244=>\366\t>\364I\342=\262{\267=\235\007\010>\006\205x:k\201\2309\373\036\227:p\353\226:9\010\243:2\273\334:m\307\216:\254v#:\346X\362:^Q\213:\t\227%;ysu:\264Z\030:\267m+C^\357X=\317\335\377<\235\020H@\234\326\003>\\\352 >\233\035\260>\035\237\3679\233\200\207=\217\353\224\301qZ\324?M\305>\276\372\303\315>\n\247\201>\206\017Z>\220\365\335<\226\212\275\274\300_\377=\307\217\007\274\013\331\311=,w\2379\201\032\356\275?\241\254:A\307O:\214\330\254;3\271\206:\344z\345:S\271\233:\250x\201:\005n\000;+]\213:+T\330:\023\261@:\206\3344:\241\035\363:\327\3076<\347M\030<\303\035\033>iKQ<q\256A<\211\013\025>\341W}9{\026\262<9\302(?\360y\263>\232\325\271>{\307\230>]\256f>\304\356)>\346\250#>\357\347\204>f\355\230>\032\253\201>#\213\203>\371\236>>\325~A>j\200\370:\343\220K:f\272\274;\32555:@\234\017;\350C\225:\333pu:\\\254\t;\374\3704:`\007\315:\307q\001:\014\335\3779\"\003\265:\267m+C\033\350\221=\215\366g<:\363H@u\214\032>|j&>!f ?\2562\2239\021J\347=0r\234\301\036\326\243?M\316:>UB\214>\025\275\316\274k [<\024\001\007\276\346\263\025>BE\004\276\200\n\235\275\177\305\270>\257\252\272>_\3416>v\214\3469\327\221K:\205\345\370:r2\244:\357o\034;\02258;\036\257\341:\255\350t:\014\361\214:!\246\200:\355\177\257:\031>P:\261\203\262:_?\260<y\364\316;\376\316\301=\255\346\266<\302m\025<\005\230[>\371\242\3238\302\3378=v\020\033?\027\307\200>\233<u>k\000\004>\345@<>g\275$>\370J\022>\021\226<>&\300\203>\013J\213>5\2011>\211XP>Rl/>}\335\2169\203\227\004:\202{);\265\346\261:\200r7;O`P;\3208\317:\010qT:JX\271:\005\312\\:\021=\177:1`#:\210\264\205:\000\000HC.\220\230=9\216\277=\203\346S@\241D(>\264\235%>U\230(?\351\321\2379\233\367\321=\006\301\212\301\2754\262?\305\342[=#\232w>\253>x>\010\214\037>\3166P=\314\007\313=QWE>\212\202:>@\225e\275\347\261\375\275\266\310\251\275\346~m:\251\020\034:\177\212\317:\021\364U:\336O\026:\305\022E:\342\"4:\336\252\254:5\004\034:\370\274@:\023\310\3519pSB:\2363=:\306+!<\373\257\013<S\005\252;y\353V<\306\023\360;u\200\352=O\004\3668\373l\337<\2319\326>\001\347\347=TiB>\0316/>\\\304%>$\317\346=\213y\032>HND>N\342,>J`7>\274\204f>7q\014>\346\2167>\026\346l:\305\213\000:\3018\002;\326\272\006:\016v\3369\003\265\021:8\3066:r\200\223:\250%\3719\241;\031:~\207\2439\025\352\227:;\315\003:\267m+C\272\265v=\300\t\305<m\255K@\0140\013>\342\264\023>:\236\355>)\204\3779\032w\212=\331\241\234\301\245\322\377?\332\236\257>\375\246\253>z_\205\274/\025d\275\031\210\312<\001_\252=\276\367\317=\363\313Z>\327\0044>M\330\237=9OF=tdZ:\014\007\r:\370Q\216;ak\r;{\252\266:a\305A;\235\320\201:0\322\276:\316\033I:\236\247\314:\302F\311:\244\264\002:\004\243\362:\311\333(<\306\340\327;+\264\245=!q\215<n\201&<);\024>\037\275\0149-=\361<\253\251\030?T\027\200>\t\335\300>X|\243>\331\206\205>J\037~>\331(\206>\274\203\202>\305T\234>\363fH>\206\306\217>\005\314W>3\231,>\0373Q:]\244|:\212\305\235;,\263\003;\375\356K:\351\003!;*ZB:[\264\251:!{\033:J4\000;\217\370L;\202\264\006:\311\317\243:\000\000\360B~;\250=\320\r\256=,\030S@\267[\001>\005\t\367=\254\240e?\323\216\\9\010\276\010>\227~\204\3010\371-?\316\"\210=\201il>\362\361\206>Oq!>\177\033\231\274\350%\206\275\364\241\364\275P\267@>\275~\263=\366c\257>\332\t3\276i?\177;\016C\t: n\361;\354\020\313:iI?:\023\315\351;mz2:b\037$<7\025\037:\260\033\337:\247Y\014;\257\363\276:\2076\206;>\312&<\272\206\353;\333\340\202<y!\201<\320\"\210<#\270\020>\353\246\2038\266\274L<\216@\222>\013\350\367=\014\275.>\326\355%>f\311\264=\006\037\373=g\322\367=5d\232=i\013\004>F\t&>\225\231\t>\265\212$>O2G>\200\260a;\270\307>:\303\333\002<\221>\032;_%\3629\356\034\354;\243\203\3269\275\354\270;\014\203\026:KS\253:\311*\002;\213[\243:\n\275!;UU\005C\220O\225=T\324\264=y\237Q@\333\351\013>\250\255\021>\357f<?\243\007g9\033t\373=Y\320\207\301l\247e?\nZ\324>X\037\312>\370\313a>,@\250>)V\312<\334\304$=3\013\204=\272\201\200=\227Z\t=\377\372\365=5\335\215=\333\253\216:\322\237P:\'\261\371:?S+;\266\021\241:\206(\032;)\362\262:A\2234;\260M\225:+\003\220:\216f\313:\300\344\\:\010\370\317:wVj<\247\363\032=\276\3554=\026\223\207<\024\372x<\340L2>\336\034\3578\202\030\306<\347\002\250?C\252N>\375\337_>|h >0q\035>\345\254H>\347l\004>\202\260\013>\3369m>\022\202m>:\305\351=\325\375P>Z\032\t>\'N~:\025\265\032:/\210\003;|\312K;t&|:\207.!;\226\350\370:\235\355\030;\305{\232:\3767\216:b(\000;\032\342-:\226\307Q:\267m+C\362\340\215=%\241\233=\263\004S@\031\252\023>\336T\036>\353B1?\372\272\2109b\221\335=U\301\206\301n\352\264?\3161&>\343\336K>\305\322\276>\321\332b<\261\0319>e=\026>\263\261]\275\256e\212=\216J\355<\027\305\275=\203w\351\275\206\221\337:l\217\204:mIC;Sh\335; \260o:tb\032;2\272\233:\355\330Q;\223\200\310:\331|\216:\313]Z;P`\347:q4O;\264w1<\325$ <\346\271\201<\\\315\225<\203y\227<\220\2724>A\301\2768\230\367\311<\nE\307>\255#\207>\026\336\253>\2744\004>A5\332=\260\370\335=\017]\304=!H\004>\331\200\017>\323~=>}\326(>2S\022>tb\030>\343{\335:\344\035\326:5\212\205;U\323\361;w\";:\277:$;\207\036\236:\351\311\376;\375\010x;\346\275i:\351\364K;u~\377:\200\250\036;\000\000\026C\246\253\251=7\304\307=\310\364D@\007_)>\256!9>\265A\003?;%B9*\336\234=\236\'\214\301[s\322?\035\276+?\014k\t?#\245!>J\242\336>\372\305W=\373V\364\275\313\210\352=\353\325\334=?J8>F\336\217=\001U\322\274\213@\020:\220\264\310:\"\375\242;\233\372\014;\017\222%;\212\315\303:~Fd:j8C;\000\326\024;2\0265;\364\256\252:r\177\3209{\354\r;\032\310\200<k\203O<\312\021\214=\335x\022<6C\241;OU\014>\220\202u8\372\345\t=\267P\227>\352\273;>\034\265\025>a\304/>m|&>\236\246\203>\005j\022>\260\335\\>-\354\024>\r\\\372=H\253\025>&\224\033>^\236\031>\304%\031:\257\215\013;M\244\201;\"r\344::&\310:v\010\225:B\237\202:\334\300A;\332\204\027;\006\357i;#7\256:\233\375\2019\371\213\213:UU\005C\323\257\220=\242\255\022=W\260M@\275\225\r>v.\031>Y\253;?\315c\2329Hs\347=u{\215\301;\334\205?Q\272V>\2533\317={\210\302\276Rx~>\274\266\010\276\222\366\017>V`\224\276Lo\020\276P\260\\\274\270\216.=\255,>\275!\\\301:bQ\330:;\360\240;\202\227\275:o\250\205;w\342\323:\347\t*<:\355\377:\013\016\220;\023Yj;\2060\266:\'!\022;\301\244\202;f*F<,\365\310;\000j\302=\253k@<\007r\020<\322\300\\>\242\313\0279\343\366\237<Do\240>4*q>\\\025h>\201\023)>\312\365>>\375-\036>\350NH>\265\230\003>\257Io>\006\342\004>\002a\034>\"\000%>1>\023>\014\216\246:\375\010\205:\270\332[;\245\333\203:\227\3073<\272?\354:\256\250]<\325\341\301:\345\231|;\237\323\032;\025\343[:\025\321\036;\373\372\204;UU\005C \222\177=X\027\002=\326\220P@\246\'\023>f\223$>\016\221\373>\322\370\2449v\377\244=t\273\225\301\357\226\360?\345!m>\2238\313>\325\302\335>\335\240\332>\250\002\341\275a]\376\275\253\244X\275\205\223$>\224\216\346\275\305]5\276\2357\004\276W(\037;G\rQ:\027\037\323;\005\354.<\320\r\324:\033\314\206;!m\272:\227\374c;sY#;:\320\020;\260L\320;$\206\244;\252\212\305;\361\236\034<TD\272;\201\032\035=(OP<\363_Q<l\347\024>\332\024\3128Wz\024=hl\331>s\217\336>\251g\230>\216\254g>\221\342X>\2110\002>g\224\003>\037\256\337=\344S\330=\277J\013>Yn\356=\032\030\016>\000\321\326=o\025S;#\016\t:\201\367\000<\336\276\347<e\022\353:\367\277\276;\230y\213:\351\3623;\r\276\026;W\375\340:\032<\317;\036\372\251;\032\022\343;UU\005CvK\002=\346\347\245<e\325A@\372R\301=T\247\376=\027\332]>\016\247\262:\307\217O=>\365\240\301ww\362?\264R\234>\326\027\306<~9q\276\031\232\004>u\365_;0\3559>\034\210\302\275\376q\204\275\216\310R<\206\246\2118B\374J=4xb::\242\013;Y\312\336:\017\010r;\202\372\013;\\\216\263:\010\332\021;\364\216\';uqr;\r\370~:6V\233:sS\322:\265\374E;Q!\030<\"\235\014<\311\0269>\024Q\232<\300\347\213<\364\314\312=\303\362-:j\236\276<\367\234\260?C\004\277>@\352\032?+aU>\235\204\253>\333\202\217>=\021\251>\357\226t>\250oi>\3730:>D1d>@#8>\213\376R>\274/I:\013\037h;\302\245\027;nc\014<)\372\205;s\266\033;O\265O;\207\305\275;\032Y\270;\356\276\244:\242x\004;?\034D;\271j);\000\000HC\205\247~=\261\007p=eFM@cR\r>n\027#>\235\354\031?\031\037\2459\277\246\305=\013R\214\301\327\004\321?.V\307>D\365\027>\202\202<<^\260C\273n|\363=\302\356\301=\331\260\252=\327.!;\244x\201\275\355\324b=X\210\372\274G\367A;\277L\215:8d\005;X\261P;\323{\314:\007m\241:\264<~:`s/:z\233\272:I~B:\370\361\317:\004\231\016;\275\203\300:\231ka<A\321\003<q\024\232=`f\203<.\310y<gF^>x3\0149CD,=\201f\273>\354.\n?=Q\224>\010;?>\253v\211>\305\344\014>q0!>3\246=>\203\372\010>\014\0039>+\004\033>\274[\034>\354\022\341=L\340|;\227y\240:\3425\032;/F\217;!\027\303:(\213M:\307\374}:`\310\010:\213\246\250:S\270,:\371\233\345:\324~\014;\264I\257:\000\000\360B\334;\244==R\217=m\373O@\372\303+>\342N(>X\255C?\271\300V9\036\241\020>\002\252\212\301\020\023\254?\2303\226\276\r\327\252>}\366\222=7;5>\271\307\211>\331[\034>A5N>\220*3>\214\334\266=\323\337\317=\330\202\026>Pf\3029\226\240\025:z\034\217;|\257\245:;\205<;\314\017.:3\\\3649\014\017\3619\301i?:}\246\271:\r\261\251:\253\311\":\033\364\322:\212\177\214<\302\010L<\354\036Z=\272\361+<Q\354\003<\26569>\265\307\2278\264\352]=\2535\362>\372\231A>%\260E>\005)6>\036m\315=Tx^>\322\037>>\343\306\325=\255ad>v(\017>\357\301\362=?\226\034>\323\t\033>p$P9sg\2069J(\227;\346h@:M\235\032;u\037\3679\250\266\2279o\001\2009\266\325\212:\320\250\247:\252\332\233:]\227\2439\277\261\217:\000\000\360B:$8= \037\356<O\275E@\374\340\033>\320\0138>\277)\225>\026t\3639\200\036\366<\203p\236\301\347N*@\313\267\337>\373u\256>n\222\270>\207y{>\220\357\337<\243\273\022\275\001\021I\275m\272\025\275\225\340\005>Xt\r<\332\007\332<\223\t\233:9\201\031:He=;\262\3008;$\236\350:\027\220\035;\326\264\336:4\030\347:\361\212\013;\177>\006;\241\243\';\\\025\227:c\023\362:\350\215~<\335g\002<\347\366\025>\375\235\311<\245\262N<\274\203\363=\272\270\0339h\2079<u\013\034?\346\026|>\177s\344>\334\356\255>1u.>}\202\007>\002\t8>j\232G>sq\204>`\3321>\216\327+>YLb>\002\313F>o\306\377:\364\021Y:\310\310\227;!\334\013;M\265\317:\263\324F;\016*\315:pR\213:\314\304\262:\273\026\326:\264)\006;\360c\225:A\226\220:\212\235\270B\351] =\374\213x=1\000F@E\367\311=\274\n\025>C\326\200>\307]\375:k\364F=\314\036\236\301\322\372\022@\275\017\250>\003\366\272>\341\265g\274\341wc>\355\343E>x\005\362>\340\345h>\014\234a=W\332\304<\216\311j>\022}\332<\001]\034:\353+\2359\224\331);w\231\330:\034QW:s\006\007:\214\005\034:\341\233\315:\317i.;\241\210\345:\226\272\3219\225\340\3129\334\343\327:\330Zz<J\317\334<\370 :>\333\205.<\336Dt<\'\312+>\2667\207:\375L\370<\204\321\215?\263\245!?\3272\251>\344\305`>\314\330\320>k\272\251>$\235\336> \257\262>\313y\260>lt\277>\256)\325>\272\004\236>\243wL>d\2176:(U\2139?p^;:$`;\342\272\300:\272\234\027:(eg:\242\271F;P\242\244;\333\352\205;.\341\014:\351\232\3009\362N\363:\000\000HC\211,\266= %*=\265\tM@\230\353A>-AB>D\2463?,\314\2209\350\261\357=\270D\223\301\235\353\331?\312I\274>C\341\250=\020\325$\274f\245\216>\205\210\230\276%\263\231=\201Tm>/B\010\276\2438{=\245>\372\275\032\035\375=l\304e;\355\276`;`\212\245:D\"\245;\311\367/;\200\325\200;5\266\020;\033\200\306:\265m\261;+F\312:jL\234;S\021f:\312\202\203;g#\232<N~K<\3334\224=\216\"\221<]A#<\n2U>~S\3138]F\212=^\353/?\343\342\264>\354\357\346>\350\323\226>\366\233h>\246\202\212>\254\t\337>\340\026\203>:\254\210>A;\300>\360m\244>\216\232v>\223\320Z>\314\324f;$\276\233;N\216-:q:\311;e7g;\361\304\212;\222\034\236;!\255/;\272&\363;G\033\266:\304\200\353;\204\314k:\034\242\025;\267m+C\265`Y=YJ\365<\023\263K@M\241\n>\323\005&>\263:\356>\256\022\014:\303 \254=\244\204\226\301\244\370\251?4\325\207\276\3125\217>\325i\324\274\320E\300=\364\275\333\275\255\376\216=\361\251W\276q\243\210\276j\005h\276\025bX=\3622\310=$_X:\007\211l:!\302\014;\377\325\257:3\354\203:y\243\235:\317\256V:mN/:\361\027\025:\007\377\220:\330$7:e\275\227:\250.\222:\010\013\210<H\345\'<\277\332\305=\375~\234<.b\201<\021\303\\>\366\365\2139!\"\000=\004\340\221?Dk\375>>\331\323>\257\026\321>_\222\231>\324\266|>\007;l>\007\r\236>\334\254\235>\343\237\243>\305\342\240>\200A\241>E2x>\256\356C:e\237r:M\244H;!\'\027;\247\346k:(\207\227:\331\362\216:|\315n:%\223\007:\322b\245:\035\016\035:8i\271:\007\032e:\000\000HC\030\324\254=\234}\024=\305\027M@#\2028>\316K0>\334Wl?:\01649\370\010#>9\223\220\3017y\253?\376C\014?\227\200\257>w\320E>\006\306\314>V\016\250=\001\026`=\300j\362\2732\222\317<\371\325\255\275\031\372\213\275\3621p\276b\221\215:\220*Z:\013H\014;\2720\231;\2518\210:\006\210\216:Y\305\\;\005\324\232;92\373:\377\377\255;\n\244\';X\327\353:\230\3119;\273\235\201<\317\212\264;\321\003\252=\312\313\220<\036\246\023<x\274/>H\232N8,\241L=\277\010\263>\305\237I>\376e\240>D\251W>\334\006H>V\226\347=\250#!>\"\006\023>\032\312\n>rk\324=\302\252\310=\236\256\322=4\241\006>~\200\234:\232\330\014:`\\\037;>\336\305;\235\240O:\374\327s:\037\327~;\244\220\211;o\227\030;U&@;ts\030;\206\023\334:\243\370\303:UU\005C\370\356\242=\322\304\240=y*K@\205\224,>\010\027:>\033_\035?Z-\2059d\341\302=<\206\210\301hb\302?\377\024G\276X\257\232>\017\312@>\244\325\203>6\301k=\276k\006\275I\r\000=}a\006\276\265\036\007\276\024\323\247\275\006E?\276\n\320~:\237\346\325:\237\326\322:v7\236:\024\300\206:\2555\265:\030\342T:C\210\t:\374!\201:\202\2551;\024\177H;\313].;}v\251:s\036l<\220&j<Z\237\262=\021\\d<\001t <\370\335,>N\274\2068\231\030\365<\260U\r?\371\310\306>\031N\273>Z\346C>\234\302\005>--@><\223h>\325\276\'>\341\017 >W\n\177>\260\007X>i\316!>\214B(>\3336\3429x\330\366:\027\222p:\343\326\221:\377\250B:\357\232\201:\360\010\022:\244\271\2309\206:n:\334\313\352:$Z\000;P\205\334:K]\022:UU\005C\357\024\030=\377\216v<\271KF@\007`\360=:?\027>\376\325V>8\246\243:l\211E=\233X\245\301\260s\376?\\\021\247\275\341g\214>f8B<\226-\247>\364\231\001> \006=>,#\037<+>>=\231\250\260=\313hn\275\366e\263\275R\034\3159\216\036F:\332\203g:\'/8:\321\262u:\270\311\023:\224\035(;\'\236\007:\365\370Q:\312\304\020:^2N:\205dX;\006\215\274:K\3758<\000\230\304;\250\027)>\022\314\274<\261b?<\233\353\006>z\277[:8\364\266<a\210\224?\337&\303>v\3549?\265\252\206>`\014\377>\320\337\273>\216}b>\367-\216>\030\006\241>\265\024g>\025|\236>\223)\256>\240\221{>`Y\3279{(P:\302[\272:S\rX:r\372\231:\266w,:\311n\220;\\\035\035:\323\362\262:\246\007\005:b\246\256:Y\020\272;6d\341:UU\005CI\246B=\'\270y=<\357M@\344=\007>\210\\->-\367\242>\216\\\2779(\206\211=Ik\214\301\337p\344?_\231k=\232\230\321>\253T\244\275)m\313>T\356\342=t\316\260\274\023\370%>\343\262\211=\320,Q\275\202r\r>\301\010\364<\215\251b:d\301\367:H\007\304:\014\275\360;\367\013l;\353Q\231;\221\022&:\227!\325:\307\3661;\341*\323:\370~\262;0\222g:\237Dd;]\234\014<\276\306\032<x\347h=\024\314b<\'\341c<\024+\237=Ts\0009\307\276|<\353\315\203>(S\235>\347\231\207>\330\035d>\304\372\234>\334\226M>\237\006W>\021\006\203>i\026\203>x\330~>7\207d>Fu8>TI&>\205\223>:f\377\020;\031\212\202:\203\211S<R0\217;\247\307d;D \3129~M\266:U\231*;\227\035\312:\375\300\213;\024QH:\265\320Q;\000\000\360B\257`V=e0\321<\247\024E@\373\200\373=p\306\010>\345\005\n?!j\020:\376\270\320=]\023\231\301\371D\276?\315\001\352\275\305\363\037?*\252\225>\226\311\353=\275\311\203\275<s\201\276\250\324\257\274\376\277\267;\223kP=!Y\177=\035\025\274\275\357\304\207:d\026A:K\005U:f\327\312:@\343\257:;\334\254:j}\271:\017\327\361:g*F;$^\017;\2175\210:\001Mo:\374\244\307:\244\306b<\363\317-<]\007U>\277\212\227<\367(L<\2708\203>\237\035\2539\354Ul=\212~\211?\260\340\351>\212#\026?\215v\234>{\241\245>Z\306b>\262|n>\371\177\232>\334\264\216>\261\'l>\037I\206>\323\243M>\177X+>\362\250\356:\361\361\r:\302#L:U\317\241:\263\227\253:\257\245*;\031\360\260:\357i\352:\247\3054;\020\351\r;rl\242:5\256?:\r\005N:\000\000\026CjH\223=\231w%=WL.@\n\3130>\346uR>i\\\200>6\342\001:\007\177\214<\302\001\241\301\007\317!@\336\337.?\026\234\314>yh\177>\034;\000?\227x\267>V\032\351=\221\261(=\350\302,\275\244!\333<\023c\235\274G\002\030>?\025\022:\314j\205:\320\0022;\266\3042;\314\001P;*9\001;\233\325\232:\205\377\025:M\231\215:\356\276,:\237\335):\"\372\\:HE\252:Xs\001=W\225\014<I\002y>U\254\261<B@A<\262\307\274=T\366G9I\363\352;\243\316\230?K5P?\353\002\001?y#\275>)\344\202>\006\352L>\n=F>H\320D>\213\027F>{\315\013>\005\235K>_\324=>\312\260l>\254\300\207:\360\"\247:4\301\017;V\330\340:gd\260:l\031m:\330Z2:V\022\3159%M5:\304\375\3329\246\017\013:\r!1:\252\313\005:\000\000HC\020\266\202=\243\347\265=V]P@Q\334#>\005\r+>@\363\017?\237\350\3439\270\343\242=t\224\213\301\326:\324?\374\337[>[2\345=\366\361`>\330x\203>\377\3351\275\230\036\226\275q6)\276j\277T>\265=\235=3@:>\356\314\246\274\211W\024:\2167\030:\035\267\231:\271\371\217;=$0:_oi;\245\301]:\233^\232;\032\271\002;\316\200\036:\200c\231:@\312\3639\177\210-;\363\007d<\340\251\266<*p~=y\305\240<\3447\030<O?\022>\221\364X90\324\r=I\256$?\004\224M>\241l\257>\003\023\206>\303\007n>\003\222D>p\230\201>\202\377\226>\000as>o\353\261>\203\256\221>\342\201\201>\007*`>\341\001\016:)\031\r:\211\375\262:6L\274;\033\340\':\322\344\262;[\2556:\351C\334;;n\016;\r\273`:\262y\305:\317\255\3459\002\276\010;\267m+C\262\230\262=\231\255\325=\342~S@\3252,>\225x*>m\030`?\372\221O9<\225\026>a\330\205\301\202\326\236?&\033\346>\325\035\231>\2248d>A\347\264>e\346G>\246\333\006\276\215h \276=;\224\272\300\005/\275f\3008=C(\265;\037v\270:\334\235_:p\242W;\370\2739;M\232\331;\214\207\030;\257O\317:\006\027I;7\327{:\271j\346:\035\331\231:\r\206\372:\336\rk;\247o5<\217o/<\232%a<\320$0<\026\215\357;bA\004>\232\265w8\3218\257<\247!\253>\335n\352=\214\300\243>\034T\n>\321(\031>\204\372\"> <\022>\303\014\377=L\3101>B\334\356=$VE>\230\032!>\240\325\'>\304\252\262:fv\026:K\347\375;\232\235&;\037\337F<\207\030\204;gB\357:\005\363\232;\001\2049:\221W#;x\002\242:\336\300\303:\211\363T;\000\000\360B \343\250=\303\325-=\342\221Q@X>\032>#I\032>\356\326q?\255/b9\370\260\022>.\034\220\301\217\323F?5\0260?\316\356\232>\315&\245>\256Y\326>\214\305\225>\204\200x>-\255\003\27606\244\2754\017\200\276Z\335\"\274\373\210\234=u\226k:\013\n\3179\202\001\232:\010\363\204:l>\212:\251t\207;\020V\r;\273\362\277;,\\^:w!\202:\201\307\243:\243(e:\362A ;\242\357\031<\333\002\321;\032\275\275<h\303V<\177\363e<m\260\352=\234\376\2068\037\004\220<\033\022\373>\002@\351=\265\334\326>\036Q\001>\234\n\023>\001\203\030>\301x\246=\223\021\370=i\242!>\310\317\014>\230\2745>\356HG>3q\036>\211j\027: \263\2249G\021\203:G\256\200:\022{\037:\2073\354;9\360\265:W$\301;\203\205\036:\235\375\025:\226r\216:\030\311\':\246\310\377:\000\000\026C\366]\247=4\253\002=\\\3519@Q71>\"x5>\022\335\"?5\242N9\214<\312=E_\230\301\373\257\251?AY\300>\260k\025?JI\303\273\334J\206>\215\203\310\275\233B\330>\276\302\212==\374\021<\216F\022>\250O\215>\367\333)>d\315\036:E\35459b\376\322:\344R\030;\224\227\260:9\362F:\033\375\t:aD\227:\200\241x92\200\2679Ov\254:\n\375\2719r\215\205:\222\326W<\237y\224;T\277)>\315\277H<\'E\017<\277S\272=6x\2168X$\251<Y\304\324>\226\240r>\000%2>_\304#>\352P\303=\305\341)>-\035?>Yf\262=s\030\367=e\270\025>q2\016>ZB)>p\334\026>\323W#:\020\362\3428Y\300\320:~z,;\323\266T:\004d\022:\257\177\2379\301Me:\014E\3078\252c\2279;\003\217:\233`\2319JS$:UU\005C\362\362\244=\365\274\244=\202\034O@\357\371?>R\273F>U01?\272\01639;\342\337=\025\300\214\301\325p\263?\025>.>%B\235>L\226\201>\271N,>\362\356\230=\366\314i>\007\3417\272\3357\206\275\354\037\024=\3007*>h5\005>\3659\360:\024\'(:\367\022\200;\362\223\014;oG\222:Z\230*;B\350\336:|\277\256:%\271\005: \242\233:\364\376\251:^\372\245:\266\213\353:\346\377\316<E\027!=\207\235j=\261\336m<#[,<i\265r>\005\240\2428N\275U=hW\330>\237\264\230>\223\356\207>\t\335\216>N\335\212>m\230W>\030\'f>\231g\257>s\367o>:\306\177>(\212\207>`pz>\030\331<>\341*\326:\325w\010:W\214\001;\235U\337:\301\002H:\224`\027;\315;\016;\364\365 ;\n\217\3119y\324[;\346b\370:H\254\005;\325\375\201:\000\000\026C\225*\204=\303\251\240=C_Q@\006$5>\3043G>\034\257\372>KuB9\t\217p=\241\244\213\301\223\226\371?\376\271\305=g\212\240>\342\256\202>\020\205\233>\367&I>/*\231=\225\304g<\232g\004>{C:\273a\275A=\337\266\n<\345\333]:4\036_:\375\302\034;\211\301\013;#\005\340:\325\217\343:)d\370:s\201\032;:\007\260:\376\243\256:\212\300\245:\307\033\031:v\322\257:\302\247\037<\365\022w<\372\210\004=Y\234\242<\345\311S<#\344\276=\265\225w8\334\332\227<J=\014?@\017<>\356*\244>\016\252\026>\2659\336=\270k\004>\340\252\315=s\021\347=\350\337\352=\331\021\013>\360\200\277=\241(\330=S9\311=\254\365\020:\270\0333:\336F\001;\322\007\267:a\330\336:dt\311:\204\032\004;c`>;\264\265\205:>\357\211:\360\207@:rr\3119K\247?:\000\000\360B\267\032\202=\247\004\204={\213J@8\314.>+\376:>\3371\356>E\016\27592\303\220=\\\303\221\301\303@\322?2\001/\275\204\271\016?\236\253\242>\334\334;>\366\004u\275\217\305\235<\034B\270>V\264T=\364\223\357=\241{V\276\263\232\037\276\244z\006:\"`\035:\2052\276:\334]\263:\216Ic:@\316\213:fj\006:\223 F:\303J\205:\020\311f;\244v\";\231[J:G^\242:\006\010n<e\377<<&\263\254=\177\242\252<qEI<\332\273\034>\351\024\0029\246\357\351<\337\274\032?\014\r\274>2j\267>\204\277\222>r\223\342=\243\\\035>\377\0325>\237BA>\016gQ>\343\004h>\242\201_>x\371\204>\313\235\006>\366\255\2249\355\252\3429\222p\325:yd\332:\325\355\007:\332HB:\356r\3019h\205J:\221\216#:\230N\016;~~\276:4\354\233:b\320\024:\212\235\270B\345(\254=C\364\013=\255\216M@\227s3>I\3036>\245\3539?\005G\0379\t\217\361=1=\222\301\2538\340?Q\331\362>\200j\314>\322\335\300>a]\034>(\310\014>\347T\177>`\222!>\363\003\2029\321K\315=6v\033>{\245\252\273\236\267\225:\021\320\305:wj\373;\260\017\363;\016W\212;\213I\242;\327\205\303;\t\373Z;Y\003$;\357\321\370:N0\347:\304M\227:F\261i;\370H\217<45\260;\242\366\204=\203\252\224<\233\374C<\202f->w\314\0318x\334A=mp\213>\025\351|>\243%\221>\000VP>0\316\n>\205^D>\002N\022>\211\363\035>\201\207/>\307\341\352=9\312\024>r\003\377=A\257\244=\267TP:=e\236:\014\016\307;r\317\312;\215\271\013;\010<);\252\027\237;\277\363\037;x\313\020;A\371\227:x\310j:\2531|:\007\343\307:\000\000pC\261\241\242=\212\253\320<\371\032F@\002b\017>\240@\t>\221\355K?x2\33395\326\010>\330k\232\301dS\005?\254\307\330\276\":\222>[-\333\275$\233\243=\272\253\342=m3-\273\033\226\326<V\034\351=p\315!>\nX\262=\321>p=\267\245!:\0146\3149\252\225`:\3341\3359\342j\006:\261\275z:\255\240\227:Mt\3439y^\3579\351\205F:\"\026t:\366\215\3129\262\220D:\320-\232<\0332\232<\270\303\r>\3577\262<\353tW<\227c\210>\344\337\2249]\351\031=\034\327\313? \313@?\024\"\254>3\333e>~\014\361=*\352\212>\352\234\236>_X\235>3&\222>M+\257>j\026p>\363@4>tn\017>\177iQ:\260\212+:\204\032m:\363}\3229\374\252\033:(9j:N\024\030;\334H\3339\372*\3129\\\225\336:\240D\311:yS\3579\220\3015:UU\005CT\203\201=\270A\227<,aF@\240\205L>\370\337Q>\275\033<?\343\"j9a\351\353=\016n\233\301\345\372\261?&b\240\276\325H\330>\375\340\204>3\004\260>\347\007\331>*TU><\255\247\274,(\351=\032\021@\2757\377\301=L\016\000\276\000^\3339y\204\204:\376i\227;i\341\372:\343\367@;\263\336\205:\342g\206;6\356P;\2222\242:O\335i:/\212s:\337+e:\345\332&;\213]}<\245%\200;U\365\361=\235Q\225<\342U9<\022\211$>\233=\2068#\'/=\205_\247>7\367\212>pj\240>\327\362L>&\362S>\267\023<>y\021U>I7$>T\335Q>C\001\225>)\347\226> @N>\335\021\220>\036\213K9\246c\257:\307\347j;F\207\355:\345dz;\033\320n:\245\027\313;\025\210\210;\360\354x:\321\363e:5\3451:\304\311#:\2407\313:\000\000\026C\003\364\223=\367\237\004>\021\274*@\356\330\034>\242\331/>\304\264\322>\020\026\2669\325\255\246=\246\331\211\301_k\342?H\261\267\275V\377\004?\"!\313>\345\026~>\374y\274=\253\035\307=\221\2257>T&\365<nX\003=\251\347P;\314D\356=\216\034\3459\233\277\213:\306%\337:\022:z;\t\333\366:\366\013\223:%\3705:\031\270\251:\227\217\253:\327#\013:C\222>:\023\334/:)}\247:PG\370<\216\365\r=\276\000\000?\004\231\027=d\314~<\231\321\212>\321\343%9S\203\226=\317\211\037?\277\005\311>\211\027\202>\327\260[>\315_1>\366Ax>\370j4>\023o$>;\034\037>\311\013\327=,\213J>\035\232/>\337\3401>3X\2029\303k\263:\210\010\214:X\205-;\\\207\t;c\001\016:\266\000\2769(\3138:I\216d:\315\304\2269\376\360\3239J\336\2369Jg/:\000\000\310B%zc=\232\360\374<f\005M@\373@\353=\200\330\010>\001)\351>\264\313\2409QP\255=K\032\217\301\201T\301?D3\350\275\006\356\212>:\023R\276\275\353\232=(}\350<l\355n=\262\365\027=\024\2548>\212L7=y4%<q\265\221\275E\001\335:\316\035\257:\276\201\031;Ab\305:\032\324$;\354}\316;\n\244\234;\241\033l;Cl\';@\025;;\317w\211;u*>;>vr;\321-\351;\202\216\322;\245\257\236=>\2634<\214\031\033<\302\301\003>\246\023\3518\t\220\211<\220\375\270>H\351R>\222\251z>\033\241G>\370\232Q>\354iN>\376\271\355=\354\301;>\365\331N>\307W1>yYV>v2\014>|\031\371=\373\021\006;|\305\260:\032\244\367:\276\215\211:\006\365h;0`^<\352\240\207;k8A;\027B\017;\253!\262;{6\216;\246\2438;[?[;\000\000pC\255\235\321<\372\202\\<fp?@}hz=\'\315\311=/\256i=Q\371\036;xf\023=\234\350\260\301\373\217/@\216\263\367\276%\313\001?j7\346\2763\256\220\276\033t|\276\033\002l\2744\335\232=\241g3>\300\002\212<\032f\366=\356i\025\276\375W\2539\034d\2469\022\233\000;\2420\215:\032\326X:\004\027\3519\270lN:\212S{:Md\013:\327\275\316:\301\252\255:MS\325:\375\212\300:\244\367\022<\244\264><w\345P>\277\357\310<T\204\313<`\002q=g\266\320:=&\177<,\016&@\342\247]?`\232\224>}\315y>\371LS>9\003z>\236(\212>r\277\233>\316\017\257>0>\264>\230\n[>\354\323u>\270i\222>\235y\2519\346y\2629\376$\277;k\0338;\014\"\270:\267+):\'\300\204:\321\\\225:q/\n:\r\233\223;mhF;<+\206;\206^\020;UU\005C\023\212\002=\037\314<=\222.P@JJ\344=\220 \034>\352\233T>\255\200\3309Dw\366<\020\355\220\301\362,\027@\312\363\323>\275\357!\274\023\324\234=$\257\216>~\016\314\275?\372\225\275\344g\216\276\372P\321\275J\2419=n\220\334\274\374\'J\273s\\\217:\004\365\214:\2122\316:$\304\234;\374%\320:\317\352\314;tj\273:>\t\276:\025i\351:;H\204;\330\262\346;\322\235\270:4lV;~|G;\363t\250;\366\217\n=\343\006\311;#\221\277;\265v:=\364j\0049nt\235;\324t\214>\360M\031>\300\246f>\264X\302=;\340\255=O\264\271=\206\254\347=\353\020\301=#D\324=\304\000\227=\331Q\337=:\033\274=\374\030\276=\230LP:/dE:n\201\226:\363\200\324;\354/l:\357\032\327;#q\304:bHf:\217\217\273:\202\375\';3\373\321;\360\th:\024\364\010;\000\000HC\341SE=%\2748=}\006I@6z\030>\267\0105>\256\266\241>\226s\2669\311\005\031=\301\240\227\301I\005\010@\270\205\203>\302\276\362>\016\226\007>\200\335\267>\017!\245=W;D>\203\256\313=\351\2179>\261\246\316<r\023\245=\031~\255=\312\030\002;\252\277\3479\366\035\216;\233\247E;\361\333\205:\203\354c;\233 =:Z\t[;\337\t\024:k<\222:\374\352C:WB\245:\247\205\026;\330\265\006<!\213\300;b\236\303=\255\321&<\216\302\326;`\300\345=C\243\0179~\027|<F\305\370>\262\237\220>\263\035\205>H\036\025>`6\022>\230\213<>\345\364K>+ef>\202@3>iz8>\206\025%>\223\314\334=\027_B>\370\255\017;\302\276\031:\215\351L;\312\016\004;Nu$:/\336n;\237<\r:#\337\235;Rx\005:\222p\305:\026\376\206:\242\302\007;\033\004\235:UU\005C\031\'{=\374\236m=\377\231Q@\376.\027>\223R%>S\305\010?\250[\3759\345U\277=\360X\220\301\335\035\334?/\013\355\275\346\324Q>;\\\271=\262.\014>\326\263E=WmN=)\246l\276\233\317\222\274\356m\221\275\037.\313=\002\277\020>\363>0:\010\321\2649\261Q\334:y\0341;o\266C:\224\356c:\267\245Q:P\304i:\345\005j:\031\305\000;\273\346\223:8\314a:\234\254\226:\222\236\250<\251\375\207<\027}K=\027\314\302<\373<@<\310O~>.w\2529\247\000L=\002(|?\243*\203>\266\216\325>\274\300c>\330v\241>4\216C>\374>\223>\207\030\374=\0018\\>8\001j>\026[P>\023\324f>\n\232B>\217\r\205:\3133g9\354\273\264:\360\255;;\203\205\3439q\2202:Zo?:j \263:\311I|:\032\251\336:\317\010\210:n\362\212:\006\235<:\000\000\026C\247?\215=oAX=\037\334A@\344\377\026>\222\3400>\210\325\341>\273\245i9\342\213|=\024\230\222\301\267\237\307?\t\212&>vL\220>.\376d>\"\"\005?&=\221>\264\306M>RV}>\306\235Z=\362Z\361\275\241s\342<\240\021\345=\332\027\3649\034f%:\355Tp;\212~\032;\000\022\306:\244$\254;H\235\215:\nto:\302\251G:a\0278:\214\333\276:\304\035\007:;K\336:\352\217\t<\353\374\316;\247\333\223=\271\270\016<\253[/<\203\315\233=\335\216V8K\241\263<\341\334\257>\331\207\323>\010\243\243>S\300Q>z\274r>\235=\\>\320\276\026>\203T9>\177jZ>am\025>\025U<>\001\321!>\027\026G>\nU\2159N\235\3479\241\003\032;5\247\350:\275\334\210:\332\031\036;\';/:\261\231\014:\203Z\3749\350\371\3519#\353N:\023\310\2339\004\0253:\000\000HC\350\225f=\177\314\225=e\241Q@\303\264\010>2$!>\374\001\356>\027-\2169=T\222=\336\252\213\301\225z\360?\352H\215>D\374<>\330\034:>\013q\270>\312\177\005>\2208:\275\205\263\276\275\206O\221<\362\035o\2750\333\340<\217\323\032\276\252\013\013:\212\201@:x\227\007;Mh\364:\267\222\242;\257\"\030;Ke[;\370\275\031;\313\357\\:-\030\234:%\306\205;.X\230:Z\035\r;[\251m<\362\315\216<P\220/=z\236\t<\304\221:<\020\251#>\346\344\2658JU\353<;\255Y?\013\202\323>\220\0236>\305\013\021>\256\361\007>X3\001>\337\350\r>n6\360=\'1\346=\217\365\367=c\360\007>\026\242\024>\320Z\005>9\345\2629\025MG:\007O\250:\335\257\266:v\273\307;QL\324:6\251\030;`\311\366:8\323\":&\222@:`tI;\001\nS:\021u\271:\000\000\226CO\372C=;\002D<\351;<@sQ\301=\'\006\341=_\023\253>J\370\206:\264\366\210=5q\253\301\021B\326?\312\032\275\276\252\361P\276\3441\271\276c\177\215\276\322\216\355\275h\355\001>*B\277\273\003\343\241\275\216\200\023\276\331\242\027\275g\331(\276f\265%;\013i\322:|7@:<-\240:q\376w:\253\350\325:\274\030W;\230z\312:>U,;\243$\214:\226\314\345:g\321\004;\312\2265;\004-\236<\376\367N<B\305\246>\246\352\341<\327vK<\265\003\213>\2178\006:d\241\t=\257\025\332?\201\3232?\241t\034?\314\215\230>qn\213>e\361\207>\232\271\304>\245\r\310>\2570\252>8\n\221>\333\235\237>(]\264>\270\240}>\355\342\203;\360b$;\257\032k:J\312\365:\236\331\266:\361\305f;\'\374\346;=2\374:\357/\260;\260\316\010;\034S\177;\204\236_;\312u\014;\267m+C\323\005\307=\177B\323=^\203R@\313t*>;\224\034>\317\276\214?\225\324$9{+8>o\215\205\301\255N\203?\244\343\n?\247\026l>AwZ>\272\250\030>\026t\200>\321\266.>{t\320=\236\030u=b>\016\276\251\265\212\275\357bQ=.\r\230:\232\272\207:a[\334:\356\217B;v4\215:N\365!;\274\313\347:\332\223^:2V\326:\230Iu:\335\005\';\224\217\324:\340/\362:\301Wc<\272<B<\3505\355<\t\\4<\303\021\004<\372E\353=\240\303\20585\240\303<\225|\255>x^3>\331\212\361>\307My>s\2232>za#>\216\201\037>yd\001>\361W\016>BC\022>\0132\020>`\260\004>gD\343=\205L\217:\236\204a:\214Hw:s\022\207;\363\033B:\260\334n;A\357W;\000[w:sK\037;]7W:\003\302`;DK\236:9\322\273:\212\235\270B\322\236\225=\360{\270=\266]O@\366\037\'>\215\n1>\026\344\031?\276\335}9\221\272\312=\001\n\211\301\\\203\263?E>E\272\2658\217>\342~}>\243\332\'?\247%\235>\263d&>\305}\276=\244!!>\254I=\275\217\224\030=\206]Z\275\277\007\r;$\210*:t\334\204:d\311\007;ka\323:q\224\\;\363I\253:\331\355%;\373\266\277:\304&I:\232\007\320:2\'h:\365\351\362:o\217\255<\tE\201<\202|D=\226E\246<\322\376\320;\261\355\205>-J\3268\224\225e=B\r\263>\262\r\321>\310,\257>\266,G>%\234=>\260\341!>`LX>\344\256E>\353C\001>\333\313H>\222\340Z>Q\255L>4\017I>d{\031;O\213\3769\330\275\036:\352\370\245;\013u\261:\230\235m;\253g\222:\235:\253;\371\355\234:\331E2:Ks\275:D01:U\215\360:UU\005C\362B\036=S\024\215=\273\234Q@\004\340\001>\354)$>b\276B>|DR:o\201\035=%\030\222\301\322\211\n@L\3661\276wc\202>|\3039>*\247\354>R\005\212>\0364\030=(\255O>\266\315\025=N\350/\276\356\022\254\275\036\324l\275\016\227\3459\325\233\3729\207\204\034;`\332\3039K\320\3679\203~\020:g\2039:@k\240:\235\321#:\304Y\275:\001n\2449\t\2612;@5\247:\237\215\031<\376\213Z<\260f\000=\361\304s<%\2676<6\374\233=[\251\3059\2466\t<\222,&?!\242\232>\251\2221>\321\201\013>\340\250\363=\301\275\357=l\317\033>~\261\315=\202\030\026>\363U\034>p\251R>\253M\341=\242\003U>\0336\2349\271\261\t:p\300\004;\301c\2729\323\331\035:\005\025\3759;\302&:\2153\331:\243\342\r:p\254b:\336\237q9\273.>;3\330\037:\000\000HC\037\316\250=L\373\177=\214xR@i\373\016>f\231\017>\206~i?\177\027,9Ka\004>\nM\210\301Q\236\340>\301\321S>\357\034\030?\233\323\271=j\203\177>\367\334V>K\333\306=(|&\276\222_\234=\240=\271\275J\304N>\320\312I\275+\024\3779\023Y?:\3305\246:8\014\201:\335\340z:\177\370\243:\222\3072;\245\t\207;\326\312\223:\267\036\214:\030\207\267:5\324\035:\333M\263:Ep\232;\302^\021<\370\254m<u\272\205;\242\340\223;\032\361\227=\014\t\0358G\313\006<\203\323\256>L\020?>\022%/>\366gk>\005\314\000>\306\313\003>b%\311=aR\307=\021u\025>\\\024\321=\262\252\016>\245\241\026>U*\230=`\226\2279\371\260+:Yi$:\'\313+:\320\252\014:\256\3061:\275\317\363:\223Ms;\363\254G:\357\361\216:\221\213e:}G\3269pWg:\267m+Cd\277\037=a\032\242<\335\3239@k\177\004>\212\206+>\224\016i>\324\001\201:\032Q(=\225\220\246\301\336\036\010@]\3773>\323V\025?;\353a\275\332\251E>\307\260p=\251\207\245\275D\233\033\275\334D;\276\276\"\035=\371\360w>\177,\273<KL\225:\037g\311:\264\035\001;-\235\231;\026LY;\337\352\374:\305\205E:?\243\236:J\372Y:\210\n2:\226\027\216:8\361H:\316\034\031;\207\333\244<\341\250\"<\004\204\227>e\341\306<\231\324v<\372\244>>\347^\3649\341\"\032=#\325\203?\021\343D?\356\362\010?\260\207\243>I\210\247>h\222}>\353\203t>{\263\211>h\200\240>\311\253\231>\375\255\204>\372\241v>\205\272\203>\001\300\032;\343\210+;o\266/;\006\265\031<\377\206\321;r,6;\342\370\254:V\\\347:u<\215:\335&\206:\354\225\332:\226\310\223:\377\2164;UU\005C\031\026\225=D9\327=b\322Q@\327P)>\272\3147>M(\030?\035\371\2559\260V\301=Z5\205\301\316^\325?\253\330\013>\313}\227>aB\230>\037s\222>\204\256\333\275l\026\306=\032v\365=\350\312\217=\346k\247\275\254\2177\275h\310\023\276\205\334\024;\325W\322:\277\'\310:\234\342\331:\240~I;\301Fz:;\263.;~\343\237:\td\275;\305^\240;\rS\210:\335\\\274;\237BV;\025\036y<\214PR<\021\276\312<\234^\252<Q\3356<\360\032\">\224\354\34595\025\264<b*2?\300\246\177>>\241\202>cL`>\023>\013>W\247Q>\270X\372=\264%\317=9e\316=.\365\005>\243K\370=l\233\356=4~\360=\345+#;\321u\305:\207\247\320:\345\025\033;\344|\017<\320\214>:\211\323=;p\241\242:P\221\310;\262\361\315;\261\032[:\024\177\257;\261^0;\000\000\026CUa\370=.\233\303<R\230R@\252=/>@\303\n>^\307\266?(e\0339\360\350L>0\316\234\301w\"@?\244\335\340?\273\213Y>\"\034\312>X\nW>\177\321\364<o\265\267=\\\221\264\275\272\217X>\374\273\335\275\246\366\300\275uY*\275\322\364\204:\223\214\3539\025\341v;\337V\217;Yx4;\306\261\177;u\212\204:\273\213~;\205\304\030;f\320~;tE\300:gpp:\306t2;0\361\377;\310\025\021;S\332N<\345\234\330;\345\014\252;\215\244k=\222\001\'8\224J\317;B\207p>\271\030\001>\036\220\317= \271)>:\220W>N\317O>@\2016>\327\211+>\246v\032>\366V0>\270\342\r>tH\037>\245E\304=\3228\215:\\7\3069\"\311\030;\363\323n;w\370\037;\214\322\310;\247\0225:\322)X;\350\021+;\034\016\216;\013\266\207:X0,:\266?\311:\000\000pC\365\022\231=\302\276\271<\335\356\034@\n#<>\216\343?>\210\3122?\036\n\2119\213\377\330=\205\026\236\301d\342\023@\000\240D?\031\351V>\267\323g>UO\272\275<\211\222=3q\332=`*o=|\305\222<\332\033\263=\t\303;>xM;\275\037\317\300:\377\030n:\315X\003<\026\200\220;(\210>;\251\347.;\2647\025;\213sl;\203f\250;Z\225p;\314\253\201;\nN\003;E\364D;o\254\251<\017u8<\212f\334>\210f\221<4\332\357;S\300\237>2%N9\243\362\257=\27533?\024\027\307>\003O\013?\342\255\233>\217\337\234>\254\032\221>T\352q>y\260\203>Cj\206>\260j=>\313\200\024>7*\367=\346\335\">\310\257l:\215\256\3569f\021\312;\tA\254;\235\350\322:\310z\243:\014i\214:\261\371\030;\250\017f;Y\3175;\322:/;\023;\342:}\n\277:\267m+Cm\363e=\235+\031=\271G?@|\357\024>\371\226/>\027a\352>zr\2569\017\274\216=x\022\225\301\203\241\317?5?\211>\302\251\255>\377(\234>I\'\341> .\027=\327\001\202>\307\216\241=B\016\034=\336&\342<\006\2564=\315\327\212=\221S\021:Z\374\030:\"\212A;\264\366\n;pY\301:z\342\r;\006\356\336:\276\270\340:\234\357\211:\035\243L:\221y\215:\375\\\t:h?\236:mk\026<\237\025\377;|\237\026>\323\2010<uq\344;\213\337\000>\370Y\3448\020U\312<2\345\321>\017\200z>P%k>\334b\005>\341\272\020>1\302+>\231\276?>\352\2017>\216\211q>K\342v>z\325g>\306\3577>S\034\343=5\001\3259eF\3279N\2477;\253g\274:=\317x:\n=\307:\335k\237:\016\206\262:/\020_:\232\262\3579\313n\221:f\270\2479\346\227-:\000\000HC\335\377\216=\253,|=E\300L@\247%)>\232|5>\r\204\021?{h\2359\215\377\334=F\001\214\301!\\\360?z\274\326\2767\356\320>pi\006>p\336\304<\301\006\243\274\277\230<\275\321\362\276\275Q\237\032>\313\263\021>\216\320\342=\304\344~=\322P<:\265:\244:-\224\210;Y\260\035;f\373r;\374\304O:\205\200(;\257zh;_\273\214:\226Z\034;\231Y\274:\211i\031;\324\334%;\230\307\231<haN<I3\214=\331O\013=\026\023]<\276\027\230>\'f\2618u\262\267=\377w\307>\223\350\207>!W\272>\317\\c>G\273b>\315xz>f\315w>2\271;>\214\267\240>Lro>\323N0>\273\277J> \2754>\275\242\240:\215.\314:F\334\252;\215\n6;t\3608;\356\000\033:f \233;T\276`;\373%Z:&<\024;+d\227:\344A;;\364\251\306:\000\000HC\242\\\224=\320\351\305<tLN@&\225\032>\3025\035>Za8?]\343\2129/\027\001>w\360\227\301:\013\342?\357b:?p\215\266\275\247\242\255=\253\000J>\006\376\200\275\353\003\272=\321\t\200\274\225\330G=GL\311\275\320O\264\275\201b\200\273C\277\216:\353E\001:\347\324\204;\206WK;\275\376\201:\256=\236:\r^q;\300\233\247;N\327h;\217\311\245:iP\000;`\210\032;\304\2259;\313e\206<Y\324\327;\233\324\212=?\346\247<mF*<A\256/>\312\270\3248t\3352=$\004\032?#\013I>P\300f>\022\212`>\013\344\013>3n\366=\366\013\001>-\210\317=\031x\335=\202\201\016>\251\\\275=\307\271\227=\022?\360=st\245:\000\274\3069\324\377.;.\232A;\301FL:Ana:j\330e;:\250\246;\001\022\324;\267\312\221:\307\024;;\315\276`;\267\252\344:\000\000HCBs\231=\031\222(=\330\242I@\361\224/>fs1>\201\254H?\002\025\2069l\325\r>3\333\217\301\3423\302?T\211\032>\021\010%>\\>\007=\250\316\217>\237\305\315>\340\377\212<bG\261\275:\354\005\275\244\342.\276\217\342\033>{\'\313<\206k\202:*\336\004;\263\272[;\241rH:Z\001\r;\366V\271:\247\020%;wD-;$\267\223:\272&B:T\351X:\260\217\224:\226\353\316:\337(\035<\333\307\256;K\372\263=\314\336\201<\324J\370;j?\323=\026\366\2148\241\377\263</\'\367>\350/n>{\322\260>-\273\203>\374\223[>+\017u>\24303>\231\273\201>\021\302B>\202E?>o\373b>\021&\233>\025\3009>\032\032\241:\177\023\360:]\322\n;_\230\013:\314\356\005;1M\301:\234\260\357:\262s\037;+lF:\253I\\:\215\275\002:\343\333K:S6\016:\000\000HCj\230\302=f\0262=\340\202O@Yh#>\242\270\036>;\033\202?\363\256\0319\344\373 >\256\370\214\301=\357\210?\316\237\037?\243\300\337>\020\343\255\275\353>c>\237\232\370=\3064\234>(\264\214\274\321\206\202=\233\344\355\275\007\335\342\275\226\016\271=\265\263\207:\027\356\212:eV@;\200X\023;\022\204\253;\251 \360:\274\244:;\321\3026;q\254\207:\345\260-;x\036\324:9;\273:\3706\n;)c\013<H1\350;V\311\017=#\006p<\301\020_<pG\016>+\357\0108\315u\314<\365U\346>\232\232?>T\363\226>\335\0300>\253[\216>\241\377\014>^\271L>\216m5>\026\206\034>\3138\t>N\370\307=\010y\314=\341\200\304=\253\266;:\312rN:\3409%;\331\003\363:h\020\250;\345\216\315:\226\307(;5c/;\352GB:+\253+;\264i\257:ukw::\212\240:\267m+CM\216\246=t\243\007=\033wP@\263-\031>\3616\021>\265h}?\026Fc9%\237\027>L\263\221\301\230\242t?\3373\006?:fV\274\2559\021>&:\276>\007W1=\037\260\266=\342\201E\276\272\322\206>+I\265=\236G\013>\3312\037=\025 \3419\217\331\023:\237\232\235;h<\263;\n7\005;J\033\315:\372{\233:\375\237\206:\207\310\240:4\333\220:CS\275:6\200\026:\232\332#;\022R]<\373\016\301;|\235$=\345\270\242<\337\tI<\213\355/>\206\306\2148\212\202\031=\205(\353>\212\273E>\t)\223>qC\213>~@\037>\202\022\211>\217Bu>tz?>\374)\">\330kd>\031 y>7,\024>\260\352]>\334\230\2359>\377\014:\362\240\226;\025v\351;zN\024;+o\266:\342}\271:~/\226:\310\327\203:\377\201^:\374m\272:\032\254\317:}\323\340:\000\000\360B\034 #=\375\264\200<\261\315F@\226\026\242=\247b\267=\241\377\206>\357\3707:\326$t=3\272\234\301\275\323\326?\305`\213\276\321\003\264=9\252\033\276\216\311\021\274\307\034\217;8\256\277\276\223\376 \274R\265-<\364F\200\275\037\350\007\275\022\253:\275@\263\307:\270x\3339\010F\307:9\315\244;\272\270\326:\244\241G;\351\027\315:J>\332:\311\244\t;HV\372:\322N\350:\206=-:\205\334\031;\311T)<#F\034<O8\010>\031E\327;\215Im<%|\342=\301u\2259\364\306\245<\004\240\201?\371\030\010?U\325\003?q\021\215>\330\315\315>\304\340\210>\213?W>\370\371Q>FnS>\002\324M>j(E>\263\360\036>\'\270*>\226\276\355:\357\021B:R\322\016;gt\022<\r\\\255:\337?=;T \275:8\365\325:\267\016\376:\204\216\370:$\0103;\326a\007:\350w\014;\212\235\270B\211\006\274=\330\301\217=\244:Q@\243$->\354I*>\277\374v?i\r\0169>*\031>\014G\211\301\010\224\231?\374\317\'?\234\261\212>\307\344\301>Y\304\006>\374\016\223=\233\332\272=)\321\272\274\251I\322=\227\350\235\275\351\000\036\274\370\265s\275:Xy:\033\036U:\312;\251;\265\326B;\353xU;\257\246);+\310\016;\354N\240:j!\246:\310t<;\232S\301:{\037X:z\272\022;\226hB<\t\237/<\023+\213=\361\336p<\275\342+<\347D\366=\234\341\0308,O\256<!z\005?*bE>.\236\276>\342\3570>\241\0202>p\343%>Ak\267=\356)\367=%#\312=>\202\232=\300\366\227=}\242\213=\212\331\212=\336\360*:\325\227\004:\n\277\277;v\201F;y2\257;\177A\315:\315i\332:\226\216;:H\343~:^\030\036;Q\343\243:\214T\n:\026W\345:\000\000\026C\343Q\257=\376Z;=\360\252S@\304\026\030>N,\027>$SI?f\241\3319\036=\r>\346\322\226\301\356\375\302?dw\377>\271=\252\274\000qs=SfM>3\221\030\277AT\004\276\341\225S=O\271\234\276\2621\302\275\336\216u\276f\253\345\273\225\003\0369\n\23659\224\257\000:\030\250\021:\371\300u9\313?\';H\177f9lS\3679\277\273\3448`\266\3049\220 \242:\001w\3468<\234`:\t\376\244;\356\215);m\261{;\346t\216;\212}i;\356\350\227=\257Xe8\004#d<\232\\\355=\334\377\000>\262\027\306=^%\307=\347y\270=?\320\315=ot\010>\025\373\002>\222\364\">\350e\366=\315z2>\215\002\325=\315\204\247=\027\327\0379}Jz8\265\232d9\022\224\3379n\324\0059\255aW:\254\277\3468\365%\007:\234\324E8yi89\350\223\033:\304\254{8\251\373;9\000\000\026C\267.Q=\334\371s=O\023C@4\027\r>\366.\036>\304\262\310>\212\205\3169\032]o=\327\256\223\301O\032\357?\257L\223>\271\034\001?\212\317w>8e-=8F\263\273\200\263\t\276\222\247E>\034\350w\273`\235\341=\222\222\371<\224\343\353<\240\257+;R*\242:\003e\347:\236\273\341:\353q\256:\273\232\331:2L\036:\301%\020:\017\215!:c\240\3169\025\372\266:\372\323\201:\'\275\234:\026\255\236<r2E<\242sc>\200\345W<\021T/<N\276\004>\303\314D9k\212\347<\337\365D?\226U\375>g\344\310>\344\201\337>\220tT>\027LN>\033\235K>\251\203}>A|\205>\255Vx>\017\323\202>\326?c>\276\2410>\t\275&;\320K\332:D\035\201:C\330\267:v\343g:\177\266,;X\200\2579\303x\3449I\013\3659\321f\2009!\n\276:aR :\354`W:\267m+C\305\356\207=\026\211\\=\213a3@!\222C>3\377J>@\300\361>\373\014U:w\350\234=\316/\235\301\302m\331?n\013\261\273\366y\305=Y\242\204=\316f\007>\213\0001\2762\253\277\274\275\342O>\'E\025>\315\321\030>\325\2279>\033\316(>z^\022:\024)\2239\273b\221:\037X\275:\216bq:;\022\241:\355\235,:c1\301:\235\256\3219\270l<:\304\005\013:\306\307\2639\245va:\311\277\002=D\207\365<&*\341>=~\023=\234Mj<\027\323\224>\260\302\33796\230\261=\367$\223?\304.\345>\241L\017?\216V\310>N\226\251>\205\325\310>|m\304>\3703\253>\353\244\350>\007g\243>@\214\224>\024\272\210>f\274b>*t\3629\312F29\342\304l:v\005\245::.J:N\314\332:\253N%: \013n;Y\341\3679\251B\010:\332x\022:\253\216\2729\377\237{:\267m+CdP\032=\206P$=\255\031H@\022\233\274=aM\342=\234\354\223>tNE:.l|=\316\017\227\301\220Z\201?c\207\301> \342K?\t\340:>RT\257>\263&E>\303\221b>r@O>\376\2064>\316C\031<{\211\340=;\353\331=\273\211$:\311h\2569\360\310\247:\215P\326:\243_\014;\360\301@:\355\244{:\332\031\3769\241]<:\272\014\2779g\313\3669\014\232\3009S\230\212:\332[m<\207\2442<L\232u>\314\341&<\214\222\027<\217s\365=li\2509c\210\324<nW\004?+\214\203>eg^>\307Z\000>\024.R>\231\300\311=\247\253\024>\312\206\324=\034\013\371=fEM>\355\267\356=Wt\302=$i\033>\224x :\203 ~9\202\035T:P\227\307:\342l{;.\007\3639\217\206\367:5\200\2219\342\372u:\361\322\2509\3329\2279\202\021\2219J\373\201:\000\000\226C}\000\256=\332u\210=\037\247F@\025\352D>)\207F>\222\310\034?J\221^9\020U\245=]\224\221\301\t\027\344?\360\3110\276\030\363\021>\303b\220>\002\372\207>\3069\307>\300\350\212>6\262\210>Da\255>\262^\213>5\337\357=B\237\321=/)\':\376\202 :o\\k;\223\337\355:\033\314\204:\242\210\271:>\354\013:p\210\037:\200\311J:1kC:\326(\312:\2458#:W\201\225:+_\354<\217\024O<\246\037\022>&o\212<\237\235S<(\300\">7\253\3268\t\363X=\274\345\225>\021\251\231> t\214>\364_~>\253j\232>\305\370A>\030v=>PT2>L\276G>\3258\032>\013\370\021>\366\255Y>w\215\033>O>\2639E(X:;\263\337:\305\201\222:#\310\3429\013\221\002;\255_\3049\366\263\3269\346\275\3679\035\362\035:\035,\244:\010\266\000:\331\010\010:\000\000\026C\234\375\325=\300\221M=\3606R@\271\2155>\340\251*>\322\223\214?\261L/9\352>A>\004\203\214\301\357i\227?\337i\014?\312\272\267>;R\234>\321%U>r\242a\274\02270>\375|\225\275H\251h\274\n\035\273\275\363\241\377\273\213\2126\275\333\031\305:\275Zy:\220\315\315:\\eS;q\243D;\246\001\374:&H$;1\033%;q\227\002;\0030\n;\344\333\207;\017M\316:\362\275\r;\316\364\301<\312\366\363;4F\021=\200%\312<=\034\226<\010\006\200>\221\316\0329\225\311O=\313{,?\267\275\">Od\202>H\266\002>t\357\331=\033\211\254=\352\263\001>\3234\367=\373\232V>\002\220*>De4>\352\261\274=\360D\014>\3120\306:\224A2:~\332\250:\374\231i;\365\215w;B\330\034;\2009(;\241\227\025;3\220\355:Iv\377:-0\231;\224\037\333:T\021\257:\000\000\226C\374\212\222=\347h\350=-fO@s\333\016>\305\307\022>\201<*?\377O\2179\257\237\362=s\333\210\301\333\230\250?4\036\236>\243Q\316=\311\347\245>\036z\317>{@\200>\007\314d\274i\224\364=j:\014<T#\005>=@\260;\225]\233\275\376\315~:r\247\2539\335\352\205;\232\252-:\351(&:\365\2027;\322\261\240:<%\'<\254\337\374:\370&\314:\'Wd:dF\027:_\205M;\312w\205<\243\261\347<\341\257e=\273\222f<C\307\310;\3276P>\326i\2738\233@ =\305\200E?\361\217\274>n\370\216> \255\213>\253\272_>s\232x>\264\267\002>F\347^>\254W;>\301\003e>\010\233I>,\375\021>s\345\221=\243\340x:\211F_9\177\225\233;\317tQ:2\016\3049r\310\030;h\330\246:u\006.<ka\314:\325H\252:\201\246\234:\356\312\020:3\270;;\267m+C\2045\244=\2350\262=\314\nK@\234\364\n>\242\215\023>\273\2000?\242\013c9_\225\354=\314\264\206\301\213\207\220?\023\301\303>\323\243\340>}[\r>\3313->\261\373X\275\216y\231=\253\264\350>\325\366\232>\241\231\316\275\255N\275\275\022r\243\275\200\036y:\020rL:\262\320\247;\211\323\271:I\252\201:\354\366\303:,N\022;\230{\023;\306\362\274:\270\301\355:)\222\276:\245$\234:\262\276\307:\030\226D<\234G\221<{\374\246=\222\266p<\335oi<J\200\332=\352\251\2718\207uk<\336(\304>\271rO>QtY>[\277P>\376w*>\246g6>\220\'9>\302\343d>\301\371O>\227\225\225>\364)\005>\307\022\371=e\2379>\"\007\':\272\020\007:\252U>;\330\003n:8\t\024:\211\325E:a\346\001;\351\225\323:\342\373U:\243\034\217:\321\331\205:\205\225I:j\0005:UU\005C\236\254A=E\274\013=/\030K@|\334\010>+E->\351\377\232>o~\3209-X\200=\0039\223\301\304A\343?\346\231\257\275\354\3013?t?-\275\331\013\200>.\371\255<\372\243\017\275\316\263\030\275\230z\265=\'\177\037>]\340\344=\032\253\251=\257\205\307:\037:-:\'\031\317:\'\235\004;\233\266\244;\004\362\205;\'6\";mP\207:Q\246\340:dU\251:v U:~\346v:\273\270\364:\232\340*<X\205\333;Z\337\231=\276\324\217<Y1\205<\313\222\371=\032\350\0369\377\212\234<b\002\373>\006\005\225>CwR>\006\270o>\300\031\t>c\025V>\327[+>\375\277O>\256\003S>A\236f>\007\236<>\"\274}>\341]\021>I\314\033;y\354\3359\271\334\245:\272}\254:\3549\261;+m\377:\276\234\273:i1a:\027\220\303:\330\230f:2\275\3579~hF:p\202\250:\000\000HC\234U\243=\"\236\266=\356pM@\327\330A>\307\010@>\2329(?\253\233P9\376\313\301=7x\215\301\274\037\303?\363\245\276>\314J\354>P\240g>\2166\201>\267e\214>Y\r>\274\361L\362=\363\341s>\334\007%>\356\3446>t\372\215=\354\267\2409\374o\2659\300\255|:OV\217;#B\231:\211M\031;\265 \344:~\205\021:7\254s:p\254G:\005\205~:_\24249o\260\260:j]!<\313 \222;\370\350b=\303\204\336;\241?1;\313\001\007>\231\342\2058\360o\025=\366j\223>)\',>=:\021>%\336\341==\372\204=\357\302\367=\375\332\271=,\274\232=\210\211*>\203\214\">m\006\370=|\261\002>|f\233=\037J19\366i\2269\206)5:\023},;\211\312\202:\352b\372:h\345\212:\336\352\001:\267\245P:\024\372\2729\"\031\004:\271p\2368g05:UU\005C\215\020K=(\002c=\233-I@\027^\027>\250G1>\036\r\300>\315v\2549\030F`=\363\260\221\301\366\336\360?\216\363q\275\204\034\271>\023\324\320>\255\272|>5\326~>\361\254/\275\rp\267\274\337\260\246=\211%\201\2769LD\276\273\001\261\273\224\021m:\211_\201:\311\274U;ZTN<\376X\340:i\334\271:\352\334\263:I2\226:,\275\201:\036\271#;\024\006L;w\241\344:C\242z;\222\027t<{S\224</\006\020>k\027\234<\177^3<\330c\035>FB\0029\267D\022=\214e%?\250\013\243>\332\366\\>9-+>\033\256H>(\002.>\031\200I>\336j9>/\224+>\235\022?>\374\370l>\275!^>s\377\022>j\220\244:\266/\212:\nA(;\303H_<}\313\342:\217\354\253:\341\002\010;B\031\310:\262s\225:,\2238;\357\"m;\215\326\t;\243\211f;\000\000HC`\207\214=\210\320\177=q\242R@\241\333\">J\231,>\336\267)?\253\262\2019\220\220\313=Y\270\214\301\212\373D?\265l\323>\307\255G?\203\306\200>\241\316\315>\372\226\323<~\242H>\207|\016\276Q\035\227>Ad#=Re\311=\336\200\027\275\244\324Y:\025\221\3679@\274k;\217\366\300;\274\317\236:\366\177\252:\270\272x:\030\355\217:&\216\241:\255\225\277:\035G\245:\221/K:\224\034\030;n\206\\<\261\017\023<\277\361S<\270\353G<\347\365<<E\'\023>OH\2458/\333\225<S\254\273>!\303J>v\337K>\261\310\r>\242\372\013>\22715>\376i\027>\236\n)>\240\244#>X\271\035>U\376\020>\257N\022>,\305\337=\212\245\t:\216\271\3109\017\334\002<\027\374\'<\201|\223:\005\336\343:g\344-:M\317N:\177V\334:\341\204_:\371W\212:\302w2:\334oN;\000\000HC&\323\227=i^\304=\230\352R@\357e\024>\241\207\027>m\270I?j;Z9qQ\003>\353\270\205\301o;o?\n\274\242>o\361\247>\365f\317=rhj>p\2579>\367\315\305>\256\361\206\274U\356W>\242\270\224=f\362\230;\360\302\275=\246z\3379\320\212\3549\333\330\372:yo\351:\276\271\377:\375fr:\254\003\202:\277P\030:\"\302C:\270~\001;\207\274\240:R\'\237:\351\035\224:o\353\331;D\374)<jH\215<\3420\007<\334@O<8]\000>\356s\2438E\233\254<d\312x>8+o>\211aF>\333\205u>\016)K>\313\316\026>\255\354\353=\312\322\014>_+Y>\377\360\035>\251\241\000>O\332\023>d\270\377=\330\\w9s\021\2449\302\336\315:\265\313\370:\376l\334:\346\231<:\230C|:\224v\3209;\262\010:\231_\274:\275-\230:]\232\251:\231I\017:\000\000\026C\037f\221=\311H\221=3\316M@S\325\024>7\316%>\253g/?G\236\2209\353l\330=0q\212\301=C\342?\341T\326>y\346\274=\'\r\026>\373\275\260=V-\326=3V\245=\210>\300==\236\020\275b\371g\275C\005\031\275^^\021\275\025V\330:3\336\022:\330\340\020;\274\035\350:R]h:M@\223:\272\203\220:\215\255\307:\210\352\263:&5\304:[>\357:\231\021\036;\034.\240:\231\222M<\335/\205<,\241\206=&%\212<\n\354d<\037\340F>\010\274\2578\031\350\320<R{\363>\313\026c>\267\330\225>S\343\034>^\347\'>\326\325q>\203\030\204>{\372c>]\013s>G\305\210>\274#\223>\311\365F>P,\312=\021\033\231:\372%\3029g\264:;r\332\246:\025\3103:0\003T:(\027]:\231\006\241:\326\335\264:I$\206:\217\252\307:\221I\317:\035l):\000\000\026C\366J\252=d\253\232=R\331R@\311\371\034>\310[#>\375wN?n\01069%\\\004>\241\344\204\301\356\036\226?`GN>A\n\235>\260\333\"=\263\271\311=\016\267\211=\363!\263\275;\020u;2\246\306=U\006\275\275\216\232s=\177\337\'<GZ\315:\311i\n:mb\337:y}\276:\352\273\216:\006\346\350:\276\037t:cT\242:\240&h:\001\020\213:~o\257:s\343\304:/\322v:-\255\000<I\254\336;+\300}<\245\2434<\344\317\013<-\256\306=~H;8\314P@<\010\312\211>\367\330\030>\212\331G>\037\255\320=\242m!>b\366\374=\270\375\377=m\236<>\014T1>\033\224\031>\000o(>p\367\014>5\027\375=h\273t:\266\205\21491w\236:\355\321\346:\332\254\030:\325\346\243:\2433=:T\226D:\204L\":N1A:\222\331\273:\002\336\205:\217|\3239\000\000\026C\240\261c=\271/\342<OSL@%S\025>\310\2504>\346\301\003?\313\205\2319\242\204\261=f\266\225\301^\252\345?\262\345G?\337\375\230>$\201\270=\323]9>\023\337\005<\274\312\337<\213X\355\275\217\000\221=\377\242\243\275\377\\\275=\324\374!\275\026F\273::(a:\334\221\300;zN\262;\3358\022;\2749!;\334\"c;\017\375#;\261\2339;G\321;;\314\267\000;\304\253\017;6A/;\007z\361;(\245\253; \217\261=N\177\021<\252h\332;\033\214\004>\336a\2658\354\365\313<\312[\364>:,J>\2223\r>\366]\n>C\301\340=\272I\347=\353\2734>\326\240^>\333C_>I1M>\234\2035>\257\235\274=\340\206\000>\202\244\200:\211\3440:\364\307\232;\215a\243;\017\014\377:^8\014;v\237\010;\316R\370:[j#;\341X3; \t ;\374\234\027;\3143\254:\267m+C\312*V=BR\303=uCI@\306\273\027>\254\3743>\337\330\322>Z\234}9\351\001R=\200\034\212\301\346\313\357?Yj\\>\316\334\300>s\312}>\3047\301=\354\366\367=\265\204]<\333S\244=%zG=\200j\342\275 &\\\274\ta\263\275A(3:\241\205\003:\304\250b;-w\027;\261u\252;\346nK:\231f\211:\327\'E;d\\\340:\344\346\205;\261\307\376:\252\304\274:y;\026;\366\2433<\242.\034=\201\'*>7\3173<\233\230\004<\210^\242=,7\3638\326\356\266<\010\005\241?\027\002\202>\376$\002?\014\000\001>Q\374\346=\325\360\366=\017\010\034>Dn\032>\002If>k\262\003>s/\n>\213y\327=\325\264\336=X\271\3029\005V\036:]\256\240;vb\002;3\371\225;\264\323\2579\201\2042:c\0101;/\206\251:\220\275n;\005\020\300::,l:M\337\304:\267m+C\363c\255=\0230\231=\342;P@}CE>\336\315?>\313\3343?\007\01639n\215\343=\'\001\217\301\254\001W?\203\346\007>H\230@?\203w\336>\034\267\202>\005\020K>\312(\\>\006}\250>;\356H\275\245Yw\274\270k\344=\207\242\t=\307\022\2609\211!d:W[g:\355.E:\247F\230:\177=6:%\213u:\201U\177:\233\004\2139\2557\3169\325\342\3039\312}\3309r$\3709\305\323)<B\036\355;\227\302\031=N\216\t<\023\254\200;xq\007>P\22638|\360\017=\021\324C>\005D\'>\004bM>\330X?>\024\035\'>x\205\027>|$3>\222\252g>\n\"\032>\226TJ>!;%>\363n#>\361\207\307=@\215\'9040:\271\225+:c$\3009J\022\026:\272\267\2319\247s/:\227~\3739\3150\t9^`>9(\212X9\271\021\2129\222n>9UU\005C,X\006=E\266h=\352\213M@\001\354\005>\300\352B>\3338)>\337\250D:\320\275\373<\261v\224\301\224$+@6\3730\275%\335\375\275\327\321\013=\",8=\022V\030>R\214\244\273p\010\277<f\347\263>\371\246\305\275\263tD=\266\321 \276\003\252\266:\375\266\010;\343\027?;?V\005;R\320\212:\343P\003;\'CB:>\340w:o\034\013;\\\305e:\271\n\277:\357\224R:\233|\353:/\314\301;\335\367\241<\362$\240=_\372\221<\014P\202<\205t+=\004\345\2079\271\032\010<|\031\003?\235\033\206>q\202\264>\342\313\205>`\223v>\2379s>`\'9>n\240=>\261\230j>\n\367\205>v_L>\3406s>&\240\016>\014\320\251:\212B\234;I\002F;\212\361\274:\255QU:\003z\331:\221\332(:\231\3705:\370\024\236;\356\3200:Dy\327:%c&:\315w\313:\000\000pCc\330\243=\265\367\241=\242\022O@\355\037\034>i&$>/h,?\264\341n9\257q\337=y]\207\301}\261\215?\370\0060\274\351\030\251>\355\327b=\267\304\301>\rD\027>\204\341\274=\374\310\001>]\255\330=.\317:\275aq\002=\216\340\002\275@\031A:\262ih:\370\274N;\357\312\246:\246\363\330:L)G:Z\251\373:\346\025z:G\330\234:/C\254:U\010K:\017\'\201:\030%\230:c\036k<:_N<?Q\026=V\257\253<\375\365\206<^I$>\020\025\2408;\200\263<\363H\331>f\004Q>\353\036\301>\366\355\212>\022k{>?\353\">\264\341->~\323!>~\311\023>\256{k>\003\352\020>\234\033A>\020+,>\367\216\3359\3764\3679C\014\225;!\177M:\342\227\311:\3734\2719]\363\375:\373^$:\271\363E:\316\341|:AZ\3169O\233]:W\362\232:UU\005C\201\367\211=\002\260|=\332\364J@!\366\033>\305\2041><v\356>:\030\26690\361\235=\027\000\220\301\261i\342?m*\233>Y,\344>\3703T>o\311\264>\341\361->My\221<\017\006u=i\317R=\326B2=\375\005\017<\240@%=n\233\272:Co\3619s!1;\272>5;\263Z\023;\227\013\213;P\377\302:S\227\245:&\\\247:!\270\275:\031\305\214:\001\267=:-\357\360:\376\315\226<\267>M<\'F\251=O!\231<2\322#<*\027t>\033}19\200\2470=\314\220j?\270-\235>\371\312\340>p\036\n>\270(<>Jo\200>\350\024\354=\014\215\273=H\334[>(,\332=\035z\350=\264\t\022>4\235\r>\303\376\030;\306\373\3649\372o$;\000\200j;Z6\330:\246f\216;\375\252\220:\233\016\232:p\232\254:h\250\236:\250\371\223:k\241#:~r\236:\000\000\360BCC\223=j!\275<\203vO@\000\266\023>\242\222\037>\301\2624?_\342_9\370\323\343=\010@\222\301\230\304\234?\350\252\027>m\314\266>\374\252c=$w\246>\247h\002>\r\327\010>\305(\222<\312\356\007>J\001\026=2\275\310=\024\250\263\275\3378&:F\201\006:\214\212\352;\236~-;\256K\216;I\252\252:\310\251\356:\352\310\230:\212|s:\244\001\017;o\251\003;\325\230\277:\026\216&;\224\3322<9pc;\355=:=Y\353\203<\274\t,<qF\n>{\"k8\372\330\253<\326\243\246>\256\353B>\354\034\202>\3175\277=\341\220\031>6S\236=f\312\353=M4\327=i\'\354=pN\377=G\031\324=.\233\304=\355?\334=\020`\3239+\273\3469\320H\376;[\205\013;B\353^;\313\274\217:\241a\340:\332\220\244:\241\332\221:G!\324:\312\260\211:\226\3061:Z?\371:\000\000\360B\020\n\267=\034\334\364=\202@O@\264\r\">\026\202\">6\006X?\302\371\0109\334{\014>?8\202\301\035\217t?\312\264\355>aO\023?\253^\311=\030\256\237>-L\323=om\350\274\214\277\263=\206}\345=m\035\213\275\235V\324\275*\326\t=\343\321S:?\331L:\266\027$;\262\222Q;\311\353\347:j\240?;\307,\362:\345\213\246:_5\021;YO\312:f\353\013;v\314\345:\2071\343::}(<%\216\264<\255\2633=J_S<\302\251\034<\213\022\264=I\316\3777\315\362\224<\314k\327>\033If>\307Hm>\2512]>\215PP>\rW\010>N#\007>\205[&>\310\007O>j\304\025>\3752\323=\013\311\317=<\370\325=\360\334\026:\254=\003:\326\020\027;\002\216X;V\014\267:\271+5;\367\364\020;E|K:>T\030;\010\223\202:\253\263\343:st\212:\363\007i:\000\000HC\203\360\234=\007\365\276=K<R@Y\372\023>\250\314\030>-\377L?\335\355V9Ma\007>\243\023\205\301&\360\225?*\252\275>\217`\240>D\026~>z\201\200>>\030\022>K\206\007>\353\341\232\274\010\313\025=\317\020\033\276\035\356.\275\rz\014<\332\372\354:\371\232\224:#hO;(\335\247:\240\220]; \364e;P\242\204:\017\225\313:\3472@:\370\227\236:c\\\373:^\354\030;\374:\021;\371\266\026<\336\245Q<\303\027\207<\227\374h<2>H<\260R\n>\252\265q8$7\246<\005\332\270>0\340S>\277\266n>\224\360Y>\257\337\330=\374),>\372\251\235=J\242\336=\320\240\325=\243\202\302=\262Q\363==\274\354=\204\363\336=\354g\n;\314\n\313:\006IS;b\322L:\377d\222;\373~j;D\nU:e\203 ;\270\241\000:\246Hj:\362=j; R\026;\360\351\262:\000\000\026Ce\344\263=~\264a=4%S@\263W\031>\327\266\013>c\203\211?\323\277/9\374\363->\247\326\211\301\237\360\216?A7\360>\030\017\332=I(\263>\006\213\344>\237,\006=\215/\333\275\220N <\373\253T=\207\201\007\276\207\0230=\374\004\231\275\\\257\002;<J\222:\315\024\357:X\210\351;7i\321:2\272\314;u\323\355:\335&O;C\264\216;\031\332V:\017P$;\2308\214:\2100\202;e\364\027<=\320\235;Q\026s<\\\244G<\327<\375;\0013\014>(\262@8\262D\225<\3319&>\335sE>P\352F>\217\211\353=Z\030\325=\220O\375=|\360\303=\0059\010>\224J\037>\t\377\003>\301l\000>\245N\310=\312\035\312=\034\244\372:j\034P:\240\336`:\353\323O<\232\364\226:\362\021\337;\342\177\214:\336\260\231;Z4\311;j\r\024:\242\350;;\332(Z:x^O;\000\000HC\027\235\201=\333\017V<=\2166@\364L7>$\255M>\021\260\367>\013\032\3139z\364j=\232U\246\301\365M\033@\314\233\221>\254\243\217>\026\001\025?zgH=k\210\014\276\342\032\206\275\304\376\202>3z\351=\277\204\272=\2269\247=\'\005a\276\364\t\203:|\0358:\335\354\271:L\274\306:\377\'\243;\326\030}<\242bJ<\\|\257;\331\r\347:,\357\031;4\323\331:\336$\323:5\342\256;~4i<\205\274\314;\213\t\201>3\244\207<\323%\022<\324[?>\366:\0219\300\370\366<3\311J?(\350\245>\364\261\000?\317$\206>62k>\313\325v>\217\374z>\022n\230>\213\254\263>\204+\241>\264\271\273>\234\240\277>\350\311\\>E\222\337:d3\233:\336d\275:Q\345\246:\r4\221;\014\210\005<\267H\004<\322\277r;\213\374\213:\302 \016;l\260\";\032\307\313:\276\367#;\000\000pC\031\264\204=\310C\031>\022nK@\336d?>\347\002C>\342\213\001?9\303\2309\322R~=\217#\210\301\327M\001@W\002\247>\302\007i?\302\342Z>\270`\007\2755\214\236<n\032\n<J\330\030\272g.\217\275\2377\025\275\237\266T\276\347\204\313=\320\303-<\236X\375:~\245\021;?w\270;\220\0343<\211\304x;\226\276\365;l\005*;\377\216\231:\337\024\206:t\006\032;Lw&;\204`\260;D\347u<\371\010\377<\305F\376=\377Q\335;^Z\367:WF\273=\304\202\2278.\246q<`\366K>\251\002\016>\0035\245=C\222\025>UG\302=\215r\216=\001\214\266=\322\326\275=l\222Z=\023\265\352=\363;R=\266`\252=\231\271\346=\r\372G<x\016\310:\365\216\326:\213\345\272;\003\025\014<\250)o;\252w\333;\266\353\363:\016K::\210\320 :\270\220\363:Z\034\001;\337\033>;\000\000\360B\367\332t=\304\313\373<\255qH@\200\347!>M\224.><\217\020?\342\201\2609\332\236\331=\326\252\225\301\334\014\010@8\010\200>\364\241\331=b\274\377=?\201\300=\245\334\321=}\266\214=k\255\335\275\354\350\021\275G\"\236\274``\330<\027\310\315<\306C\013;\321\332\240:\221\003I;\337\243N;\271F3;\317\352\010;\032@\305:\377`\274:\300\316\246:g\022\223:\250\237\242:Ps\030;\tl\361:\304\324\207<\253\274\024<\201\370\354=\375\207\253<\256\332\345;\257\377c>(\035\0109\300\225\241=\344\016=?\263\001_>\321/\324>>\234X>\330\356\213>~\306H>F\2211>Y\024X>\350%\007>\001o\013>t\007&>\242\034$>pk&>\357\000\014;\003\027\235:\005\320`;m0l;\347\340 ;M\330\003;\036Gg:-Q\331:,\256\236:\320;l:maJ:\022eY;s\344\230:\000\000pC\226(\002=^s(=\253\2679@\324\027\302=\367\313\014>\263\322\023>\326\231\n;\266\002W=\216\007\244\301\314S\032@H\335.\277\'^v=\240\252\010>5@%\276h[\223\274\325i\350<\277IR>J\312B=\203\016\276>9\374\361=\333\246\204>\025\340\3319\266P\2159\013P\214:\204\"\272:\335\030\r:pKt;\273z\304:\005#\230:fk\245:X\010\260:*\301\234:\325O89P\216\n;y\277o<\253\327\357<\307\322\301>\373\3233=\355O\271<\355+D>\037\213\264:\340\036\211=L\335\367?/\2008?%\003\023?\2516\257>#\013\226>\0301k>+K\326>\330\351\001?\355\361\253>\201\020\271>f\275\303>\252\221\225>\212\256q>0 \324:C_v9\177|\004;i\2666;+O1:\227\245\004<A\235\204;\351\242\213;aM\031;E\273\333:%\220E;tF19e- ;UU\005C[\244\311=\3737\301=s\214Q@\347\0246>\330\245+>\262\347o?6\30149\3005#>\'\030\210\301\034x\225?\214\307\016?\364;\323>ydm>h\306\346>j\375&>\307\372\223\273\024!\342=\356\227j>\245b\216\275\177\347\\=\3523~\274w\225O:\235\356\001:\034\003K;\030\263\241:\305\312\317:\n\312;;+\217\311:s:j;\343\'\003;6\243\337:z\276\335:\226H\231:\034\262\001;\311\322\203<\233\016\212<\036\002\330<\014t\200<\215\3311<\257\2156>j\333\2158\276\370\034=~I\002?\036\277\224>-\277c>`>\344=\037\354M>n2H>\267\270%>e\236\024>\246\204?>z\320.>\3235(>\036B\374=Y\027%>wtw:\372K\27492\210\222;_u~:[+\267:\021\3415;Xm\271:`\030\241;\363\305 ;D\260\315:>\354-;\224\\R:\275\003\312:\000\000\026C-V\004>\346W%=\245\257F@/*K>\371o4>OR\241?6m\0009\0333w>\030\377\215\301yQ;?o\010n>\366r\335>\235\r\031>\201\367\206>\010:\363\275`\376\212>\332\013\202>\371\365+=hq\246\275\026\276\377\274\347\363\004=:\205\236:\243\370\346:\2345\372:\217>*;\256\367R:z\217\256:\202\n\246;\017\302\336:w\224G;\212\316\r:\311\272\344:\223\210y;\227\342\006;\301\254\265<\363\026\010<*\377\004>\354\204\233<<Y\020<\315gi>\241\215\0168\027W\204=\205\024\n?\207\207\234>\003\210\244>Y\021\252>\\K\010>p\014V>\255\031\244>\217\031\206>\247\323\231>n\320q>m\177I>\327\312*>\244&:>\342\316^:[\333\275:\216`\212:\3379\366:gf\200:Z\300\200:\306 \037;me`:\257>u;\302\352\2559h\316\326:rFh;\340Vm:\000\000\360B-\200\203=\245\002j<\240QH@S\217\000>\030_\022>\322\272\364>\032\234\2079\255\252\261=\256\256\227\301\373\007\221?\243\2559\27783\030>(\310[\275\346\260\261>\271\300\311\275\370\016\332= v\275<\320\032\254\275\324\350]\275<`\227=\266R\227\274|\277\001;<\036\202:\206\337\254:/_\213:\256\214\265:K\271\220:WT\265:\201A\346:\221\345\3659]^@:\2659\334:\213\302,;\244\342\245:\364p,<\203\2319;\374<\244=\202\312H<\033@$<\335\005!>n\315\2708>\316\216<Y1\226><2\222>\367\272\301>\310\363t>\352\204\035>@pN>46\033>\210\226s>\247\210:>T\252\">&:@>\247\030\031>\010aL>b\002\321:\355\2513:\344\030`:\326h\024:\232\221\014;[\350I:]\367\265:!^\374:\303\242\3219@5\2269\021\\\325:{4];\333\242}:\000\000HC#\347/=]\201\223=\005\254D@p[\361=\301\030\017>\010\253\245>#j\2119q\234E=-D\217\301^\230\363?ZW\001>Ys\222>\000h\024?\306\022 >\274*\262>ng7>\\\375C>\237.9>\240\024\321=~\232\217=\216F\257=6\000\2209\325\321$:\3563\363;\037:g:\202H&:\366)\315;\302Z :\274\263j;C\377\276:\361}o:[;$:\313\302K:\0035!;T\034\274;\237\262\336;=\235\236=\363\037g<\273\217,<]+\244=\214\226\2678\250;\202<q^\200>\243\352|>~Ik>\353\335&>\230\024\007>k\022S>f\037L>\007ro>.\365=>\366\256.>1\377S>\022\377\354=r\216$>\0376I9\000q\33393\365\264:\363\032\221:\370@\030:}\300!;\033\337\035:\365\214q:\303\026\3449\227F\215:\3422\026:\211\007\002:9\023\017:\000\000\360B\212\312\334=\226\312\324=7\312S@\312\000a>\246\334J>(\255s?\t0\3738p7e>\303\004\214\301\240\214\365?\263\353\241>\002$\240>0\372\344=\237*\257=-\026\313=\272\216\000>1\250I=\030\321\177=\"\375\201=Zbo<L\375\007;\255R\313:\3453\202:w\204%;\304Q\007;B/1;\236\241\225:\324.\257:*\006\244:\224\255\373:m\237\306:h\235\211:\014&\355:\232ds:@RG=\325\205\305<y^k<Bp,=\317\004G<\225\362\362>\304n\2468a;\030>wP\331>\217\250\227>\357$Y=\225_\021=\225\202\223=r\024;=\347;\277<\342A\373<\202\271\022=\277I\267<\206\021o=T\2275=\323+\033=\010<h:\022\306}:Y\312\320:\336\225\326:OvA:Is\036:\345\022\026:\025\251S:\342\351\225:N\235&:[_\017:~\303c:\027\374\3109UU\005C1E\302=\257\203\225=\223~S@\017b7>\021]\'>\321\317\201?K\266\0329\355\317.>g\214\213\301k\244]?\335\020\274>/\255\302>\334\364\317>\212f\331>\206\235\007;\327R\013<\303\"\300=\"h\216>\230\370Q\275,\271\247=\344\311\243=M\"\3639\341\210\3209\312\372\024;\022)\204:|\300\353:\322\330n:\365\361\326:\376\362\003;\256\226\222:\317l\220:|\207\253:\264\337\034:\207\261\220:.\021E<\002m\367;\026h\242<O\310%<\315\233\034<\357B5>\303\204182\315\026=j\264q>\232\323a>3\025\350>\377\267\r>\255\330H>\203\230S>\337\201K>\244\254$>\274\256[>\\]\025>H\211\">\311\351\255=G~\337=lY\2719\035jZ9\001\256\';\230z\201:\224\203\270:\023\247(:\177\336\336:\300`\303:\322\021b:\371\230Z:\303R\340:\333\036\036:\365eB:\000\000\026C\247\r\204<\301P\025=\372\236P@\337f\246=\226\253\020>*\031\034=-\024B;\320\203\236<z\003\262\301\363\354c@\316\0109>Z\220\360>\232\205\330>/Q\201=\001\271\300=t\357\250\275\330\326\227\276+\222P\276]\335:\276\031[\224\274\342\231\345<\224Y\2358\254\276\3538\231\256\251:\347j\217<.\"Q:\201*D:/K\2169\361\004e:C\314\0339\300A\':\335\3668;N\321\0069\217!\235;cO\363;{RC<\020@>=!\336\016=n\251\330<N\215G=\217S\013;\t\315/<\241\233\251?\016i$?W\311\327>wQ\241>\371\222\207>\215\356\224>\367\316\216>1\244s>\330D\222>\224<\'>\250\316\314>F7\204>\342\3128>\312\372\3228\351\205|92\253`:\211\322@<\212l :\'\262t:~\367\2639P\302x:/\260\0019\326\356\3249\201E\r;\272~\0369\267\273Q;\267m+Ce?\240=\217\354%={\373L@\307t\037>\237(\030>\t\364i?SA\2109@\223\022>\"\333\215\301N\2701?t\322|\275\256r\213>e\214\330=?\034\231> \352B>ua\002\275\217\263#>\252\2061>\223\346\007=\326\t}<D\362B=\355\2336:\317\010d:\367\330\271:b6\267;\261\031\346:\037\2156:\031\024\213:\366\326\242:\'\374_:\301\r\236:{\327\373:\001\373`:\357U\006;\202\rb<\002\310\236;\221\341\201=>\036c<\266w\027<\006\356G>\356;\21282\001\016=\257+\205>\271P\246>Y\364Q>\002\367C>a\304 >\323Xa>2\246*>l\252h>\374\362A>7\223E>pg\206>=\253:>\321[(>\006\270\3109\rdQ:\270[\240:\2346,<\327\205\203;\213}J:\231p\233:l\344\217:\005\273\000:;\265X:\242\026\266:\3503.:\360\2357;\000\000\026C\350\206n=jA\222=^5A@\r|\372=\273e\026>2`\336>.\311`90\\\240=\230B\210\301\335\267\270?\266\177o\275\356\306)>\236DS>\364\323\220>\263\251*\276\2713\231=\203}\r=\353\213Y<\255\017\215\275\323\002\240\275\270\2516=\334\203\";\311\361B:\214o\233:\0366\003;u\026{:\273vs:\275\375\265:\253kE;\220R\337:\352\340\361:\333]\021;B#\000;\303P\315:\302\000\323;\361\006:<+\247\345=>v\001<\247\325\002<\367`\312=\365-g8\256\036\215<\256\226\243>\364\270\225>\2133\200>H5r>\345kL>\n\003\014>L\342\\>.\337n>Ugb>\322IG>m]\\>\233{\332=U\276)>\375\267\016;s\005\037:\3416b:\223\221\t;5\376l:\221t%:F\215d:\026\327\213;\355\345\323:\375h\254:\301\272\277:\206=\312:\2573\204:\000\000\360B\360\t&=k)\246=$\301R@\264\227\n>\354\323,>@\351\233>D10:~\257W=h\274\221\301Rs\344?Y\371\243=N\277\353>\336&P>\246\204\345>d\237\377\275\341v\247=ADT\274\035o\036>\241\020\265\275 Y2>\345\316:=\267\340\t:\016\245{9=\340\023;\311\322\343:\3600\241:\224\013*:\376\377\3239\026\322\022:$\241\r:\266F\2419\361[\032:9\031S9\361\271g:\213T\315;\023\363\037<eU\245<-\003{<\301\222\035<4\261\257=\323\032\2219\030\222a<\317y\256>\"\210.>pM\252>\3576F>\372\2116>\\z@>\000\022.>\354\363 >i\346`>\217\225->\230\365\022>\314\267\">{\343\356=V\014\3359\220\207{9U\344\336:\324d\346:\246)\217:cd(:E;\2459;N\2739\177{S:O\263^9\351\363\027:\322\322\0319K\342\007:UU\005C\244\361\224=2q\345<=\2664@V3?>\243[U>h\347\'?\371\364(9s\306\306=\2207\223\301\371p\314?\320\244u>\212^\300>\223\330\205=/>\242=:\220T>\253!\330=a\306[=k\363r>\000\256Z\275U\337\366\275\206w\342\2730\373\350:\256|J:\371\227\206;\201\2512;Q\\\";\016o\005;\351J\261:\354\331\211:\276\370{:7\210\216:\321_w:\246\326\253:\022O\264:}\364w<z\204{;>i\023>\316sF<\226\324\320;\236\220\351=\256\354,8jA\275<x\275\242>\255\004@>L\250L>\313\222#>!\317%>\310c!>3Q\356=\277\t\366=\203!\007>q1\026>\035^\030>I\261\017>\301\303\014>e$`:(j\3449=\263\013;\301\257\320:\223\004\270:L\325\255:6\\\276:\377s-:\355\027\t:\322\323\037:%+\3569\241GC:f)\3419\000\000\360B\267\225L=\356\301!=\021\336K@\364\227+>\231KE>\373\312\247>\261@\027:{\240\366<\237*\233\301\025\007\025@\030\312@?\204W\342=t\345]\276,\032\360=\324\227\227=\2149\324\274\317\344_=;\255\252\274v+\301\275\036\000\305=1\002\n\276\252Jj:\306\355\177;\200\325\r;\001\272\033;gj\265:\377\030.:<M\254:\317\270\026:x\276~:\352\2304:\003\357\335:-\250\357:\031\343\001;\022AK<\276(=<\330\026\272=A\274\302<\347\2021<\024\316\337=\025\254\2059\016#\203<\205\224\\?\252&\213>\016i\303>F\331\\>\016\n{>S(J>\3425x>\266\213|>\242\320\207>^\233\227>\330M\203>\251\360\211>\237\244\027>\005\343\246:~s\302;\264AF;\263s*;\3411\364:\230\377\031:@\354\334:o\330\021:4\356\237:Ehp:&$,;\314\354\027;UF\325:UU\005C4\262\220=9}\331=\346\300R@\321#\374=\037\353\006>\210m5?\254\347h9\205\257\352==\272\200\301miA?|\271c\276S\202\024=x\037\n>\212V\277>\242m4\275\025\347z=\375Y\000>\031\242~>\253\241M=b\370\227=\232u{\274\200\024\235:\377#,:\274I\006;$\347B:\213Es:o\013\360:\204/R:S\261\220:\367\352]:\203\273\237:\375\335\347:\203 X:P%\237:\201t\000<\306Sh<\267\257\217<\361\210A<\322\240T<\353\372\351=\267?y8kq\035<} \211>\211\227\n>\322=B>\256\271\031>\312\234\353=V\311!>\230\036.>\220\3758>\354#V>\343|5>\337\2520>\242\342*>H\230\347=\246x\r;\222\352\266:\342q\371:\023H :\207\243E:\327\020\337:\036)U:\377Vc:\000!\3679\304\341\261:3\201\037;\262xZ:\rlQ:\000\000\026C\341$\245=\275z1=~\311L@a]\032>,\374\037>\035BO?C\303O9\330\'\014>\326\265\214\301\244\314\277?pcY>\221\306\315\275\016\350}<\326\274\007>@\250\210\275>\325\237\275 \215\034\276\355\270\322\275h\016\016=W\345\211=\237\2059=\321L|;\026\251\344;Q\302\032;\334?\235:\304\020\323:\314g\260:c\n\362:\347mF;\201q\026:&\244\3729\005#&:\264\335\202:\363\303\r;\314\'\364;7\336\030<MW\221=;\224\r<\023\310\366;~\362\226=-\36588H\275@<Oj\000?\347x\204>1\347\207>\242kz>\305\270/>\233\014\021>h\025\030>\266J:>\3671\026>q\215\t>\342\276,>\362\226\273=\277a\336=t\320\006;\335\323a;\036\277\000;\363\356|:\273\232\223:\214+\216:\275V\251:\2632\020;\177\301\2459b\215\3649\243\334\026:\217Q\004:U\025c:\000\000\026C[)\265=\344\024\211<Ae1@\327\035 >\244\315#>8\2164?\371M\0279\313(\357=\211\267\233\301Am\242?@\034\342>qT\326>\241\3247>\006\350g>CU5>\372\005\021>\315\256\247=(\227\001>f6\335<\213\327\r<\334z\330=\373\233U:\032z\212:C\271\005<V\031\236;\255\367\014;L\362\357:\235\246\222:\037\300\201:#\360Z:<\246\236:\270Wf:\370\023O:\212\367.;\227\021\337<\246\321t;\323y\'>O\326\310<oPD<\376J\217>\352XQ86\303t=\221\264\022?\304\261\201>\205\313\205>\016\0019>:\372\360=\352V\000>\235\207#>!\323\023>&\260\035>\220\212\006>\347\017\341=\217\223\327=\\\360\305=I\364E:\211\023x:F\331\352;\324\271i;\356s1;\217\214\360:Lh\220:\327>z:\017\330&:Q\220k:\007aP:N\263\004:O}\362:\214.\332BV?\316<\373+\237<\312\035%@4U\370=\301\320B>e\214R=\007i\";U\007\201<\251`\276\301\213\346X@\225\205,\277,\221\233>\330\"\274>\224B\017\277\363\016C\275V\225\223>\271{\035>g\215b>\316\202\\>)6\255\275Pw\316\275\352\355\2629\001\337\23093,|9\331o\2459\362\232\3529\022k\007:\030\342\3249\'\344-9;\361\2779\276e\022:\214=\t:\002\205\025:\331\317\2009\241\253\032<#7\361;\245\273\252>m,\334<B\214\277<\363\260&=\263\341\305:\234\003*<C\2207?\'3\371>\244~\273>Gl\322>z@\365>\313?\321>\361\250\020?\216\254\250>\203\005\221>E+\215>]\242\302>\0103\200>:8\230>5wS9\313/\2159\004\023&9z.\3708\202\205V9m\347\2569}\324\022:\030F\0169\263I\2329Zu\2559\017\034\2179\325p^9.)\0029\267m+CBg\212=\312\212h=\264\023M@\000\317\007>Mr\n>\037\221-?\267\343\2449\273\034\000>h`\215\301\330T\246?\340Y\265>\333\250y<\337s\010=\376b\275>\220\235%>*\222\201<S\206\002>z\354\310=M\005\n=&%\">\255m\245=X\024*:\257\020\3619\234\r ;\210D\370:\260p\207:\216\010F;\2514\265:\014\252\256:4\303\253:I\246k:\370\035v:\235x\313:\372Y\302:j\330\227<J=\213<\301/\333=v3\202<\357\265\007<\'\327d>\n\260\0109\213\206c=\r\215\317>\251\226\300>\225\312\276>U\004\251>D\013B>G\014Q>\253\311>>zHH>\274\312H>\025\024\356=4N\032>\323*\014>\342\330\036>t($:e\252\031:\215\004\000;\263\263\305:\034\005\313:\366S\275;\361u\022;t\367g:\217Jf:\014F::\211M\212:\3473\316:\034k\302:\000\000HCrL\234=i\321\224<q\360J@\330h\034>\001,\">\342\240(?\307\223?9v\364\342=\252\305\230\301\230Z\250?\265\273\254\275\302w\222>z\271\230>\371@\207>\372\372\261=\317\242\374<$`\201>s7/=\272:\377=\3313\001<\264\246\273\275h\\\377:\335\353q:\005\035\242:\332\302\277:Y\334\353:\022\327*;\t\3665;\250\350\327:\205\307\376:\0164\341:\275#~:]\312E:e\240\310:\031~\017<\366\000];\226\353\215=(y\033<\232\353\272;\010\266\320=\343\22688b\257\275<X6\270>[\307->\321y\220>\322\205)>\273\036\031>\266\256\007>\362\023\010>\372S\032>\371\363M>\330T\352=\376e&>\330\357\032>\'U\362=\231\263;;\340\344\230:\344\240[:\253\207\200:\274\300\246:/\363b;\033f ;rH\237:\0064\246:\220Q\232:\366\366,:\253\007\031:\257Ma:\000\000\026C\'WS=\0024C=\neN@\357 \363=\363\313\022>-d\271>&\031\3079\033\371\231=!\250\217\301j\007\304?)NA\276\354-\232>\263\320_=:\233\017>dn\361\275I\027L=i\207\204>-B\335=i\352\026\275\371?\001\276\343\335H\275\333\260x:\206\230<:s\026\211:\236\222\242:\032\3618:\331AU:\356\217::~\212\3509,\275\261:\343\223\224:x\033\360:\320\347\307:\276<t:k\244M<\330\363\275;\366$#=\"\260\204<\001;\'</\253O>\2548!9\257f\312<\227\204\333>\341E\262>n\313\212>\276\222\234>\242\377 >\304\033A>S\202\031>\207{I>\311@V>\265\"\207>\217gu>)\275->\250\310\016>\245\376\016:\205D\3349\r\237i:\371\007\264:\353\367{:\307\224\3579\302R\t:\0237\2329\010c\306:\321\232W:\306s\006;_\354\227:\233B\004:\267m+Ca\306\301=jG\304<)pO@\221 9>\nX7>\274rj?\353\25299\211\313\033>\215&\226\301\306\350O?\364\343\">1\007<?\370$K>\346\001~=\246\367\217>9\272\337>\223\262\212>K+2\276\"\025\320<F\304&>\220\225\267=jA\007;Yk\200:\255t|;\273\243\372:\343\307\302:M\022v:\370\261a:*Y\251:\221\'\241:\341\342\027:3l\3619uy::D \304:\016\266A<\214\270F;Y\240d=A\375I<o\357\024<\020\371\">\371\014L8\302\233\303<\251\263\245>\3405\234>\215\236w>\247\304\204>\222S&>Hu<>\357\0322>\245\246\227>v4\203>w5y>\226\2466>\322\3116>K\306@>\245\241e;>\213\301:\017\024+;\2440\314:\350p\237:\2263\t:\301\022\n:\240\375P:\007n}:\002\013\3329\376[\2529\006\257@:\260A]:\000\000\360B\233\371\317<S\010\307<\327\330K@Jw\312=\223\305\016>  \026>V\367\016:\206)\310<\345\017\236\301\311\312$@R\250*?\'\341\025?\330\016\302\274\355\203\000=\216\271\205\275\t[\334\2757G\252\275\3503\312<\"\026\227<Wk\240\275\nA\323\274\2201g:G\332\272:\032[\262;\033\215\322:\374\376\024;-A=;\251\364\330:T\245%;\341Ca;Q)\232;2\303\331:d\013\217:\213n\037;\267\265\325;\342\206\233;\247\004\234=`\263=<X\256\007<\033\347j=\341\25759\226\337G<*\204\332>\346\001:>\337o;>|!\337=\003\247\004>\211\350\242=\211\210\023>\376\315\342=\017\377\350=\n\332\002>\346\332\006>\244\352\357=t\246\310=\3460\005:F\254\235:\3754\234;\310v\315:\245\367\014;\233WA;r\341\246:\224\357\016;\265\255(;\014\243p;\345\200\214:M\036\\:\217u\227:UU\005C\352!A=\324\231\031=\314\214M@\267U\016>u;+>\262\023\312>\311\035\2449+Bw=H$\222\3012H\374?-OS>\013\024\213>\237\342\237=\260C@>\\\354,>o\362I\276&?\207=\034\306\000=EVT>\261\365\262\275*H\337\275-W\2649\232\222-:\347a*;\336\2176;\347\265k;)\232\335:\025\346\223;\341\030\026;-?\225:\214\"#;\321\332\211;\312l\214:h\237\036;\370\245\343;\244\251\232;A,N=\353\222S<\235%\025<\231\216\305=6\261\3038;\030\246<\243b\000?\322\253\206>~\202\306>\'>=>l\230\350=U\001\r>\006\272\022>K;j>\325\256*>\345\257j>S\006\021>\177\221N>\221\355\036>\261\332F9$k\t:\254\253\026;\275[\014;\365\215\030;W)\256:\344\r@;k*\013;\322\204=:V\303#;1\266\255;W\327\232:\367\262\214:\212\235\270B\177\026\025=C@\177=r\305E@\300s\317=\362\257\021>|K\201>\007\325?:\026\251-=i<\225\301\276m\374?D\264\004?1\320\231>\254<\315=\231\252\224>\200\226r\275\325\375\246=\270\330\035=\325k\303>\t\013\024=&1\037\275\006\320\025=\244\217\3569R\345\2459\343-\202:\001\315O:\0306K:\373\332l:\320\210&;\014\350t;\306</:5Q\024:\261\332I:\302\030\223:X\"\251:\320)*<\370;\\<T\327\364=\310\313?<=\360\027<\020\263\342=\024\256\026:\371\364\242<C<\234?\202\350\324>}\251\263>f\243\016>\343\021A>\020\024\">v\226\033>M\300\374=\213\337\036>\023l&>z_/>0\347\017>\263h\013>kw\3649\247169\302\214<:3 \002:\'\376\021:`t\036:\314\372.;yXU;P\355\032:_J\n:\257S\211:\342Q\256:\301\236q:\000\000\360B\037\346|=\0250\354<@iO@g\355\021>O\222(>\301\352\002?\261\266\2439\211\266\234=\263S\226\301\266Z\367?\276\343\276>~,\257>\336\222\252>\360(&>\347\225b\275=\221|=-F\335\275o\2568\275\310\225\216\275mJ]>\032\211.=\035\203\005;\245\177\244:\267\361\";\311\252\226;!\274\035;\025\343\324;}[\361;\035\331\010;\010k\376:\301R\323:\013\266\232;*\253n;J#\220;\t\201\'<\2066\301;\000\255\030=]@(<R[\334;9D\017>\\\347\2678\235\342\323<\245N\342>\030)S>o6\242>\030\311\025>\343|}>~3#>_\333X>\227kH>\232%S>\230\272%>\261(V>_\235:>]\322\013>;\371\024;\300f\262:\033<\022;\3167\331;\327G$;\303\276\361;j\237+<\237\320R;\r)1;\216\346\016;\252\215\222;w`\200;_\267(;\267m+C\016=[=\305\315\211=\374\036B@\017\005\345=\277\270\021>\250\201\254>\t\343\3349{O\217=\037\264\213\301\213\035\334?\357\277Z\276{\376\347>\022\304\350=U\014\326=\332&\027>\014\007\010\276\316\216\020>\315^C>\326\312\035\275\232\220\005\275\326\321\027=|U\226:m\263\000;\240\234%;a\r\";\304\206\324:\016h\003;/\271\356:[\227\313:K\210\016;\370\022\336:q\017\351:E\016a:\\\003\320:)\360\262<\214\351\320<\276)\200>\n\373\252<\243#t<\301\356k>oe\0139\016\317\326<\233\343g?I46?c>\252>g\022\300>\347\313\210>UU\241>\367Ka>/\262;>M\021_>\353$k>K\305\215>\030FQ>\345\021D>\265j]:?\363H;P\360:;\305\212.;\351\016\221:\246~\000;g\213 ;\210u\236:z\333\370:t\226z:\006=\304:-\020T:\022x\202:\000\000pC\375\016\230=\030\224\273={\330S@\275\215\007>\345\025\017>\275\263N?`m\2149V\303\353=\262_\204\301]\307T?}BM>D\020\230=a\311\025\276\376\002\207>\262\363\215\276\0233/>\266\236B>P\251!>*\367\266\275W\214\240<`\r\241=\022a\016:\275\307:;\326\034\354:g\220\207:-\215(;\034\367\35599\341<;h\t\3569\327\212\356:\022\202P;\242cJ:\346\372>;@\233\353:R\370]<h\365[<\227\362\005<qv\277<\260\226\246<{\345\032>t\020\2468&`<<\221\304,>\364\004\225>r\027\010>\260\247n>\346\304T>\353\323\007>\225\272!>\371\314\034>\322:K>a\3328>\312\021\031>\256\021\327=\215\233\002>\r\273\003:\276<C;\243\3455;t\3028:\315\251\304:\262\272\3159\224d\023;z6\2339\"P\255:\324\007\r;\026{\006:li\t;a\200I:\000\000\360B\236\250\206=\306\"\375<\235\235N@\346V7>\304\2744>\356\326#?l|\2619\024\255\301=\346\004\227\301\331.\220?O\301_>2\304$?\265d\203>v\203\200>\353,\212\275h\243\366=\026\353@>[\231\374<\245Pw\275\221\343\240=\324\007\306\273\374\335\200:sLa:\324=\t;\0219@:\003\371\211:\202\273\035:\177\371\320;=\260w;\270Bq:q\322\r;\272\367i:\\\364\231:\027\250!;\374k\225<\341\'\314;\3521\250=\022\227s<\310\257\356;`\0221>Es\0369G\223\372<\221j\006?\327\217\243>\277\277\222>\027\344_>j\327\034>A\364d>\271\271\n>=\315H>3\3072>\262z.>\321I\221>aG\322=<\244\311=9:x:\320\373E:\266KA;Y$=:D6\204:\310\364\3539}\227\373;\031\220\330;\311g\022: \206\025;\300X\032:\271\247\244:L\261\034;UU\005C\314\225\327<\3323\250<\267\313F@X8{=2(\324=\3024n=A}\361:\203\224A=P`\242\301.\374,@\261\231v\276n\331\031?\223\'\256\276d\374\305>rk\026>\004{\255\276<\324\246\274\350,\316<\205\255\001\276\324\315\001=V\240|\276\216Z\003:\322\022\2219\273\204\266:w6\010:\340\346A:\262\363\2429\301\344\232:\244\244\';)gs:P:T;\253\204\027:\302rP:K(\311:\030B\210;\366\304\365;\212\306\026>V\377\t<`[\241<\377\202\311<\265jS:\227\302o<\346\210F?\274\226\304>\277\025a>j\261\016>Y\030\315=}\006L>\031G5>\330K4>\371\317l>\2036\037>\2601X>`\3167>\273s8>1\035\3269\202:\2209n\255\256:\371\220\3579.gJ:\213\004U9\240\255M:\rLN;\343$\214:\357\375\334;\361&\3659\233\316c:X\265\346:\000\000HC>7\267=\213\315\265<e`A@\330\357\001>\335\364\373=}\333i?\301\210?9\022\243\000>\'\363\222\301Y\273\t?\363\244\255>\325/\211>\231\346\334\275\322\007\374>\300\325\357\275\364e\305\275\013m\213\276\367y\264\275\014\302\270\276%\030T\276}7\247\276\243\344\367:\0348D;W\301V;\350\034\345:\231\232\351:@3\024;\323\317\250:F\n\037;\221D_;\353\025K;x\252U;g\336\210;H{\034;\367\3268<y:\377;\026\233\014>\322\353\t<\263R\363;\017_\032>)\31568\242\376d<\335\0107?\035\304\307>U\257\301>\001\017\206>\300C\265>\206\332p>\375U\\>R\315]>{$y>gr\227>\001\356\244>X\246\202>F#e>9R\220:b\316*;\216\211\203;`\215\346:\271\222\356:\223\366I;\256\271k:\300\201\016;\370s\";\265\235_;w\321];\361!\203;\371}\245:\000\000HC\254\345\211=(\257\234=\230KQ@+\273\016>\310\002\033>)\273(?\324\r\2329.\177\355=\335\332\207\301\307\335\246?I\271\256>\025\3051>\326\010\324=&\215\213>@#\240\275\\Ux=I\375D\276\177\372E=\375\026\364<Rt\226=\003x\376=\363\372\200:Ht\017:\374\033D;G\362\255:\251\263\362:7\360\334:\224\354\347:\364\277\000;dGL:\372,\337:\\#\223:\334s\324:\024\362\315:V\264a<\005\336F<\013\260\034=H\225\240<\325$L<5+R>\313\000\0039I}U=\342\005\363>\223\274W>\276\305\376>!\301_>#\000N>\353\242\037>k\262n>\306\3175>\235\022r>\036\372i>}}L>0\034U>\234\200k>\033bc:\317\205\3229\302\277u;\352\361\217:J\265\033;e\236\267:Vb\257:\356\244\016;\360u\014:\274\230\016;\347j\224:\006%\335:I\372z:UU\005Cj\263\177=[\353\301=\365=M@qA5>2\264;>\004\263\n?\366\225K9\366\010\234=\0100\217\301\254\017\332?\375{\365>{S\315>=F\263>\226\276\242>\374\300\n>x\361_>\001\327n>4\344\307=\257\371\254=\036\324\t>\221\266\020>T\312\2119(\360\3229\266\326\005;\261\202-:\n*&;\251B\227:O\265 :\366\266\2649\367A\036:\213\374\004:\324\220\2379S\334\3219\310?r:\032\271\233<\233\375\035<\036\212\004=\257&\322<\317\236+<\227\307F>\201V\2428\346\3046=\244_\377>jXh>7`k>\273\t:>\275\367#>DK\037>\022\326\027>\n7->\274\001$>\023\0209>\205\261?>\260\273\">\216o\373={}\3268=\026\2009\263>\371:B\227\3279y\251\210:,\037\3459\366\002\2709ej^9\252U\3109\367l&:\257\360\023:\361\370\3259?_\3009UU\005C/~\202=\016m\320<v\300N@,\261\321=\226f\362=/D\375>\'\230r9\203\026\317=#{\217\301\305\017\210?\005y\'=\3430\301>\023\364\204=\024)\022>\311K+\276+>\023\276I\335\241>\\\272\200>\306\016\306=\010Y\312<\217\365\017<v\006e;k\2437;\277Dj;\315\004\233;=\024\025;\301\tz;\261f\321:>BN;@\256\264;\216<w: @\356:f\377\016;\314\357+;\230\353\261;\2045V;v\376\027=\365D\344;\246o%<c\354\272=w\036e8\355\343H<(\360Q>\264\242\204>\2036\204>\3554P>\247 ]>\253\2504>/\215h>?\306\013>\177\324@>\300\234%>\235\213\013>\035\377\016>\2364\014>G2O;qcJ;k\274\001;\256\034\230;q\336\375:\333\3041;\370q\246:\3530\021;\212\312/;\025G\030:\013\264\216:@\333\036;\021\360u:\000\000HC0\334\215=\264\274\322<<pH@M\325\030>\r0\036>w\251>?\006\262t9+\256\001>t\343\223\301|d\231?B\217>;\336\337E>j\033[>\324\323l>Q_#>\206\3465=\031\025\335<\270A+\276\0178\213\275\253\327E\275\243`\032\275q\353>:Qd>:\252\325\360:\240\202G;7:#;\271d=:\3033\237:\014\345\241:\365-\203:\252\375\352:\274\334t;\030\273o:\016p\354:\032\n\274;-8:<\341<\314=\010]\220<\016\244T<\000;\027>Mn\2358n$\302<\335\016L?\224`\213>\355\300\226>y\221\215>\3263\020>h\241s>\020\341\034>\3162|>\020\360+>7\026\">P\304:>\215\251%>\003\017\032>O\271::l\243%:\n\252\311:\2436x;\213\341|;;a\2759\274L\202:\256\333\224:XL\200:a\246\272:IC(;C\r\004:^{\220:UU\005C\030\321C=\245\021X=\020\030?@\257a\006>W\216 >\311s\227>\365\311\3179\323l\235<?Q\227\301\310\270\025@n&\034?\210\263\010?\325\240\337>\301\207\217>\323F\034>\227\305\003>]\026\266=\313\033\370=/f\326=\033S\352=\205\277G=\311\234\3409\272\234\021:\273\030\272;R\351H<\rs\321;\355\244\315;\302\275F;\225\277\226;\213\331\344:\367-\251:|\006\004;SQ>:r\332\231;(\234\022<\320/\n<.\"\n>\215j\n<\246\234\007<\325\352\217=\035H\0169\351\325\344;I\350\265>\257d\373=\325\332\323=\3142\364=N0\272=\023\254~=lrs=\254\241[=\315\335(=S9V=\006\330\234=\3013[=9\033\245=\334\037\1779\2531\2659\313Wc;/Wu<\037\300\211;<\260\251;\321\332%;&]^;\016\204\356:%T\207:\254\263\334:zm\3259\002zh;\267m+Cc\032\013=\261\334B=\216YH@\315\001\361=D\274\032>\326\370S>\200X+:\2468\363<\026\031\227\301\007\010,@c\014\347=\204i`>\017|\220>\240{`>\027\202G>K\254*<\007\234\003=\016\310\324;Lk\337\274\207b\232<\334VD<+W\013;\352\242$:[B,<:\037Y;va};]\005h;\234k\367:\332-\317:\357\337\332:\333)\277:z\345\340:z\252\006;\344\217d;\226\035k<\342\303P<5\252\036>\036\261\004=\357T\262<\326\205\014>\335~\2619\320j\206<\377\355\213?\243%\226>F\211 ?\311&\215>\337\375}>\3327D>\267\t*>\222\376\031>3e\'>\202\225\033>\224\265\035>\255\204\001>6\311\356=\206\337\352:\373-\002:S\357\020<\205\0328;\232XZ;\330Y\210;sJ\263:Z\202\220:8i\025;\2459\\:\231\332\000;Yf\';\335#\006;\267m+C\261\245\247=\346\021\306<\323VO@5\310\033>#\267!>\002\032??\302eh9S\235\377=n\346\222\301g\334\234?\335UB<\341\036c>\352\030\333=\354~E>c\354+<\342\261\253=\021\233!>\355w~;\355KH\275\025\0005=|\376\340<\\@S;\006s\356:\033\032\376:\373\3521;w\335\201: R\226:y\312L:\317g\201:\333|\006;\234CZ:\327\336@;yY\321:F\341\r;l\016><\244a\264;\377N\024=\306\203\214<2\"@<\244\335\034>Rm\2108\236j\325<\207\004\005?^L\226>\367\224\272>\337\337F>\022vl>\024U%>H_\017>\033\'\204>\327\207:>\220\250D>/\211\035>c\223(>`v+>\344>\213;!\360=;\262\246-;\"\342|;\323\323d:\214\024\245:}\037\000:\007\235I:\325\250\002;\'\007.:\272-\206;\323\233\313:\226\247\265:\000\000\226C\311\223\235=\023\376\225=w\304Q@Q\244.>\322\374)>+UL?\320\231\2029%G\007>H\263\214\301\r\344\315?\205\332\007?\370\3361>\347\275\323=P\357a>\340\304}>\234X\342=\005K\324=\014\025\205<\223\017\"\276aG<\274\315_\230\272\205\200\313:\221\033\316:\200\343\213;\346\n\033;\3440\301:ej\300:\343\007\223:\316R\251:\236\035{:\366\276\202:\307\367\256:z\217\202:\300\n\321:\013\316\224<\231C\203<\230\206\272<\223\355\235<\303\244J<\025\213\201>\214\325\3708l\207l=\026_n?}M\270>\227\013\263>\205\230->\024a>>\037\352\013>\214C\330=\200F\372=v\363\332=~\236\021>\203\335$>\347\222;>J~\t>\255q\346:\362\311\275:L8\216;9[?;\351h\250:\037\234\207:\307\376\206:9\t\236:\225/V:\305\250\211:V}\340:\262jM:wg\221:\000\000HC\321\261\307=Osn=\333\351Q@\202\257!>\342\037\025>\373Q\222?\366\253k9\366\266/>h\254\220\301\216\334\223?`\017\201?\201\220g\275h\360\252>\237\2158>\276\026%>\"m&>]\341\320\274\364I\330>\260\005T>V\234C<\274\351D\275a\251\014:\307\235\002:IdH;\256_\325:S\243\203:\240d\213:\016\036\215:\"Q\322:\333\375\221:\256\254\013:\2038\022:\302\033):\001\210\236:c~\000=nO\346;\257\365\326<\350H\201<>\033\017<_\027\301>\0345\2618\301!\206=\373\357\332>\364\357\272>\215!2>\233\370\227>\324\254&>Au >\014Q\010>$\222\010>\000\354\023>\310\236\034>\025\242\376=\257\243\027>\342v\333=\254j\3759\247P\014:\202\305\227;\202\361\330:nm\214:xW\203:\343l\213:\345\210\337:\356M\203:\262a\3279\315\307\007:1\301\3529p\253\233:\000\000\360Br\214m=\363B\020=\273\315N@`\277\323=G_\354=\366i\361>\250W\3259=\033\275=\240=\224\301\270w\214?\336\340*\277\365\363\205>\001\253\274>!\323\225>\352\002\215>\204\307\306>}I\276>%=o<\177\242;\276\241\225\310\274{\026\253>\3666T:\rh*:\351\222Q:\226X\37693\260\231:\001ul:E\227\257:\346\226\2729\364\335\2719\221gB:+\016\025:\261\016\023:068:S9J<\226\013\302;\206\033V=\343\036\017<q\337\002<]\275/>\316\372!97\271\355<\213!\344>\315\362\254>5\203/>\2432$>\304\216O>\262|\'>k\360\031>Q\250c>sSi>\260\024?>\364\t;>\354\3367>\260n\351=\353\317f:yK\3309\030K>:\010[\3729\213I|:\2279\023:p\321\001;\311\010\2149\205\263t9L\316\3529\201\333=:V\275%::\023\3559\000\000\026C/\025:=;\257\177=\254\233K@\337\247\343=\337F\014>\260\236\274>\264\304\3439\324\300\226=%\254\213\301\217W\240? }\024\277^\251*\2773p\360\276\017\361\217\276\023\302k\276x\006\201\276\255)\265\276M}d\276\032sb\275D\210~\276Qj\242\275G\0304:\243\030\037:\273~\321:D\220\301:l\351x;\267\264a:o\364\247:\034E\322:w;O<\371L\014;w\202\006;K\005\312;\260\357\222;\025\263\254;h\006\277<U\274\206=Y\326\360;\211\304\337;m\210\272=^\200=9\352+\204<\262\243\013?\002ZF>\326g\303>\233sq>*\232y>\305\037T>\277r\">k\026^>\202y\024>P3]>\243\2538>\263\316\021>\t\350+>\3140\3639j\3473:\277u\241:*\225\275:>\277\201;\340\353):tW\242:\342\357\353:\312yn<\271\224 ;%\004>;d\365\245;wNe;UU\005C\214\3266=\273\373\257<gG:@;\320\004>\254\357&>\016\245\255>\'\326x:\254x\202=(\262\241\301\331\306\030@\232\363\010?\013\242t\2763\266H=o\013N>\374\265\367\275\343\030\255=&L\305=\r\375\250>\320\352\013>3YC\274_\3000\273!\274/:\360gn:\355S\277:\212\027\376;i\230\032:\316B\206:Wn\271:U\312~:K\021\033;V\376\020;\201\"\r<\351\3440:\363k\215;2Y@<\247\351\031<\260@\217>\273\224\232<\232\325f<\010\235b>\260\016\3409\250A_=`F\207?\022\017\311>2\204\213>\255;\244>Og@>:6\211>\027/\262>\250\001\221>L\212\263>K\353\244>O\244\263>\203\302<>\237- >\274\302\201:\264\204\235:gS\344:\312\206m<a\2359:\"\266\036;\002\020\t;\016\267m:u,g;!\326\350:\225C\022<\222\261\037:\3768p;\000\000\360By\332\261=\274\216\216=\263\255J@=\347M>\351\365K>G\231&?\263\356\23192M\314=\246\n\216\301\361\240\317?\221ng\276\205u\256=R\255\224>\364\"m=N\233\300\275(!\214>c\350\333=<\322,>\336Q\360;}\027\271\276\256\\v=R1\016:\347\356A:\010|\320:@q8;]d!:\214% :\333\253X:\340\\\257:E\200\225:)\304\016:1:\374:\3135\3019X_\231:\363af<\3765^<\025\036\226=\314\2456<\252\222\222;\2021\030>\334\265\2628J\275\016=/\004\262>\266\275\304>\254\203\205>W\360\323>W\016m>\360\215j>\212\215N>Z\233\205>d\345\200>QQ\301>\250\322U>\360\326\215>m\206`>#\260\3169\005\273t:\020\334\267:\354\250\215;\323\357\3159%V\3659h\240G:\255\256t:\036rw:}\\\2609\022&\353:\030cd9\013n\211:\267m+Ch\361\252=\275\255Q=\220\242J@\023n#>B\355\035>\206uf?g\254}94\352\377=:\243\222\301\211\3710?E[l?\361\210\037?>\222/?\337\370\376>\243[\362<\262\374\021>i\204\023\275\224O\220>\002ph=}\274\023\275\005r6\276{T\212:\350\206\2109\245\375\337:/_\324:Nw\272:b)D<\355\365\336;\2767G;\257nn:\231\253/: {\3279\326\016\2639\234\266|;N9\225<~\314~<\372\274\010>\223\250\221<\247\225&</\263C>\374\374\0109\207\350\033=\022t\201?\273\"I>\266\275\257>\\0N>\001h\001>\257\341G>\203\341\032>\264CM>\350\003&>\271\034[>c\021\026>5\341\266=\033\312\002>\364\033t:\210\315\0329h%\002;\033\t\231:g>\273:\335P6<\026x\260;\013\251;;\032\223.:\002\303\003:\212\333\2749\301\017?95\316>;\267m+C\250TC=\204I\241=J\347S@0V\n>\013\264\035>\207H\362>\262s\023:*\235\230=\201+\220\301`\371\327?n\342A?\314\315\354>\304\233\204><\227\013>\n9\324=3\261\247=p\023l\275\023\254\234>!\310\270<\310\312\013\276\251Q4\276\036zr:Ql*:\014g\274;\213\342\364:\230\t\303:\206\353\253;\372\377\262:\020\370\025;\'P%:\233N\267:\315\001\244: \235B:\rZB;~\330\223<\003Z\203<\263\270\360;ql\033<cbx<\204\377w>\207_\005:T\3174=c\035\246?{\014\364>\034J)>M\263\212>\307\370\373=\026\2460>\224e@>F\016\245=\341\232\262=\325E\345=\021\'\301=\363n\305=\352\346z=\020\260\237:1\303k:m\"\030<\255\242*;\204\347\234:\242\324-<:\"\224:\321\257\010;\324p\3509\2750\221:\213\007\276:\010\301\001:\215\257R;\000\000pC\331j\303=1\354\271=j^E@\226\272?>\363G8>\361\036p?)\302\0039{\026:>\023\243\207\301C\203\307?\rk\326=\364\3679>\370\254\214>\232\236z>\330\371\233=G,w;j\367\341<\025\266\001>\305,\373<\214\332;\275\223\237\021\275\370\352F;\031\253\223:\327\261\202:y\277\004;\013\264\366:Q\251\250:\266\234\025;\221\341\320:\022\260c;\302\372\252:\244\340x:e\243\255:6\321\355:\266\345`<\206\245o<\332\032\202=p\024\037<)\036\223;\000< >\252!{8\343\033+=\373\210\206>\333\345>>\317-H>=\033 >\341\244\013>+\373\010>\2233\340=\000\342)>\364\275\026>}\014\010>I\231\013>M\262\t>\357\226\010>\336\207];\353-4:\306\246\':\3437\350:\266k\001;0\t\210:\243z\202;\351\207\230:R+Y;\021\376=:2a!:\266\225\370:Z\027\233:UU\005C\363&g=\376\005\310=\313WD@\333\017\002>5\206\034>\215*\311>p\376\2679\267\337\207=U;\212\301N\321\317?\032h\316=W\256\324>\2264\266=j\372\005=\215\257D>\304\377\2769\243\005\234\275X>\327\275\313>\263\274-\024\027\275*s\254=\337s\217:\311\336\304:\363\305-;\306\341f;,\331\261:\307\'\361:l\007\310:\314;\001;^\021\177:&!\251:\350\016\271:\247\371\214:\246\016\303:<\206\214<\265\021\025=\326{\212>\302G}<\204Y8<\227\334\024>\305\030\r9\343\007\005=j\265C?x\013\337>\340\026\255>i\024\245>3Y\306>\273\265_>\342\010@>H3$>\244[\'>nzt>\355j\206>\307]*>;\200->\236I\310:8e^;\351)\377:1.\240;h@H:\256H\305:\322d~:\212\220\313:\257\327\210:\347\261S:I\346\210:\302gP::\316\261:\000\000pC2\225\273=\312k\005=\257iP@\357u\037>r@\025>\307\211z?w:\"9\231\0350>\316\237\216\301n\334\202?z\235&>\260\327\342>\002\301\223=\320\374\">\223\254\222<v\364e\275\216\351#\274d\311!>\343\250\311<\366ya\273\354\204c\275\350\246r;\353\357r:|Jw;!\221\262;\033\214\354:\326\006,;\350\276\014;\252\346F;\t\346\202:\\\366\205:\324\211\277:\365\237[;#\254_;\346\277[<(D\035<e\'c=\360x\246<\346=\200<\022R->7r<8\267B1=m,\377>\222\254\246>\221\036f>\211p\202>&g\221>y\222u>\250=G>\034\213/>raa>\342c+>\305\2532>Y6F>?\310\005>\210\024\203;\2322&:K\370};\273b\225<\240>k;\255\003\r;i\2063;C],;\n\236E:\372\226\034:\231\237\211:0\300a;C\356\231;\000\000\360B\375\200\206=\300\001\273<w\213Q@\271\327\014>;\334\035>#-\024?\364\314\2009\244\n\331=WG\227\301!L\217?\324\351\304>#\031{>J\231`>\306\352\200>\037\242\324\275@\022\224=N>V>R\233\252\275\214\330\264<\'%*=p\026\307=\264.\021:#/\3129\250\222\035:\222\002-:\336\345\';\323q\200:\257\005}:\241\2259:\251\212\3709d`\3729\033c\221:/[\304:\343\313\201:\344 \351;\334\316\020;\253\247\313<Y5\020<\375\r\024<\233\274\304=\341*\2168\277\340i<Q\026X>m\023\037>\010\004V>\022\311\">\303\227L>>01>\005Np>\300\307X>38\020>\2310;>\317\322F>DUg>B\240F>\216\304\2559\006\261!9\330j\3439\371\021\001:\370\256\027;\003\202%:\022 \241:\315\353\211:\272\240\2779\316\000\2479\004bV:\201[\007;\030\3220:\000\000\026C\341\224F=tl\347<\364^L@\007\370\024>\310\254+>\223\336\264>\275\346\020:\013tT=\234\273\236\301\004\007\336?\311\214\254>\016\370Z?\303\270>>+6\362>T\317\272=\230\274\037>P\0215>\300\\-=\241\251\010>[\313l=\"j\211\275\353|\3719_A&:\220MC;=\360\246;\306\022\027:\203v\255:\227\025_:B\216c:Lt\3459\036\355u:U\367\035;\t\371+:t\256\350:\031\357\275<\322\313\n<\253\257p=\367\2037=\007\035\352<~!k>o\"@:(\t\006=_\360\323?:\357\334>\tm\205>\342\014\001?\321D?>p\300$>\207 &>\334A\024>\035K\023>\323_\027>\217\322\">\370\350(>\211G\001>h,\3439\272%\021:*4A;IFl;\'\363\3359\224\355t:\224qy:\214\303c:\345\326\3449GZ):\2257\363:?\254\000:\303:}:\000\000\360BB?C=\252u>=\312]C@\326Y\350=\\\026\014>\025y\260>.O\2479&\232|=\3314\217\301\021\217\332?\314\236\241=A(\306>\320\263\234\273bS|\274U\305\266\275\355Hz>\005K\013>J\330\002>w\270\370;\\\226\224\275?:\022\275\262\027\024;\314O?:\242\253\022;\265\257\315:\224_@;\211\335@:\'A\225:\254\254\264;r(F:F<\310:z\243\034;C\t\211;$R\n;\365\217\021<\006Jo<\327v\002>\242\0053<\270AP<)T\214=\004x\3678\322\307\243<\330\0226?%}\254>D\222\236>iS\006>@q\264=\3221\341=\"\247\005>T\252\316=\305\216$>X\026&>\236\r\020>!\177\014>\266;\'>\304\374\333:\001\364\3569G\345\206:R\351\261:\345|\020;\034 \034:\020\030N:\317D|;\325%\2679\037\251\274:\'\225\274:\261fp;\312Y}:\000\000\360B\333\370\237=\305\243\226=\367\304Q@\000\256\">\326\227,>j\2209?M\331$9\333\366\354=\341\222\206\301\356\352\237?\027\237\221=\231\023\344>\250WL>\001\206\035>M\265q>>\240\266>X\377Q\274\3254\235\275\322\361[\276\226\356\002=\025\375\341\274:\265[;v\231\217;\356\277\362;\262\355/;\227\031\225;\201\342\323:2\367\217:\321\327\322;#+\266:\325\340\365:\354\333G:Qn\355:\314\306l;/\223\207<L\t|<Cg\300<OA\255<\252\253h<\302\362=>,\313\0308\372\242\006=\220\253\t?h\324\030>\300Zb>\235\353\320=\370\223r>*\003Z>\277\227\027>\316,=>\000K\023>\003\355\363=\371\333\020>Me\370=\332(\317=\030\224,;\327\006>;\375\361\265;;*\340:\007\373\360;\014\220\t;/\354\031:Ps\377;\317\304?:\363\222\334:g\366\3379_to:[\262\r;\000\000\026C\325\234J=\017vD=\204\225O@=\264\007>)<\036>\t\264\277>g\\\3439\252\214u=\316\341\222\301\370>\336?\230u\302>\325\225\377>\206#\224>\271\301\242>\314\271\341\274\021Q\277=\210)\233\274\343\343\274\274d\315/\275\2520\307\274\224\375\006>\270\251\360:\314b\234:\305(\375;\341\226{:\206F\276:\241\357A:}\\\014;\222z\237:`\2503:=e\032;lE\323:Y.\306:\021 ;;i\257\242<La\037<\345\330\217=\033\250\242<\214\265\204<\216k\000>\261+\\9\252\345\013=\323S.?\312\373\225>M\352\267>\350\243Y>i\347\024>\376\331\363=\333=\006>\357\357\004>\231\212\002>\274\331\346=B[\350=\244\025\025>\343pI>\330`$;j>\235:\243\353*<U\327j:\027\356\014;S\223(:\367\035\250:m\326\244:VG7:hcX;t\233\365:\346\230\246:J\227!;\000\000HCP\262U==(\001>S\247R@\376\363\374=\306U\020>\340\244\333>\311\277~9\005\356\240=\007\234\202\301\257\001\263?\350\273\236\276\374J)?/D\237>\354\033\240>\321\226\224\274QN0\276\367K\236\275\\-(<(\352\320\275x\315\'<\341\230\000\275\204\307\220:\004\373C:\272\210\234:\3344\216:2\025\006;\037\360\272:\265\314\204:\237,\223:\226\371\215;$&\315:Z8\323:m\"N:\330\222\260:_\274:<\010\360*<\233\301\243<\313!\'<\375^\321;Z\r%>W=\2508j\376\373<\376\212}>u\355K>}V%>D\326\374=\n_\302=\270\222\013>\250\225\002>\266\003\374=5\267\n>\271%\362=\203t\305=\222n\207=\211\033\365=z\345\030:\222\025\2369\246\320\005:\n>%:0\342\367:\033\031^:\374$\3529[\260\3679hNL;!\374\211:\007\311z:\252\005\3319\223\344\':UU\005C\213\\\210=\330\t\314<\232\374H@\307\'\036>\265\037*>O\266\014?]\234\2129|\377\261=\267\244\225\301*N\302?\234o\226\276\223\217\273>C\022\222>\310\026\252>\250\220\342=\207e\275<\327\013`>:\270\244=?B\343=U\271\322<\264\332i<>@\250:\214y\246:\254\244\362:\0069@;\220\334\262:\271\257\000;\337dB;\305\333n:\007j\322:E0\213:\016\274\231:AW\177:\006\244\326:\255\013L<_\t\314;Im\272=\342\224u<4(\002<\200\215\003>@\220\2278(U\372<+K\"?\260n\236>j\230\250>\022g\251>\242qh>`\241\033>\351\003Q>\327\031C>\2038T>\306\223\216>\241\022,>\201\257i>\256qY>;\036\264:\331\006\277:\367\305\245:^\251\032;\301\206\242:!#\022;s\373f;y\330#:\r\357\024;\3067O:\224\223\207:\205\212\237:\273\353]:\000\000\240Br\006f=\232jd<\023P7@\264\361\244=\310?\265=N\377\354>\020\'K:#\222\303=z\263\247\301\210\302|?\322\357\031?\261\362M>\023\274(\277\326\300L?\241`\350\276\'(\240=\256\372\340\276\332\346,\276q\312\340\276\332\025\323\276\263\016\027>Q\376\345:QOP;\252\276\322;\3333\201:\201\233\273;\263=n:\375\305\210:\365\341\242:I\372%:yV\247;\327^\027:\367Lk;\222\325w;`\206Q<\003=s<\306\270\237>H\317\345;\252\034\236<\'\315P>\321\376\2259\333j+<\362\004\270?G\340\013?\030\316\356>*\331C>\254p\321>9\205\226>\004\324w>\341\200O>d\001A>\024\233f>\221\034\207>\223\251y>y\313\200>\311-\276:\320\223x;\r\353\025<\241\334\213:)\274\346;,t\221:\3074\244:\201\230:;L\3438:\340\347\207;Os\3779\254\003\304;\024\376!;\000\000HC>,D={\331\'=\253)N@g:\330=`\032\r>Q\n\245>\177\340\342:)\361\215=Er\242\301:\344\265?\247?\300\276\332\234\022\276\000@\200<Q\007\303=\344\211\351\275\216t\337\274W\274V>y\320\254\272b\314\362\275\224Xa<\362^\360;O\307R:\242\0261:\010\333\3429 \327\023;\2645\2619`\363\001:\271\313\030:_\326\3559\333\347\023;\3256y9\033%\223:\267\243\2049\267<\265:\352s\235<\303%\341<\233I\272=\377\322\251<\342\016\272<\365M\221>\253\341\315:\215\003\031=0:?@\273\'m?\266\237\006?\326\264\266>\203\360_>\0100\220>\312\002\364>\213\351\310>dx\230>\343\234\243>\020\267\217>\367\317\271>\200\237\207>\210\232\221:\245\347\264:\276u\016:,Ej;\307\030\3369\364\224\030:\256A\337:\tU,:\365\202\225;#e\2679\'\252\';\350\226\3209\372\233\276:\000\000HC\236wO=}Z\033>!rM@[m:>\255\3772>\221\324\002?\001\350\3049\304,v=3O\215\301\305s\214?g!\205>4\3705>\351\260p>\2060L>\327\256.>:\355\214>W7\262\275\354\362\016\273\343(\023\276\247\177\016=kY\035>\245p\3119\n\025\034:\231\2704:(\301V:@\327\234:z\004\302:p\207y:\260A\305:\200\256\2209\031Y\013:.\337\2359\016\246\010:*\2207:1\246\203<\n\026\005=\233\340\001>\020,\273<\271<\350;\334\274\007>\240\257\2009\223\266\'=\367\025\343>4\263\275>\321k\364>q*\214>\270\300\177>\371OB>\213}^>\357\245\001>g\237$>\241\355\023>_\221(>\323\"\316=67\032>\277\340\0249\241\337\023:<\347\3019<<\004:\000\336l:/\331\";\024\367R:mv\241:\2068B9[n\2649BlR9\203\226\2519\000P\034:\000\000\026C\310\003?=\363\237O=\352@N@\\\310!>\374\220<>u3\230>\204\206\014:D\326.=\033\266\230\301\2610\377?H~\232=\240\266\371>\331\254j>zk.=\311\375\350=\021\203i\275D\210\031\276\312\366\376;\270\271\305>\327Z0>juM=\260k\3169\177\320=9\310\354`:\377\267!:\367\352=:\224M\222:\0060\202:\310q\001;\304\246/;2\205\332:\343\322\033;\220\320\036:\264{\263:\220\345\025<d\373\202<0)y=\360Gx<\327x\016<\314\313\257=\275:F9c\204J<\202i%?7,\237>w\233u>\345\322\235>~\345(>\016\0140>\314\222P>\346\324{>U\363j>`C|>\260:\217>(\302Y>\r\000\201>\327\014\3179\337\305\2179\300]4:\031\241%:\210\0058:x\321\200:\212\330\272:Yq\370:\352\246%;c\366\325:U4\r;S\273\304:\270\3300:UU\005C\350~d=\005\346u=\226PL@=\332\002>S\t\034>\366W\315>O~\3009\334\222\227=P\367\213\301@V\313?=\317\234\275\033\334\223>j^\303=#O\211>\2112\317\275\t\207n\274\3162^>\006t\010>\003\276\301=\361\235\306\2751\253,\275\303\203|:\332nB:\351\006\357:\322\360\023;%\001c:\371\005\263:\345\341\232:\005+\014;/\205[;\351*\035;}\021t;\361\305\321:Dq\365:\302\0169<\'\355\215<\346\350\215=s\377[<\275\332T<8r\000>\3325\3428H\213\251<\306\0321?\265\026\367>\351$\006?\266\031\334>\313\022b>\270T\220>\224}v>\356)\203>\037\257y>4\316\207>:\035x>\021\236l>\326\021&>\325\256[:q\3111:\254\341\334:n\354\006;\336\241\222:&G\343:\365\007\243:D}\007;v\204\203;CW\311:\372\315i;\273\224\274:\277\224\207:\000\000HCM6\243=\3558\207=\331rP@\207\307\032>\313\220\037>\221\370@?\3367E9\t\375\003>\275\323\211\301E\031\251?\341\321\360>\234\335\221>\222\362L>\227\245\234> \311\235\274\037\3243\274\370\210+\275\375\035\013\273\267\214\365\273Lb\310=\333\264\013>\3518\230:\322\367\233:\rE\324:U\001\333:\255\234\201;\355\013\301:\375\243\354:I\367\330:\323\220u:%d+:\300D\211:\3143\215;\342!\370:\315\340\027<\353\277#<\243\035\344<\331\326\022<\335~!<\241\\\315=\223\367|8I\'\235<V\236M>t\304`>\365\004\021>\300\317M>N\034\016>\016\265A>.\274\320=\002\212\r>\225+\001>F\202\n>iy\375=6\375\354=\221l\364=r.\236:\352\013\200:7:\222:s9\221:\007\357\215;k\303\230:\272P#;j\362\251:\227\2003:A\024\003:$+`:|>g;\200\350\216:\267m+C%N\254=\307\205\277=n\206S@[z1>S\241,>\260q>?v\314!9\005\021\363=J^\210\301\372}\362>Oj|<\227\035\213?y\177\224>\022\355\205>F\236\262\275\317\035\361=\312BQ=a\177\005=\330\023#>0B\n>\356~\353=\221\3449:\242\003\031:\007\214#;\304*\212:\342\224\251:\320\210\245:*\330\364:\367\274\230:\330)\3649\216\033\3769\030\246\013:a\254\3649\2239\212:$S\010<\003\374\026<;\224\223<\300T\274<{\224\245<\\k\231=\023\336\0238\013\374\235<\366|W>5F\223>\246\312\005>\366\234[>\002:\007>\306b\337=\375\014\032>H4\337=\326K\343=X\376\370=\206I\313=\034\306\373=\020\315\243=\2778\t:\006\343\3339Z\272\307:\276.+:\374=\016;\215\031\017;\323x\225;NF=:\347\306\2119\2311\2729\360\372\3029\031\317|9\017\263\251:\000\000\360B&\t&=\357Q\242=>oS@t\241\377=#\034\034>v\323\246>\366L\2259#\3171=\310\243\214\301\325F\351?X}&?\272\263\n??\212\251<.\327\235>5\311\177=\215\224\005=\263\321C\275\304a\020\275&\344\343\275#\234}=J\226\273\2749&\030;{\332\221:\005\177\215;\302\233\":\025\331X:\304-\217:|\217\325:d\357:;\302\334\232:\002\202\270;\311\275\001:c\351\024:}\245\006;\2261\276;\305\243\261;\324_\034<\327s\201<N\0249<\342_\200=E\246\2628\006\307\211<6\343?>R{\001>\324\352\323=\301\212\207=\270r\236=\261\026x=e\034\261=I\nQ=\327\372\255=K\324\205=Q\254\215=\346O~=\234\232m=p\202\330:}xS:\377\237N;h\340\2169\332~\016:4\226[:g5\334:\276c$;\220vD:\322\310\025;\232\241\2229\277\353\3249\300\2543:\000\000pC\352\317\372<\257\034\032=\316\305N@B\340\265=(t\372=C\315\033>\213\370Q:z\2536=\251z\231\301\236\037\016@\023\273-\276\375\343#?\266\003\177>\317q\216>\274?\001>uw\007=Rk(<\200\234M=\307\370\226\275\252\310\244=\002\354(\276I;\t;\222t\345:\372\316\014;\230b\264:\222A$;-9\330:\324\031\032;p.\036:\274\311Z:\302\\\375:\332!\014;,\002\224:\213J\374:\315i\353;f\247=<p\225\206=\327\351K<\217\251><4\276\265=\207\026\3639\237,\221<\217u\204?\312n\325>lT!?\377\177\271>\313\276\331>V*q>&\205\211>k\253v>\311\035\265>\200\250{>dhP>\376\325\204>\345\262\246>\003\265$;\243^\215;\361\330\334:\376\371V:\352:\003;\361\345\006;\236X%;A\343\014:\222R\217:\326\021\373:\202\2572;\023\345h:\242\032\203:\214.\332B4\204\302=\200a,=\367\371N@\322\301&>s\243\023>\272\311\223?\\\344)9C\204@>\025(\221\301/\362V?\241\331\371>v\003\312>\345\213\n?vA\312>\353l\365=e&\360=\265\307\303\274\245\206\354=_\354\275\275\352%\200\275\243\235\263\275k\033\001:J\013\3519`\254+;,*\300:`\237\024;>\013\n;\034\310\207;F_\307;\022U\251:\371JQ;\246_\205:\205\207 ::\3133;\367c\243<\326I\t<^pI=\320\336\213<\201\025\"<[q\203>\334\266@8\210\201\035=u%\345>\034@d>\226\356\233>\014\3431>\316\216H>\265\340\031>W?!>4WC>\203<\">\254\211/>\'\306 >:\355\021>\366&\322=/\000s9YB\2439S\232\000;\335\330\005;\220\267.;\346S\201;m\375\233;K\337\021<\r+\246:\020\353\013;\020\362L:\2674\3269\344\'\033;\267m+CQ\271\215=4\006\214=\250\322O@\205\005\010>Z\364\022>}\236)?\222\02589\334\310\333=%\020\207\301\310P\267?X\210\250>\362e.=)w\376\274\336\'F=p\371\220\275\354[6:\252aw\275\351\013\014>\316\303\224=*\216\t>1Dh\273\003\010\275:\340\275[:\300\033\021;n|\270:\245kJ;Kl\027;\350C0;\003\177L;\016\315\301:B\217\";\261\355\202:N\\\270:\201^\331:\341\0315<\02757<a\231\014=K\343<<\014\335\n<|N\335=\242+@8\203\261\214<\214f\303>\351-W>\323\031d>h\206\001>\302|%>\244\026\374=Pr\357=\337\203\327=\326+\346=\315\364\363=\237\016\005>Q\200\033>\214\322\361=2xp:m\265\006:K\303N;\266\253b:\223\325\005;\025)\367:\223\334\366:9Ps;oI|:\204\320\323:f\323.:\377\261\300:\371B\203:UU\005C\353E\203=eP\256<\'\225K@9\n\023>\017\352!>]\310\031?=\322\2719j\267\324=\276\317\231\301a\227&?\257\254\237>I+-?\321\253:=xZ\021>\352\305 >z(\270>\264\303m>\243!\025\276\006\261\226>\341\313\">A\035o=-\214\253:\024\223D;{\013\324:X\275b;\266\312\275:O\360<;\373E\237:\255\343\024:F\325\236:\320p\1779\272\372]:\326\213\2659\205\262\t;T\231\001<\231)\227;\333\355\271=\216\212\'<\300\372\036<1J\030>\022q\3008O\260\213<3\306\327>\275*\237>\302\261\232>X\t\224>lo\233>\212KX>\365\206\253>\204\'\225>\223h\300>\266\207\236>\nv\244>\235M\\>\305\227z>)\373\237:A\024\345;\301~\242:\311\371R;\216av:\200\311a;\226\201\270:r\252(:\245!\352:\020\17759\243\213\224:\313\266\3109\340L\345:UU\005C\351\t\"=<\312Q=\345\353O@v\'\013>\000\351.>+\360\\>$\262\022:\357/\364<\007\013\226\301\271b+@\273x\224>\235UD>\337Wu>\013u\331=\260\244\200=\315\000\364=\277\240\034\276\270\206\214:x\250<\276n\250G\276\254\013\311\275\233\022B;\356\264\257::Ii;k\201\210:x\200\226:\347\302\006;r\276\3769\013\352\342:\366\226\":Wm\240:[3Q:_\t\177;\347\233\t;\353\014\222;\217|\271;\212\311\t=\374\373\004<j\326\242;\223\334\034=\213\014F9\377:m;\263\313\201>\034+\014>\202C3>6\214\007>\225\216\023>K\024\352=8\334\313=\257\271\357=\010\000\306=\002{\033>xB;>X\271\307=\361\321\201>~\2276;\017p\271:3\232u;\317\305\211:&P\254:g+\022;;#\2619\361\324\344:G\215\3209C\037\301:\271\350\026:\317e\207;\'}\210:\000\000pC_\036\372<\334\371\025=\300\272F@\260\266\337=\030$!>\2332\010>/\251\335:j\257%=y\201\245\301/\250\034@\311e\013?\201\265\333>[=\014\276\020\336U>\301\031\211\276r\257\237\276}~\325\275\306`6\276\365\221\320\276Y\214\232\276.\305\027\276\307\022\203:\374\226\256;\275\322\201:,I\013;\315\255D:wV\000;@/\344;r}\304:#;A;\257\211\027;8\030\023</\340\326;\221\273\327;\370\237J<\354L\250<\316b6>k9\311<\262\370\247<\002^\330=?\224X:h\331\320<\360\027\312?T\356\376>\314\243\347>H\367\273>\251\017\273>\3117\242>1\370\250>\263\014\310>\270&\307>ij\267>}A\226>\336Wg>\023@l>\0044\312:\326S`<\254\r\373:\315\316\254;T\025\243:K\310g;\240VN<\310\013\027;\344\340\252;\030\030$;\360^\261<0\203O<\373r\336;\267m+C\216\3559=#\036\225<:\212C@m\371#>#\340->\017\324\327>\036\275\2729LIv=\342`\240\301/\304\024@\354B\034?\273\330(?\222<\223<I\302\002=\370MR=u\347\205=\363\241\233;i\334\301\274\306\021l>\246=\023>\314\344I\273\354\372 :\312LW:*7\230;\342(\221;\206UO;\256R\031;C\222d;\305\375\335;3\360\366:?@\3319\376\337\013:\034T\030:\257\231>;\271\305\r<\360\017\002;\272w\241=-\245\203<\270G\277;\177H\004>T\233\3678Y+\253<\204[\242>\017\210[>\240.C>k\341B>ip\022>\334\340H>f\332%>\315\035=>\206\200\\>W\266\'>\356^;>X\246\322=\350\314\360=\207 \3169S\204\032:\331\036\023;}(\236;J%\031;\222M\001;\373\357\216;W&\316;@\001\276:\360\214\2779\371\304\2079l\003\3169\341?\342:\267m+C\031\231i=\372O\265<ohF@;\006\r>\255\345!>[\361\342>\356\211\3529\276 \240=\232\377\231\301\307\303\274?\263\232~>]DH?\304\021o>\010\032\237=pW\215\276k\003\216\276\233\245p\275\265\345\330\275X\352;\275\302\375\345\275Rh\306<\254\212\242:\237J\363:1S\215;\3101[:n\265h;*vQ;2\213\312;\255\335 ;\340\217\254:\013$S;\365\204\301:\275\007\314:\313\t2;1\266w<\311\246\r<U*\014>\377\207}<\371\223\211<6\321C>h\21449\010D\030=\337\376S?A\260 ?\222\206\346>\327.\302>\203=a>\037\000t>G8z>\032\277:>OD\304>\202}s>!\212\210>j(z>\3042D>t\242\234:*\006\031;\364\311\244; \026+:\336\232\206;\"\371\030;\322\032\267;\225\272\007;[\224~:,o@;\373\345\232:\255\315\327:\207\217\307:\000\000\026C\253:Z=\300\024\256=J\327S@\365\306\004>\022\370\033>\020;\352>\343\025\2679b[\231=\013\237\212\301}\030\341?\341\266\375>=\324\010>\270y2\275\277\322\260<j\310\363=\307\353\275=\033M\262>\360Q;>\006\210s\275\221\333\212=\207\251\255\275&\354\236:\246\030\3429H\025\266:\266\255\272;1H\272:*\321\000;/\007n:\350\225\363:\025\031\323:\2423\330:E\0316;\236\024\":7q\017;Y\277\255;b\233\027;\340\315\325;$\240H<\200\274\004<\321\007|=R\000\2658\016\255\n<Z\370\231>\367\223\357=\254\327e>\241\273=>\273\276\261=\327\354\017>\213\020\361=\271\231\357=\007>\243=\223d\227=\206G\360=\374\246\016>\217\235\016>\356A\244:\320[\3429\241O\273:\366\375\262;\024\310\226:QH\034;\205\323F:\312\307\367:\035\367\315:\251\377C:\210\375K;\207e\3379\372\372\235:\000\000pC\2775\215=\216Y\234=m\316S@\214_\372=\201\223\004>\305\216.?\240\372|9\307\223\347=\357_\206\301\357Tr?\226\222H>:9\"?\365?N>\0007x>\341x\330\275\255.A>`h\022>\3129\006>r\253\275=\326rt\275\337\234\200=\347Hw:\273\332l:!B\230;\343\nY:\3552\300;\321\2713:\026\262\355:\023a\372:9\013\200:\323p\303:y\376\272:\271\272\252:\211\"\017;\031\230\013<Q\370\320;zq\354;n\214\243;G\323\365;\363\024\331=vK\1778W\262q<G\321\205>\266\307\220>(\203U>\026\221p>\275rc>\037\027e>\337\2044>\362:\001>z\232\t>\224[>>\235\321\021>\376?\024>\337\213\354=q\365\017:\321\302\213:\276\233J;J]\031:\207,\316;\232\256\004:l\331\307:\266\255\257:+e\311:]\252\205:e\312\246:\340\020\270:\363\320\304:\000\000pCk-x=\310G\271=\341gN@\231W#>\304\3310>\223k\365>\306n\2279x\373\220=A[\213\301C\365\323?\360\024\224>\231\352-?5\014\002>n0\033>\250\354C>r$\320\275F\317\326=LX\226=\363\202(\276K\006\035<\360\023u\275\030o\325:n\3024:\262\272\322:\331\267#;\236\302Z;\341\360\001;\000\214|:\036\004\200;0\244\023:\364\203\230:2\302\203:M\255\032;\013\235\004;\260\333\205<\253\266\246<m\237\354=\207\374Y<\213P!<B\2567>\374\262.9\222d\033=z2]?\225A\260>}\035\336>\000\0027>,\204I>\201\376\002>\361\3665>\'\276+>[2\027>\033\370\014>\324\2416>7X\021>]\216\376=\227\022\317:\351\376\3659%\313\317:\351\355m:\237\235\320;\350z\206;i9=:\200\240};\006%\2469zfA:\255\302\3059\222\264\201:\343\032\344:\000\000\360B\362p\"=\013s\003=\355GK@\257\356\n>\340\326(>\210\204s>\200_s:u)\036=\242\324\235\301d\010\017@\364>\240\276/r(\276\177\367\355\275*L\302\275\216\362\\\276B*\234\275\2405_=\275\004\253=\352\371\241=>\265\004>g+C>\330\366?:\212Q\032:\337\007\264:\317\005\303:\353Q\371:a\367\035;T\021*:\204\301s:\347\340\254:\230gs:h[\340:\351\366,:\322\027\373:\217\374S<\306\214\311<\254\033\262=D\305\002=Cw\221<;y\013>\243(\25794Zm<Z~_?\004#\310>\207P\361>\265C\275>\230=~>\236\223\200>\202\016\221>\241J\254>\377;\202>\366\013s>\201\340\272>\314y\233>\260\244:>s\t\330:\207\226+:g\330_;\232\326\n;Q\254\221;J=\344;\004{F:\250\270\365:\003\302\367:\237\257\256:#\226$;\034\217\305:\372\245\014;UU\005C\344\023\254=c\2412=\267J<@\230A/>\264?5>\330\2313?5j@9\3227\334=\2615\220\301\001}\226?\210pG\276\233\300\210<\215\177\317=#\355\362>\320\356\350>\"\025A>V2b=~k\226;E\244\017\276R\342\316\275|\\\236=*\327\372:\326\241\274:[T\036;\026\225\277:\273\306\321:QN(:Q\035\006:R\335\025:;)\274:\210\\r:\021\330\037:\377\0107:\"#\224:\374\223s<U\017\027<l9\030>{\270N<-\340\333;\036\221<>{\022\2038\030\214\376<\223y\245>\003+\222>\266\363\221>%/[>6\026?>\030\304N>3\240\024>\"\372\034>\202\023\036>b\213?>&M\022>\211\341\001>A\0105>\247ei;\350\323\247:\001d\000;\321\327\220:\355\251\244:/\224\3169\363\371\2379\374\251\243965\205:w\2024:\372O4:\267\343\3149\261\245j:\000\000\026C\374\274\233=x=Z=~\'P@\314\363\021>\306\300\026>\3434=?\376^b9\245\266\344=\301b\216\301\211\345\214?I|\021?\342\363\276>?7\313>e\317=>n\264.>B(\221>\351\255\345=\346\272&=\021\303N\2769v\324<\323t\031=\223\336\322:i\205-:\342&\';\234\276z;\301\000\001;K\016k;x\333\235:\307\207\300:\345\205S;\267Qm:\000>\362:\342\'>:pN\t;`\275\212<\2222(<\321\275q=OFx<\035h\003<\327\342E>fN\2118\232\354\003=\317\2114?\240=\224>e\337\253>@\311\010>\243UO>\335\213\037>\244\232D>\265\031\302=\004\031E>:\304I>\333\013\020>\224\207$>\202\245\350=\207\027\334:\201\372%:@2\366:B\244\224;+\262\252:klJ;<\365v:\262$\345:\356C\216;\310\245b:\3279\374:F\354\005:yV\250:\000\000\026Ct$\241=\340\323b=\2770L@\020\235\023>\316\347\030>o\343/?\376\362h9w5\351=Tw\220\3019N\240?2di?$6\034?\203@\240>4\272\335>\242X\235=\311\036\311=2\237\254=W\025\231=\303\025\276\274]n\"8\035\371\266=[\301\303:V\273\2709\342{9;Y$\204;\371t\031;\033\217w;I\342a:\254\002\362:\305\247p:f\307\006;\244\214q;\216\236\276:\004\256\020;\226%\025<K\230\277;L^U=\355\220N<\362\354*<\301\007\306=\201!\2018\254\302\221<\255\314\353>\210r\\>c\376\263>\376\366\n>\312\315\032>zB\304=\206\354\345=\\6\327=\355\032\305=\374\027\027>FD6>XO\376=*\207\356=\203\353\300:K$\2009B.\344:\330\205X;\376\233\373:@\305a;H+;:\2313\330:N*6:\256e\013;\351Ht;\236Q\277:\362\211u:\000\000HC\300v\217=i\205\236=\333\313P@\007m\r>3\317\026>\356\251%?\025\nO9\255\334\334=A,\207\301Y\217\253?\001K\177>=G\317>\377uw=\350&E>e<\001=.\225g=\250;\020=\001B0>6\025\300\275\216\343]=\240\241\367=\334\354\315:}\315Q:!*O;X\230\224;<\030\000;\377\253=;F\006\257:jV\000;\030\300\264:Y\364\355:\241\234\272:V0N:\332\232\366:\203\023\020<8\3013<\027\366\031=\310$0<\r\363t<z\025\343=\220o\2148\265\237\212<\'\247\311>\031\354~>\341>\251=\201w\267=Ab\267=\355\333\373=\224I\324=\344\373\002>\232\374\006>\327o\254=Nc\177=\255\005\204=\202\213\251=G\341\220:?p\3279\237\366\031;\017H\263;\025\000\271:g\3113;I\203\203:uQ\272:\347u\227:\t\255\231:\361z\232:\372V\3429\273W\241:\000\000\026C\221\004\276=\257\030&=0\367Q@d\017\037>\023\372\024>\230y~?\365\261m9\301\"4>r\373\220\301\341\255\235?\234^|\275g\330\231\276\241I\007?\311C\016?\221:\237>\311\332\225\274\265\345\t>\177`b=ZqM=Ir1\276\372&\205\276\000\332\t:\347W\2779\224\004\235:2\327\314:9N\230:4\207\007;A\270\216:\333;\017;^\250];\273\206\202:\343\206\307:\001\361\010:\312t\324:x\247#<\023^\231;IA\266<W\010%<@H\267;\031K\r>*\306\2018,S\220<\320^y>\001\'\033>q\224I>6\231 >tk0>\037\346[>2(\207>\343\357\217>\235k[>\347\3038>+?q>\005\")>OT\023>:\261\2229\230\351\2549\331t\200:k\375\331:=A\230:\253(J;%\274\275:iL1;\333\230N;t\\W:\214[=;$:\3059(R\224:\000\000HC\"o\203=\350\326e=\002\"N@\233y!>)F;>\253\224\347>#;\2519\323\352\220=\220\224\215\301\300\332\327?\266\262\331;\013@}>&@\362<\235\321\027>v6)\275\337u\007>\376\313\237\275Q\001\225<\253\313j\272\330M\375=\234\354\266=\227\325}:\232P\212:\250\324\231:\2240\363:\010\033\346:\035\322G:\326\320\204:\225\014\223:\206\241\300:T\354!:\325\022!:8\320d:\036\323\206:\364\3268<\235\311`<\261\316\177=\365v\212<\207\212.<v\030\007>s\022\3628\316\036\226<u\017)?\336\026\202>\314\002\206>7\372j>\345\275\035>\007^%>>\232x>\211\350g>\332\215<>\rj\220>s\306\212>\022\0365>|\365W>\\\203`:\004\375\301:\3366>:\212\316\256::R\264:\003F`:F2\222:\336W\256:\353F\014;\344\350\3759\006\"\022:=+(:k\333\020:\267m+CN=\021=\252\333\234=\017\361Q@N\300\003>\017\355\030>J\376\206>\003\372\004:\245\2564=z&\227\301\246\332\271?\246\\\356\274\3352\275>0\277\363<%\252m=0\354\022>\004\345\005>\327\261#>\211\330\212\274Pe\213\275\360d\026< \265A\275\'\242\036:\302\330\037:C\273\242:\2668-:-b\001;\336x\032:\276K\3319\217\342\\9\330\362\234:\333\350b;\253\223\3029nd::$\212\225:\271\014\021<\373\275\037=J\242\233<\037A\246<\362\325Y<\367\361\265=\307\364\2149\2115i<\273\252\r@d\220\223>#\330/>\351\355\026?\027\222\270>\373\020\220>=\250N>\242\373\024>\2170\030>\232\013\350=hD\">\331\267\265=SoL>fB\3019\273>\3419v\340s:\366 \3619a\320\332:\303\266\3559f\360\2729\272\305D9n\257Z:\323/x;3%\2159\372\233=:\005\336\202:\214.\332B\214\235?=\371\335\030>+\273M@\3568\346=\254\267\r>\035\252\266>\313\214g9\037w\230=\004\335{\301\323g\264?\360\236\256\276:\204:?B1z>%\221\345>_U\331;\233q\026>\264RM<\036-\027>\327q\234;\372\225X=\251\027\303\275:2\306:\031\320[:$\234\270;\300j\200;\324\210\307:\314\375B;\251\322*;\250\353\203;#E\356:BUq;J\222\261:\243\254\302:\357\321\010;\212\023\306;\000\007n<p\225L=\014`H<\314\200L<r\232\270={\021_8A\316J<0TU>f\323y>xj\226>2\004j>\225U#>\323^!>\031@\034>\365n\357=\032\223\032>\253\2475>y\017\027>\210\033.>,\006\264=1Vm:\310\314\3509\221\\D;\347QO;:\306\264:\016\207\001;}\373\306:n\254+;\255)~:\350m\360:\002.<:\027\rG:z\277G:\000\000\026C!=\257=\322\360\217=d\246R@\231\233\">y\275\035>\004\314^?\336,;9\375\204\026>\226\334\211\301P1q?\273I\331>Z}\340>\255a\274>\275zF>\n\204\203\274\3050\235=\266S\330=\260\026{=\031\021\020>\2149\005\276\273\362(\275\265Zq:\361\314\007:\341?\017;^\244T;\226%\216:\211f\363:T\002A:\314e\340:\233\330\254:\007\020C:\005M\256:\033\335\3469\300\037\241:\364w\350;\352w\245;\310~a<\033)%<\217X\014<\354\315\271=\177\371^8\220J.<\276cP>\234v\265=V\273Q>\320\325\353=V\336\001>\255\027\322=*+\007>\'\200\005>\261\031\332=\355\'\364=\231\236\361=\324 \323=v\311\020>%g\002:{<\2139\321k\262:\2669D;\216\367f:\270W\310: 6\3719\244\003\256:\340\235|:\350\210\001:\202\2306:\377\010`9T\277,:\000\000HC\236\250\206=\267\306\311=Q\257L@m\2074>\335\025O>\303g\307>\r*\2739E\010^=\210W\216\3017\202-@\'&\321\275\262\257\243>/\251(>o\304\024>\016d&=w\'v\276\353\312\346\275\364\227\234>3\'\240\274\337\232J\276\372a\367=\006\303\221:ay\230:\315\340\206;+\352\246:5\241\277:\\\002a;O\353\001;\343\326\370:\271\0232;Jd\373:j\017\034;(\302r:\350i\017;Y \207<1\362\026=\261W\247=\253\036`<\211\244\263;\341\261->M\350)9\024#4=\377\036+?\317\245r>\214\252E>\177\260%>\360[.>\275\371\347=,\256\350=\377\211\377=8\250\031>\265:\036>\260\007J>\326\033W>\343\373}>\300\322\273:\354[\303:\253t\221;\213\326\177:l%\260:\243\275;;}k\342:x\364\242:Z\221\200;\323g\027;\373\347D;\036)^:\360z\236:\267m+C?\321\242=\364\240-=\266\317M@\261\005\031>6\204\034>\320)<?>\313e9^\326\360=\263X\215\301\212\211\225?\247z\031\274\3420\247>\035oF>\277\241=>@\252\213=\321\375-\276\204\334\326\275;>\213\275\337\331\222\272\036\304\233<`H\004\276\365\361\273:R6y:c\223M;T\\!:QWG:\367\366\234:m\302\350:\302k9;xF\245:\322\364~;\232G\342;6\004\263:\211\336);#\235\243<\033GC<\351\266\220=\213\025\303<8\344z<\034\201e>\336\307\2518\025\033\364<\360\345\017?_K\235>]\241\314>t*\204>|\210N>\313Fe>\307\347/>CGd>\264\256E>k\217A>f\t\217>( F>\202^\035>\371\217\324:+AH:\367)s;\320[\3519\000x\032:\017M\214:\272\r\365:7\334\033;\340\013\214:\005M\223;`\242\267;\225u4:r(\317:\000\000HC\372\347\265=\033\221_=\201\316R@6\301\030>\306Z\016>\031>r?\227u697q0>L\320\213\3014\320h?\247IO>\372\376&?\005\302U>\200\312\003:\323\007\357=\330\224\247=Y\234y>\334g\357=\371\204\264\274l0\307\273\217L\320=X\341\352:\277\037J:\355x;;\025P\332:\224\035\205:\363k\343:\313\211\264:\333\264\034:z\027Y:\365v|:D\\\273:h}\330:8\263\263:\n\256)<^\314\'<x}\217<\007\260\005<\014\031\013<\343\236\345=\333\330p81M\301<\265\301\351>/\350\236>\324\316\223>\262\360\233>\210\205\232>A\267_>\335\322\036>\220\342\025>\022Q\016>q\263J>y\n;>e50>*\302+>\232F\367:\244\247\3769\325\244X;I\275\277:\320\353\033:\354\034\350:\210}\222:j\017\001:}?&:?\227::\003\226\260:(\235\311:\325\257F:\000\000\360B\276\213y=\224;\231=o(R@ZI\006>\341\022\017>\027m2?\306\203\2179\2650\350=\304\246\216\301\014>\030?\210\010j?\305\233\241>\335\205\343>L\250\020?\330\277C>\267\205\220>\365)d>/\265T>\010\344\317=n\222(>8\352\207<r\236\3639\t\220\035:\370\224\257;\314\271\326:\000\021\252;\005\263\232:B\222\261:\253\030\225:\336/o:z\253\301:7\221 :Z\336[:\2177\014;t\264C<b\344\350;\350o\201<,\365w<\247\357r<\231\r\016>\356\266\3758\277\331\333<\216T)?-\034D>\247$\325>\327\351\223>}s\031>\252\026}>\245\202&>[\201\003>g\355g>\003\335\n>E\351\300=\351\\\361=\333*\305=Xi\2049\037\372\30499\200\223;\237\352g:\005H\204;\2351\017:\333*\261:\316\241\260:|)(:\222/\242:f6\3409\265\022\005:\215\225\231:\267m+C\367H\336<)$\020=|\250N@\035\t\327=\377\301\036>\246\360\363=\n\312\244:\257\311\356<\tx\237\301\230\0369@my\275=\2275\016>\021\243\221\276xGk>Y \257\275\001\366\230\275\223\266\004=\222\231\003>\375\301s\275\000\207/=A$\t\275\035\225\035:.\213l:\357\255\331:\312\022$;\030\376l:\0328\271:!?\377:\021\374\001;\r\274N;~\363\004;}\236\177;\255\343\304:\216\2348;\r\222\035<c\357\231<\377\343\207=<\026\307<X\376\205<`\275\302=t\310H:,\216\035<\2169\276?A\025\336>r\315\313>.Q\235>\021Z\256>\320\213@>\262\274\214>\321\200?>,lB>ey/>h\002L>%\333L>\375\225\207>$\240=:b(\210:}\003#;N\331>;\371\231t:\300\342l;9\273\205;\205Zt;\356\030\236;\3371@;7\307\332;C[0;\330c\003;\267m+C\207\236Y=;\014\310<@\347I@|m#>\360VC>\374\007\205>`\375\3359\000\343P=\r\301\235\301[\026,@gx\226;\256\235\017?\n\374\024>\301\245\217\275\032\261\007<f\374\n\275\022\032\262<\202[\326\272\322\213#>\\\252\364=?\330\232\275.X\272:RB\262:\233\376<;HJ\261;\302\222\r;\0323\020;9\227\251:\241\245\206:\2651\326:\031<E:\271\207\247:<J\207:\223R\370:R\244\020<\204\027\227;!@\301=0[~<\322 3<\361\000\204=m\250\0149U\311\237<(>9?\002\310\275>\313,\350>\302\003\332>K\r\247>\353\020\227>\242wG>\016\356\214>\336*P>\253\351f>VOQ>\326#H>\3265O>\302\257\251:\223\257\201:\216\211H;\"\323\232;\211\261\271:JW\346:m\352\224:{\346L:,z\317:o\275\020:\033\010\257:\336\031j:\315\325\227:\000\000HC\365zf=\356K\026=\363\351I@\261\201+>/@9>\242$\326>\031\016\3229+#>=\006\236\235\301\316^\013@\023\202\227>\262\325\004>\233>\314>\205\365(=_\027-\275z\023\207<<t\234>\232\023\260>\0144b=o\2558\276\331U\220=Q\371K:\300\017\004:\213$D;\311$\361:!Oo:\002\307\325:\205\247\':F\346x:\246s\301:\204h\341:\351\034\247:~\036\033:\202_\310:\270\360\256<\007k\202<j{\323=\332\211\317<\253\247h<s,\024>vK\2149\237\377\277<\001\205\263?;\366\311>}\242\322>\346\211\207>\324\2427>\354\217\177>\017\025q>M\372E>\007)\206>\215\337\356>\377;\224>OP\200>\205\310\214>\331\224\220:{zO:\301\304(;\373O\276:`2e:\034\312\021;&4\024:\347\203\322:\335\325*;\325\212\016;vI\001;!M\204:\210\375k:\214.\332B\373\306]=t\356q=@\036N@B\327\037>K\3613>V\302\001?\"\304\001:\203\214\223=\337\254\223\301\320M\347?D.>?g\251\243>\320k\'\275p:\346=\351\230\221\274\352\340\336=\334\200\252=\246\373\223=\216\334\324<\027\036\202>\263\214\371\275\306\375\313:\021\355a:\234\"\366:?\341`:s\263X;-.\246:\317\330B;\220\024\":\220\340\207:\246\231\014;\027\230\202:FD\340:\316{\341:\0366n<\263\267[<\343q_=4c\223<\355(\247<)\221R>\326\037\2609e\030\031=\300L{?\260\032\002?\235\3153>\253Ok>jPW>{\000\226>y6\204>\356z\">\241\254\017>\320S\027>o\277A>\337\223j>\254~\">LX\026;\220s\256:F\024g;>\3445:@~R;o1\331:\245\367\373:\232\306\025:y\'h:\262\246\026;@\0327:\354\362\322:J4\203:\267m+C\337\373\212=E\014\217=\306\tP@F\317\033>\247n,>\224\271&?\330\222\2009\221\022\333=\247|\211\301\334\206\272?\232\273\340>o\"\n\276\207\301\214\275,\327\332>\326d\341\275\364eJ=\203\345\035=\243\240\202\275l\232H=D\226\277;\332:\r=h\020\246:\347LS:\371\340k;;\331\354:\371g\363:\\\235\231;\213FH:\250y^:\004\311\276:8\310\241:\224N\256:z\250\225;\347\236&;\211M\002<3\037c<4\301\033=\375\237E<zL%<\035\266\374=Ut\2618#{\236<$\303\246>\2540m>\371\n>>R\272C>\267{\364=\'4\367=W\246i>\3009R>\014\333\354=y_e>\267\257$>\006\010\364=\032\200\254=\306Q%:\220[\023:.?\331;<B\374:e~G;\233\003u;(G\3459\333\353+:\262\316\315:\006\260\201:\310\224}:\027k\360;2\332\027;\000\000\026CH\007\200=GN\307<Q\254F@\245\371\n>\253\374\033>JL\035?\223-\3329\272\301\332=\342\245\232\301e\006w?i\021=?\233hN?&\344\342>\013\306\323>~\022 \275\252\365\212>j\225\035=SGc=_\032\216>\024\343\305<\261\373\374\275\253,\210;\264\t\3649O!~;\202\007\370;K\353\000;\300\220\203<r\362\014;\201[\236;\236B\230:<\305\247:(\340\207;\323\271!:S\033\316;\210\331C<\231\306\221;ll\304=\325\246\366<^L\306<\340::>\250\t39\232_\246<\242o\331>\211\246\207>\025\234\263>\315\360\251>\373\232<>\270\3446>\362\201\032>\235\3446>:\001\204>\033\316]>\241\225\237>y{\271>\302\026|>\347\366m;\302\221\3469f\313\206;\034\030.<+\245\362:\203Aa<\316@\013;v@\222;\205\251\220:\205\215\265:(\t\300;\2128\3709o*E;\000\000pCw/K=\213\021\350<\211\237F@\023\303\362=\275\307\022>\224\322\366>%\376\3619\260\324\263=\372q\225\301#\274\234?\0047\204>\267he>\030<\333\275\234vh>\302\033e>\027^\245>\315\2563=\336\036\002>\002:\006\275B}\355\274\222\204u\275(\'<:\002*a:\325h\371:\333\204\227:\331f`:`\221>:\375\364\220:\260B\353:\323\2640:a\026\214:\310\013\213:qh\300:\245\343\202:\256\2309<eg\031<\211\237\300=1\263z<S\034h<\325\337K> R\1779\2460\331<\250\232H?\005\252\334>\2622\026?\t+\263>G\'\256>\333\247\224>\'\225\227>n\345\211>\324\343b>bm->\321\3537>7\266F>\314\326W>\243g\214:\001T7:\315*\235:\256\234\212:}p-:5\206\3239E\220\207:\342\247\311:\227\300A:\266\007G:K\207\251:\262\356\017;]\267\037:\267m\253B\356\026P=:}\244=H\313M@\241D\363=\023\207\025>6\003\273>z\316\2319\303Y\201=:\377\206\301B\244\313?d\271L\276l\354H>P3u>b[\315>c\340\245>\302\365\022>\366W\235\274k\227\036;\351\3644\275\004\243+>@I\323<\336\270G:N\374<:g\323\250;\270q\025;\270MK;\275av;\036\353\270:\213\203\t;\006q\236:\037\273\036;\231\267\251:\036\214,;\262\325\026;A\257^<m\316\207<;\003\274=Y\304\206<\360\313\177<\357f\272=\306\256\3048a,o<\225X\243>g\356G>a\022\275>\tu[>\247\305\014>\200_<>\360\t?>\030\302;>\307-O>\r\327\003>\3008\'>\004\316Y>,\271\353=\014\3047:\2252\202:\354\254\356;\203\004\366:\373P\032;\272em;\2062_:H\0221;\010}\217:\325\256\331:\246\035\207:\333Xy;\260\304\366:\000\000\360B\3220\254=6\244>=\336\037K@\302\3556>\rv@>\245e%?M|f9\177\354\310=.r\217\301\220\264\336?\217\250\225\276\n\t!>ug\024\275\301\247\267<\304Hm=\031\363Q=M\010%>s\025\256\275\014C\n>\364\345\022>\033^\023>e\370\n;\217\353\233:\233\035I;\300p4;\004\204];\000\264\n;8\010\346:\314\301d:\376\250\227:\221\254\014;l)r:\306\007\017;\347k\373:\217\266w<\032\344\034<\341\026\254=\246\342R<\353-\371;\3725 >\335\344\3358y\247\034=\371\370\372>i\322\252>\324\216\177>@\201x>l\346\234>G\004\202>\357O\216>l(\224>\rP\226>d\250\222>\267\263\213>\036\332$>*\360\n>Lw\034;\353\256\235:\312\334<;\215\231`;\242\376\034;g\334\021;7R>;\375U3:\\6\231:\225\000\373:\257\003p:JF(;0t\222:\000\000\360Bt\354\305=\1772\306<\343\013K@\376\237!>i\024\036>++{?g,;9\242\324\020>\236\026\222\301\266h\031?Q\214\202\276Vg\332>\212\016\277\275o\244\246=\3626L\275\202\272&\276I\215\003\277\226\306\210\274m1\037;-\202\236>\321\204\306<M`\246:\320\"r:\216\331\340:\257\324~:\3231!;\371\316*;\207\220\307:\325\233(;66\372:\270\341\236:\247\352k:_\276\271:HY\277:x\363><\334\305\366;\023\361\274=\317\017\177<d\260\010<\034\267Y>\255\347F8\313v\036=\3432\304>;\3711>+S\211>a\357\025>\222\032\327=\262B\">\347\0145>U}\036>\n\356>>\270\031F>\336\243M>\342\3737>\243M\'>AI\212:b\1770:P/\255:Z\027L:\327\215\024;\210\371\036;@&\301:B\217F;7B\254:\227\217r:\260%B:\244}w:\003\224I:\000\000\026Co\271\323=]\320\254<\340\003P@\301\0140>\014\241\">\035H\216?v\222a9%\270->\010\334\226\301a\232F?Cz\t\276\016\211i>\321\220\242=\242\342\222=\366K\264\275\312\257l>\213\031\221\275\276IY\275\327\020m\275\212c\310<\2207\034\275\231B\330:<+\3429\031\363\303;\251\206H:\311\275\244:\375[&:\307z\357:B\351&;B\300\024:\213\242f;66\2529SXg:\033l\035;u\262\217<s\352\304;2\234:=pX\201<J.\034<\275\013z>\366$\2538\023_\003==\355\014?\350\252b>\361B\245>]\001\225>\375\217\363=r\260=>\n\302\010>\266\205R>\031\201a>\224\0252>\231_\213>\267z\321=\020\021\316=VH\005;\001\363\2549\243\'{;{MS:\362\370\006;\257n\3369zq\317:6g);+\363.:C\t\213;\230\n\2039\376\021F:`+u:UU\005C\230\275n=\271\251\375<\240\236N@\3340\031>\204\355&>\364\202\006?\261Y\2279\005l\223=\350\370\225\301\204\342\371?\374\203k>7mU>\2042{>\277\256\037>\221MO\274\001\025\273\275\217\307\027\276O\277\004=V\373\010\275\205W\314<;\252\203\275QW\003<\\}\004;\255r ;\000\346\217;\363lE:.dg:\315/\305:N~\273:\352\303\362:3C\227:\320\030\377:\313R\344: \270@;\256\304I<g\247\255;U\270\375<\306\352~<\377\014w<iF\355=\200\361\3068r\215\000=T\272\r?}\3500>\241\366\240>\216\001\021>\327\322\352=\251\352\316=8~\r>\221\246\362=\270\235->\310\321\026>}a5>\261\201\004>9\374\t>s\016\335;7@\002;\232\246 ;\300\345\201;#\312\036:\344R\223:\330g\320:i\227\370:\032m\310:\301\262\203:\265\2519;Om\274:EW\301:\267m+C\235\252\210=\301\204\317<\036\262L@\300?\306=\347\314\316=\270\300\014?\354;\3459\033Y\332=*\014\225\301*\341l?\356q\003>8\341\250>N\351r\276Us\216>Iq\335\274E\261\010>\254\302j\276\376DU\276\375\371\253\275\0379\355\275\363\221f\275\203,\271:\177\'?;\006Z\267:\345-\371:K4\241:\016M\226:\206\027\001;\2755\265:\024\253\207:?v\200:_\243I:w\023a;\361\235\007;\026\224p<\026\000\'<\2351\335=\265\370K<nT2<y\274[>\0057\3728\346\225\315<\351{Q?\367m\206>\235\r/?\310\232\224>\261t\230>\250V{>\n\263]>c\0344>\323q6>\212hF>\213\323D>9\236F>$uw>v\254\276:\343\312\335;\'\240\321:\233\210\035;\027:\342:\310\304\217:\244A$;\375\231N:\374x\320:\222\235Q:)\003\3669\230\000\002<\302q&;\000\000\026C\3561W=@\022:<&K7@\366\220\306=)q\311=T\014\030?\300S\3729g\017\336=\233M\236\301\001V\233?N>\365\276\255\027b\275\027S\254=\374/5\276\354\007\243=\362l\024<\001\360\013>\361\201?>\n\332\t\275\302C\255=\307J\212\274\031\377m:G%\255;\030*\361:}\337\254:9Oi;\240\026\310:\327\351T;S\200$:\337W\030<\207\005\211;<\2255;~\226q;>r\240;\033\276&<\330o\317;\354\324\242>\321\3738<\376\004\n<\013\242S>\373\222G9\003M\034=\006h5?\027b\324>t\324\206>\363o|>\327\006(>\0103(>\325\212\206>\006\334L>\030\336=>\353\224^>\320\320\203>e&<>\026\316+>\276\254\232:\255\236\355;\234\215\350:\215\301\231:&\365a;\232\267\034;\257FK;\226\027\016:\345\267u<+.\246;\324\211\326;\262\312\223;\300\217j;\000\000HC\313i\237=^\275\322=,sJ@\225<->\324U+>]\317C?&\20779\263\311\372=\325O\210\301\303U\237?A\223\323>2\350\325>\323 \224><\312\264>~\026u>[\232$>\312\351\010>1\373\365=\031\327\321\274\216\367\024>\3244\302;U\257/:q\234\002:\034Z\314;\255I\373:d\3307;8\263\366:\246\025Q:\000\352\004;\273Kz:\200\226\243:V^\253:F\233?:\352E\006;\340\315=<\00780<_\001<=9\262Y<)n\324;\225\310\024>g N8QE\016=\r?\300>:\'#>\240\314\231>\263)\">\230\033J>\241`0>\253R\007>`Q\006>(\314!>\306\250\016>\336\345/>\034\275\034>\005\211\024>f\003\3079r\203\3649p#\222;\316X\020;\322\254\202:\321e\323:\202\272\3269O\362U;\032\251\3319,\243d:\352\324\207:\006\257\2439\314\261\230:UU\005C\246n-=<\024\236=\311\326R@&\013\006>\n\257 >\363\226\234>Y?W:\355F{=\266\221\222\301YC\312?/\327\024\276t\005Z>T\277*>\356J\244=\021\261\003=\370\315\256>\005\021b>[\204!=\275C\013>\302\204=>vy\311=%\372c9\343+\3639\302J\3739\304\246>:\002\256 :\246e\222:\346w\252:\304]\2719\266\002\022:\2438\3109\257\247V:\246\242@:\327_Z:\234yW<^\3375<K#\320<\200\247\231<\254jW<\242\252,>+\341\25697\270\341<x\277\321>}\322\320>\353\371\305>9v\267>\330\260J>P&z>\203\347\215>\202%\225>jz\251>\350o\272>Mfs>(\375]>\310\203X>4=p9?\1775:b\032\2759\034\251\217:\307\333$:\355\322\027;\352\277\";\332\341\2229)\0314:{\320\3609\306\260\241:\303-\004;Eju:\267m+C\240\027C=9J\253<9#O@\013\261\327=k\206\001>\311\010\251>\025#E:.\033\225=4#\237\301\370b\265?N\266D\276\312\023f>c\024\252\276\010\342=>I\021%>\022\236r>\204\300\234=\246g\234\275d|k\276\276\232\330<2\332\365\275\364\220\206;V\313\3429rX8;\032;\3159Ri\201:\343|\224:\230V\247:+\235};r\250j9\013b\3759\036\315\3619P\240\235:\275\375+;\321e(<J\341G<-L\203=o\005b<\227NY<\033\2648>uv\2159\246+\204<\216\321\243?\250\260\206>j\277\211>`\333a>\306\217\207>\355q\220>U{\264>\345\260\203>\373\026\274>\335a\201>\212f\177>\220\004Q>0\321<>\212\304\372;\263}2:\032I\257;\315o\3379(a\245:\004\347\261:z\023\253:\243\255\331;\317kT9\260D\224:\337\342\225:*\010\365:C_\037;\000\000HC\231\037\223=\215=\253=H]K@\207\342\020>S\202\030>\010\362\032?\312.j9\265?\303=\304O\211\301\205g\314?\207\313\254>\343\036\261>\275\"\201>3\321\274>HA\244=5\0318\274\"u2\276X\001\017;\024\3408\276\363\177\251\274\2034\322<\216n\342:5\270_:\363\235);\0020\304;4\274\332:\253\363V;\344tm: \302+;!m\303:\340\316%;--0;\027\322\371:9Q\';\256\215^<\213#R<*Op=\375\320j<\267\336;<\275>\022>z\207\2238\261x\305<\366\217\374>\2177Q>\217\347\274>\246Sd>ov+>\247\371\026>\275V\001>\014\207&>S\247\000>\223\3666>\204M\320=Az4>l\2111>|\323\013;v\324d:\251/\327:#\212\324;\r\344\361:\315\304d;\214E,:Zbz;\200\334\223:\264\3462;T\264!;/?\326:\316P\323:\000\000HC\223\356X=\350\246,=D\361Q@\232\340\025>\326\236*>:e\331>\007S\3019q\316p=\235\230\222\301\200\264\371?%Pn>\351e\203>\377\'\362=\016\177\210>MSf=k\0331>\220\'V=w$F<\330\036\355\275/`\004\276Q\023n\275P\231V:\262\005s:|\252d;J\234h:\036\213\270:9t\201:ZU\027;\341h\272;\374\327\222:.\024\315:Jb\t;\311\325\221:\203\261\027;\354\203.<\335w\273;\234\234\327<\221\217\206<\261\363\'<v\215\366=\\\363\0249zy\304<\316\200\002?\223\346\207>\321\204q>\215\315\001>3\314\030>\203\265#>9\034$>P\241\000>\350@\021>+\361\000>\247q\006>\345 \036>\3372#>C\221\022:\243\034\243:\035rK;6:-:\345\372\320:\317kk:\255wJ;\240c\320;\366\027~:Q\276\324:\311\313\005;w\177\211:\376\036\305:UU\005C<\343\201=\342y\225<\231+B@-w8>\245\221I>;\374\327>\221\256\2659\306eR=f\205\237\301\220\210\347?2\374\373=\253<\236>\207\350\\\2739\247\352>\026e\024=K\0176>\2008+>7\246\037\2757\302\345=fo7>_\001\201>=\351\215:\036,Z:>T/;y\330\005;,q\303:x\372\265:\005\232v:\2225\3329\014\247\234:V\371*:\330\314/:\025\225\3109\355h\212:\270\343\243<E{[;\026D\030>\317\305<<\"\303\351;\306o\013>B\312\0039*\306\345<\210\302\014?\263`p>\264\320\316>\377@\232>\233\0144>\265;\r>\227\345\035>C\353#>\016\3373>\375\037!>\246\252\025>u\223\027>\334\325\365=\206\302\247:\024\213&:%\262\305:\307\340\223:\317Nt:a\032\254:\320:3:\233\211\2319Q\226\235:B\206\034:pN\3379\312\r\3369 \010\2609\000\000HC\245\217\273=\004\000`=\037\271C@\205y<>\217\023D>\034\360.?\232\275?9\326\337\326=3\013\214\301\234\347\335?U\2054\276\356\325\236>\244WP>!g\252=i\377\007\276D\235\360=<E(\274\240\264\231=\023F@>\224\222\243=\374\177#=\304O\211:\036\304\242:Y\355R;\346&_;\307\367\351:\247\266\010;\375j\021;s\256\006;x^\n;\342\201\223:bc\302:\355]j:B\343\363:\223\274\247<o\212F<F}\034>*\203o<\216\n\001<3\2151>\007\237c8\333,E=pZ\025?\234\276\240>\273\317\200>V\233^>\225c->\216A7>\037\343b>I\367\223>\230\350\200>\373\226k>\200\341\217>\r\311_>\007Tz>\264\245-:\013s\200:H6\016;{\021l;s\r\000;\234M!;\216\361\220;w\225\361:p[\354:j$x:nG\271:\211G\200:u&\247:\000\000\310B)\340\304=\016\261\273=\225\rS@\264\343\035>\374\037\016>\222V\220?\024]M9s\2301>\3028\207\301\037\221M?J^\257>\337\265+=\n\244e>A\347\215<\030\203R>\245\327v>P\354=\275\232\007<\275\210\206\372\275\277\342\206\274hW\213;h)I;v\324c:\305\207\350:\236\332\230:I\202c:\306\227\317:\375\342\356:\212\327\363:|$\203:\322F\3339OE\023:\355\263A:\003\341\265:i\317l<\247[\357<\305\263\304<\271&\307<\277\365\241<\033J:>\022\302i8V@\014=vJl?\032R\202>[\264\217>\205\\@>\242p[>\311\205\032>\340\003\014>\027\034\032>\215Q\030>R\374\000>\306\354h>YST>\373\220/>\017\330U;\305\001\310:\333g\374:a\317\210:\230\377%:\332t\311:)J\016;\306\250\322:L\200R:\313\251\2249\366I\016:\256\363L:\252,f:\000\000pC\340\225b=\320\206\225<QmC@y\265\021>:0\030>\037\325%?5\214\2619\034/\340=\013_\234\301\205\302\353>\0006\306\274\"\010\024?\224\354X>6\205m>JZ?>\321\337a>v\203,>\342\2201>\021\300\367<\331\306\017<\021\323\312\275t\334\244:\217\222\2639\203+\313;\205\200\034:\311\210\3179<\214\274:Q\237\020:a\357\006;T\307\3739`c^:\262\352a:8\034\2459>k\001;\210\375)<\324D\244;\022R\352=\003\367\\<\\\360r<\276\221<>\334l\3118\024\033\331<\205-#?\241@\277>\207^\222>]\233_>\355\2132>\253+5>u\353L>\320\376b>\264\312V>\027\227\007>;MT>\267\364\031>\013\217)>z\375\200:\307?19\352$\363;\244[\2659\216\275r9\335\333\360:6\320\2369\005\'\343:\206\337I:\374\242\":\341\221*:\317\006Y9;\020\361:\000\000\360B??\214=l7\276=14Q@\301\'\004>\354R\016>\271q5?\007gh9\\A\357=\032=\206\301\266\253v?\323\343\317>E\273\267>\241B\272>\344c\352>\001\344b>\030h\007\273\'\211*\276\\f\230>\027D!=<\347$\275\264S\261\275\363\274\004:\007\017[:7y\250:43H;:\244\265:Y\230\035:\274\377\264:\032\332b:\346t\221:\030i,;\330\360\375:;\rr:\241\317\274:o}\373;m\322\005<4\223\230<\311\014\006<\222\212&<\3624\310=\332\263\2058%\275#<\032\265\342>R[V>\363LL>E}\342=\353\r\363=)\366\017>3\242,>uw%>E\206->\267-\014>\337\205<>\365\376\304=b\300\321=\325{\3339V\035\264:\200\317\304:\231\275\210;\355,\355:\033\200\3409Ez\235:*\351\237:\r\r\200:\266;\343:\275\322\264:\241\351\036:\260\037\210:\000\000HC\016\342n=\320\030\023=\367\014/@a\244\030>\364\205\034>\334=\001?\311\207\2249\246\324\231=s\224\232\301c\216s?K\331P>rj\311>\273D\212>`\037\013?a\364\230>z\232\013>\315\322\302>\'\300t=\313Og\274,\204\223\274\367\035\3479\007\234\3169K\372p:1\\\372:-\335{:\205\204a:\345\362\020:\370\213\3779\nU\2649\226\031h:(\224\017:\326\262\032:\037fE:q?8:X9\"<z\312\372;\330\337?>L\2742<\227\213\222;\006w\013>\236M\3648\345\312\363<\t`\337>+\n5>c\037y>[\250N>q\351Q>\177\321\n>$y\021>8T\036>\031\0100>\376 \n>U(k>\245a\025>\242\324a>n\362_9|\215p:\306\204\350:4e\3479\377C\232:\023u\2619\3629\3059j\264#9\224\236{:\3254\2769\310m\3559\3374\032:\001\'\001:\000\000HC\013!6=\302\223\254<\031\235M@\2040\331=:\"\002>\343\234\223>\3571@:\207\363\205=\236K\236\301I\252\244?\223\004\350\276D\t\3149!\340\231\276\2729\362=N\217\242\276\245\202l<Xp\007>\343\372\341=\313\352\360=~\025\327<\365b\200\275`5\032:(Z\020:\340Z(:u\3044;\265\325\227;\3036}:\230\246E:Dg\035:\307\226V:L:\n:S\013\303:asG:A\374\377:\217\337q<\260\3463<\304F\253=@\004\360<X\246\323<\032\367=>}\275\3029+\333\317<\374$\277?R\373\\?C\005\314>\023\215\330>\361\020\223>\003c_>-\313f>l\370S>\321\327c>\3058\254>\377\246]>\317M{>\343\311\200>_\255\332:$\341+:\353!\221:\203\224\217;\322\321\342;m\307\216:\363\006\212:\222\266a:\330\271\202:\272_\035:\0101-;\245I\276:\035\346\370:\000\000\026C\332\t\232=\255\320\343=\362\002R@\341\276\034>2\304\036>\2070E?\210\232c9\310l\001>\2249\205\301k\226\265?\026s+?\033\260j>\314b\352=q\255\\>\264\204\361\275\300\206\014=_\236\262\274\366\007\363=\257\335\342\275Me\372\275\254\001`\274\n\365\000;\246x\263:\326\371,;\034\025\230:\361\030\301:\235{\033;\3009\236:\264\232\202:\303F\220:\353G!;v\314\335:TNn:\001\243\264:\362\r\205<\254\351\205<F\247\217<,0\302<\227a\177<\033\246=>\321\264\1778\037.\004=k\024\335>\204\020}>\325\033\204>\311GT>\025\243\001>S\0162>\021\326\024>_\3748>\3665\277=\333\0247>9\222J>\360V5>\230U\010>\016.0;\272\346\214:\373\346\";\304\306w:\020b\264:E\243\372:5\016(:,o\232:\235vf:\360Z\327:\354R\226:\225qi:\201\302G:UU\005C\265=\222=\342\354\230=\322I=@4\000 >\320\200(>\021\355\035?\221i\2339\032+\304=\010\207\220\301\347\241S?\353\033\362>\343bJ?\236\004\337>\326X\272>\014\013\250<\303\234?>\266\017\236>fj\214>\373\372\325\275b@\204\276\210\010V\276j\365\002:\014\201\2649\365\323\233:\361\314\226:\205\207\202;\024\022\020;\276\206\204:h\305\";fx[:L\002\204:?\037\212:\265\260\027:8\330\253:x\324\260<M\005\255<u1]>u\244\237<\342\262+<\254\224d>g\221\03091o\334<#\367\025?q\"\327>\333\252\301>\260\354F>\250>j>\344\026k>\037~~>/\236y>\372\220\210>\207\006&>\035G~>\341\374D>8\010$>\203\226\n:\203\24539\352\022\314:-\254g:\321m/;.\344\275:\246\344+:_\321\333:\033\212\037:@3\000:\370\013\3779\227\366\2309\326Q8:\000\000HC\340\304\314=\364\374\376=\3316S@\246\206V>C\035C>\261,x?<s\t9\233\2355>\334\234\206\301r\272\210?\225_6>\232\001$?\2470\003>)\023\327=i\327\374=\t\ro\276\255\277b>X\312\247>\006F\342>\322\2613>6\315\035\276]>\3279\354\277\2619\367\037\004;E\177\227:qu\235:\211\274!:\274\002\240:f\225\005;\026A=:p)+:J\321B:\337\035\037:\214TX:\3667\355;\341\226\332;\033\241\037<\021[\331;\010gL;;E\220=[\361&8H4\213<\270CK>[2\003>\342\003\335=<-\301=\334E\267=\247\206\347=\177\314\240=\301j\307=\305\306R>9Z\352=\237\365\364=\003\242\013>\031\275\222=\334\335m9\262\321\0049\311\270j:t\031x:\'\036\t:\202\374\24490\272\017:\240\256\013;\307\351\3319\350w\3549\312\353\2329\273&\2139\227\356\3439UU\005C\206\0048=\320P\263=\321!J@\324X\026>u\207/>\303\222\231>\261k\2639L\212\372<2\225\220\301\r\n\342?\302p\034>\361e\333>al\212>{\203y>\254\251\200>\314\222}>\223B\251<\t\243\254=\346\034\255<hQ\221<\241Z\233=\273\372\2259\205\203\3749\274\215\232:\"\371\304:\353\026&:M\372<:kW\004:\255\270\233:\327\230W:K\255\200:\377\316\3019\371\026\2769\371\212\020:\330\333\037<\013\0019<\205\005k=#\0254<\252`\321;[v\271=@d\3108oA\\<\315\016\212>r\027\024>\334\361\250>\310\205\000>\017\303+>\021[\300=\256\025\272=w\020\376=\310\335\274=4Y\027>\"\350\266=\003\267\356=\221\276\374=\246\377\3768\232/\'9G\031;:\365\303W:\257\204\3709\021V\3279P\302\2259 \250X:s\031\3529\224\246\036:f\350O9]\304\2019V\036d9UU\005C\366Y\"=\032<~=ezK@sf\326=\346\003\n>\325#\212>!\253\014:V=G=C\342\223\301H\n\374?\247\033\320=\023\234\212>\367\264\251\275]\240\">\005\362\333=nM\t=\004\014\026\276\247{\013=\037t\033\276\307K\247<pD^\275\322\261u:\345\232\231:\311\320\207:\337q\341:\352\230-:,Zq:\353\223\025:\375\351N:\232F\256:\317Rd:\372\373\035;|\221\242:Z\271\212:9\177\213<\253\371S<\340\333a=h\226\022=z\260\325<A\0172>\007\203\2449w\224\330<b\262~?3{%?\003\256\255>\330\2300>\000,<>\377E\036>f\365\033>\213P;>\260MY>\354\350@>[\267R>1\315>>\271\311\001>{\307w:]\235\304:Q\210\233:\342B\322:\215!\2779\022M(:y\236!:(2\303:T\374\327:e\214S:)\237\022;*\035\215:?\331-:\000\000HC\020\312\233=\242\200\034=x\361O@]\"\002>\202\324\005>DnG?\005\342\2059V\310\t>\310\313\226\301\300\250\226?\013\006\031?a\372o>w\215~>\223\3035>;\316\373=\367\252#=\305\030\206=5=\037>\350\376\031>\241\014\350\274\364\320\244\275\001|\233:\177\253\021:;\327\013;\232\355\312:-\324\346:\366\207\311:\016\241\227:\304B\351:\354\301<;d7\231:\233\376\222:\323\025\227:\306\377\233:\n\335\323<\360\366\273<\020\256\006>3\240\337<\026c\332<>\335\205>\217g\3018\354\177O=dm\265?*z\r?\256\001\310>2\277\233>ES\013>\364\n\014>\020\024\261=\3617\361=\274\350\336=\316-\007>e\272#>\311\002\357=\342\013\322=\362e\210:P\230\2729\351<\030;<4\205:Y\210\251:\235\201\225:\354\333\177:D6\016;\202\213H;s\334\227:\376\034}:\321K\230:\233\024X:\000\000HCE~y=\035\312*=Y K@nm\026>hY!>\251\214\037?\353\223\2759\031\030\320=\314\003\220\301{\213\302?\031\255\315=s\306\201>\326\217}>\302(,>O\367\224\275\321\2363=\0359\002\275\235\215\343\274\352\341\250;g`$>c\010\002>~\234\202:_J\240:\353\335\332;\200n\224;\277\232\267:`\236\365:8>\243:\375^+;\274.#:\353\201Y;\234\250<:=\346\236:\207\217l;\001v\210<\340a\325;\317\260\207=`\001\310<\377\217m<.\"\203>\027\356\0169\324O6=g0\320>\337\235\256>NM\244>Q+\203>\367\215K>_-e>\330[D>\212Y\223>\275<J>\317lH>\354\337\233>\243\177\252>\002\300P>\213X\220:y~\220:\\!=<,\350\216;\220F\346:\317\226\364:\344\025b:F<l;\"\334\263:!\372l<LBt:5\215\271:\303\201\224;\000\000HC\005\225Y=\361\314\320=\220jS@\323\351\364=\003~\020>tM\341>\030\355\2129X\013\241=\320\226\203\301\244\223\261?\'\006\000\275\326W\321>H\252\310>u\350y>\030\223\033>\230\275\337=Tf\224\275)\306\r\275\n34\275|\364\335=\357\345\032>\363\213y:\377\337\3349A\303\221;69<;Z\322q;G0\273;\316\261\325:\210\267>;\325\027\241:\216\024w:\305N\302:r\224\202:\223H\036;\261\177\260;\027j\352;\317O(<\316\200N<\226PI</\t\274=\010\254\2218\223zv<\326uN>W \347=v\205\214>\217K\377=/\014\376=\373~\010>\254\355\365=@\352\326=\351\342%>\2665\010>\263\357\033>\201\364\035>\366\203\021>\375\230 :\323\215\2609p\320\204;!\334\007;\213!\025;\004\360\246;\304\031\212:\222s\030;\031d|:7\257,:\016\374\215:\320p\006:\365b\235:\000\000pC\345^\204=\242#\306<_\005G@B#)>\307\352%>\036\266+?\235\262\2639\341\367\002>\022C\233\301)\031\355?Z`\237>JA\314>\'\377n>\037\236\223=H]\354<\327lG=dC\264=`@\037>\374_\245<.\342\006=\222\221?=\270\251z:\026\252U:\032n\034;Kp\344:\224\030\272:<\273\220:P\037\240:\272-\002;\177%\025;\345\207\013;\372\361\364:>\032\206:Y\303\342:2\353\360<\245\323\322;&\216\014>\335<\026=\366)D<\223\014\313>\222\022\0059+Z\337=\266\237g?;\233\235>,\317\360>\2649R>Z\333q>!)\023>\370s9>i,\t>Q\031\334=\273\021\021>\242t\347=\021\302\303=\334T\362=\t\326Z:g\254\205:Y;K;2\017\305:\2208\211:\353\357\214:KWz:\245\016\360:s\224:;\331t7;\332}\300;S\366[:\237\322\325:\000\000\310BW\261\274<Z\2213=\033\215Q@J\t)=\233<\213=\272\251\024=\270\235\205:\035w\022=\255\316\226\301\300\'Z@\r\315\216\277\337$\230>R \177\277\356|\233>\257\035\006\277\370\036\036>\277\236\255\276o\271\371\275\177S\273\276\207\'\202\275\304\270\271\274B\261\374:*\240\331:\272\237\276:\273\351\334:\007\021\351:<\212\313:\211\344\277:\224O\335:\245\204\334:/\207\220:\326\231-;\276\304\003;X4\264:\253\206Q;\263\2650;\017\244\335<\2714\333;w\006\245<\344@!=\024)\3239<\3712<T;_?\344\"N?\243\367\235>\373\361_>%\203\204>!\225\370=\364HF>\216\257(>\346\374\034>b\275H>$\224\t>\024f9>\034\331\013>\246\236\301:\367\371\250:\206~h:*<\266:\345^\343:8\031q::\250\222: \356\256:\265(\302:\nW\214:\\\225J;wW$;\270\224M:\000\000pC\332\371\205=`\035\223=\001\001Q@\251\355\002>J/\023>\\\346\020?\255\341]9\364\346\312=\201\027\211\301\215)=?\177\247>>\232\270#?3.\037>\206p\205>\014\260\234=\261\366\260=\373\346b\275\361\232L\273F\013x;\305h\r=\224\260\030\275{;\237:\233\022\247:\362#\200:C\014X:\215\262Q:$C\212:Rp\022:\304\233&:\022\225\323:\270\334F:;\246Z:\225\306`:T&c:\330\014\027<VK\014<\026\342\'=\314\207\023<\324*\373;\032\366\332=,-Z8\001\345f<wD\344>\212[N>yv\031>R\223\371=\344\306\244=\260q\313=\260\363\005>v\261\303=\026\036\204=l=\344=\332\232\374=\221<\266=)\371\367=ZP\327:4\207\231:\245bA:\254\260\3159\256hI:\315\236 :\361\037\035:\363\275+:\304\317\241:o\355\r:\250!\247:\203]L:\331\"\3119\000\000\226C\314\211\376=\363\242]=\203CK@\333\207I>@V5>K>\231?\374\341\3748\025\255C>\232\302\220\30183\006?\346\021/?\2671\004?\0251\340>j\023\231>O\240\000\275\333T~=o\320C>\277\014\010>\250\353(\275\350<\003=56\250\275\030\272\215: =\2439\375\236\251:\030Y\031;_\354\261:\236|\262:\232\2720:y{\035;\302\311\020;jd\263:\177\013\316:\201\276\3569\217n\236:gd\231<\'\374\024<[\276\251=_\302\226<E\010Q<\352\225\006>\262F\3667>b\000=\362\271\026?\244f\250>vm\210>8\177\210>$7A>\274\037>>@$U>\335\213\006>\241@)>\336\262\025>\377\177\313=\230|\347=g\240\307=\227\207\024:0\300j9\256;\243:\367bZ;\n\304x:\205\342\300:\277\317\006:6\004\361:i\233\030;\363\017~:\256\254\211:\375\335\2249\264-j:\267m+CG^\234=C\342\366<\323\315P@\224\2556>kG6>\323,5?\245\335\2369\027\236\355=\330_\227\301\313%\323?*\370\005?\276L\302>F\315\227\274 @\244>\331(\003\275\332y\246=\220\270\334=L\214\200>\336O\242=\340-\023\275\022V\205\275\302\016\3749h\302\2729\217\243\305;K\346\027;\002\210\005;\030%\222:\033N\200:\352:\240:\265_\231:\226\330S;7\034\212:0\033\227:\"\"\025;0^G<T/\270;\241\307\002=\224\034+<\363\226 <\222\231\n>\020\220\2758+\240\007=\003S\"?_B\237>\371\010\234>\242\355I>\312\364<>\334\2107>[tX>\335\200>>\370\200\024>\311MD>R\313G>\362\277\026>I#@>\271V\2679\274l\2349\006\267\301;\002u\005;\231\t\207:P\236\207:\204\351Z:\374\246\274:\246\275b:g\372h;v\353\325:\304\026\250:\037\232\256:\000\000HC\371\334\214=\340\336\201=g\343O@\355\325\023>+\030\034>\356\232,?4^\2229(\300\345=\355\342\214\301\377\344\211?m\376\243>\263\303\266>\202\252\n?\005\245\251><\362\360=+=@\275\247\240K>\231\376\363=\327\376\023\276=\357\257\275\345/\205\275\347\036\301:\004\031J:\217\"2; l#;HI\202:\tX\030;\024\0064:d)\226:2\026\203:\241\253d:\300\256\034;{\021\355:\303o\354:\337\220B<\2028O<\017\021M=\3312*<\376\350\010<\371\326\026>\350\245\3358\251\303\006=\3656\266>\264\336\206>\311h\206>\357\272\300>\210\261k>\027fS>Dt\215>~\215\205>\231\007\215>[\246\213>\202|f>l\337\205>Q\341#>\031\220\236:\332\350S:V\217X;\304\207\315;\261\321-:\347:>;6\304\3529\367\245V:\345xL:\367Vn:^\357\017;j\274\025;\235@\341:\000\000pC\345\251\222=x\005&=Z\307R@\350\227\r>\374[\034>\335\223+?\014By9<`\327=\300\206\214\301\264\001\232?n\231,>\033\320\001?\250l\235=\303\300\332=\350t\346\274P\363|\275\371\235G\275\256\256\236;\326\204\216\274\315y\271\275grz\275\227\306\240:\311NZ;n\021\306:\345\274\241;\331\373\347:\323\'\225;\374\356W:A\315\230::3\355;\\\270\251:3\320\245;xO\315:\365MP;F\007\021<w\307\243;\363\346\203<\244\205L<\264\221I<\"\265\'>-m\2178\227\271\215<\026A\242>\340\240p>ex\210>LNY>\026\2374>\200d\\>\302U\207>q}T>\371\223\211>\315\3252>\270\267m>\207\330\025>)X\357=\215J<:\356\314\211;\252\275\245:\325\322\250;\202\032\225:\327\003};(h_:b\377}:*F\257;\236O\215:5\024u;Z\034\260:\374]\304:\000\000pC\211x\340<|\025n<\177_>@^\363\301=\322\020\016>\304\023\017>\301\002\227:\356\010\t=\227e\247\301~o\'@\321\235j>0\273W=\336 }\275S\334\001\276GZ\247\275\370o\033\275\264jJ\275\242\335F=d\244\304\274\007\366z\275\322[\005\276\247\030\302;\2577o;\216\301\000;\316\326\373;\365\034~;\231\307\246:a\316\177:\201\315\333;\201O\001;V\014\260:_9];\250\307*;\267\370\272;*\263\013<\362\367\036<\361=\214>?u|<W@\207<\366a\241=80\3629\363L\213<v)\212?\252\205\023?f\256\026?\333d\245>\364#\321>\311;\260>j\367\260>\234\372\213>\333\266{>d\353\246>|\215\205>3N\252>*\016z>\200\351m<E\345\016<8w\035;op\036<\271Y\323;%\367\256:\230Y\227:\334}&<R/\341:\237~\204:\301\244_;\302\362v;\332\343\206;UU\005C\210#\305<.\216P<\207:/@,\020\301=\257\027 >K\261\240=\243 \n;\335\327\270<c\266\334\301us\032@\367\260\274\275\326\261\371>\271\2109<*+\222>\207eF>m\352\251;\0375\202;\37562>\226C^=q}7>\301\303\231=\341\200\320;\243jI;\356\024\207;\222\223\333;9q[;\277\221\013<+\306\226;<j\\:F\221t;\302\205\234:\2400\254:/<\026;z\t\256;\335N!<\005\204\306<\3344!?\343\255 =\326\254n=\260\222\235=\261u\316:k\021\235<C[\336@\336\201\005?N\331\000?\031\"W>l&W>\266\200\341=\345\246->\302\n\'>=\212\252>G\022\025>sA[>u\273$>\214\031->*YM<}\222\227;\271\265\265;\274\206\016<\003w\213;\355xG<\t\004\264;Y\314\241:6\n\373;I!\303:\301R\277:\335\251d;\211c\211;\000\000\026CE\311Q=6F\242=\231\254N@M\320\022>,:/>\203{\240>\313\177\2769\261i3=\377\316\215\301\257\370\031@F\001(\276\374\322\306>\363\332\r>\223\2059>,{\234>)\321&<\377\306\016\275\244\206\006\275\237\205\003\276\301\264F=\323wz=E\360\014;\006O\013;\225g\210;~\376\030;\212\0041;\264\242\006;\364#\240:z\331\233:P\014\212:\023\025\010;(\266\177:k\364N:N[\017;K\274\315;\010\310Z<c\307@=\247\002F<F\312\002<pN\252=(9\3568\030\304#<\204\220\023?\322y`>]\017\216>\341\330E>\350l\027>\273\311+>`}\320=\216\267\030>c\363,>\216\243=>\233\302=>\220\331A>\234\372;>\347\313};Y\3011;\313:\255;\270P\375:H\261Y;\225@\376:\210\263z:\271^l:K\3358:\325\306\013;\331\204!:q1[:\007\202\272:\212\235\270B\365\205\331=\342\245\320<UsL@\2609=>\327b(>s\316\220?\351$;9U\376J>\250D\226\301\235\273\255?\204\326\271>\360\033\025\273\354\367\227>\017\317\313>\275\006\261\275R\004\225\276\200\367\312\274\034)\221>%\255 >m2\241\273\232\322\371\275{\252\021:\3124\244:q\006\324:\007\352\263:S\324~:\227@s;\271B\203;V\217\037;\210\354\203;W\265\201;\037_\307:\255o\3729g\204#;[W\233<\267\323\003<\344\354\204=\001\361\037<\024,\335;j\351r>\004\003\2258Zz\014=\307{\017?f\025m>\221\004\353>\3317\203>\030\034^>sbY>FRx>iUs>)\373\204>\236\256]>\250\322k>\003\231A>\345\0068>\031j\3379`\250\274:\327\340\362:|\306\203:_5\":V=\303;$\252\265;G#\034;\n9~;\251\343\005;\277\314\332:^\230{9{k\345:\000\000HC*\303\005=\252\377\371=\353\247P@\345\021\363=\335\251\027>n.?>\271\3337:e[!=\\u\212\301\033\025\027@\202\005\212\275~u`>\304\211\233\274\274\231L<\365\265\240=\211\351k=8J\347\275\317\230<\276h\316\004\275\000\005\260=CU\020=E\020\021:\177\205l9\274\347E:\323\027H:\037S#:y\256\200:q\224\315:\021\250,;\231\355\002;ZIB:3\026\342:\343V\022:\322\217\200:\026\245\254;\000\016\364<\312N\t=+\n5<\250\360\'<\251\023y=\344I\2559\033v2<\347\006\337>Y\301\247>(\2410>Ij8>e\2150>\010w\350=g\202U>\370\003\341=\311\350\302=\025A\346=\344\371\360=\244\367!>7\341\273=\304\t):n\377e9 \013\3529D\262\025:%\216\006:\275\013H:\217\345\200:\300\027\276:\226\346\327:\223t\013:\236\374\267:\235\214\36198>\3449UU\205B(.\205=\316g\214=Y\303L@\366h\034>\330\245:>|\342\273>\256*~9S\231g=\257%\213\301/\301\n@\263\356\200=\360\240\023?t\313\354=\322&7=\210\334\273\271\250\336)<|\214\360=\202^\r>qK\272=\214\207\367;\'#\000=\370\024\232:+\352\234:NSQ;\025L\210;{\323\240;\275]\375:c\253);OC\035;,\375 ;e4,;;T\270:lr\001;\350\024\000;Jd8<p\337\025<\365\227}=\206[?<\322\032\302;\312d\310=B\257y8\315\246\221<S\251\213>\253h7>5\000]>\245 J>J\335\n>\251b\022>]E\003>\316}\256=W\212&>+\235\006>#\371?>^\245\351=\377\'->\371\245\244:\021\360j:\311\256\017;\205\235*;\244`\202;b\241\211:\317\006\351:|j\261:\025\001\226:l\243\261:\345\263\205:l\254\240:8SM:UU\005C\325\331\220=6{(=\355\225Q@37\014>X\311\034>\021\\\006?M\234\2119\343\226\300=;(\217\301\350\234\210?n!\334\275GQ1?\003\341H\2755a\036>c\350N>&\211\023>\357{7>t \226\275\030\254r\276\177P\234\274\026\334\305\275y\231\006;\220Qs:\026\353\344:\206*\361:\203\027\014:&V\363:h\355\324:\372\342.;\034J\237:?\376;:\255\344\376:\350Y\005;\r\247\311:\032;\003<<\024\014<\230\354\000=\323\027\030<\243\n\027<3\205\330=4\353\2468]ZN<\341\361\357>\322\354\341>4\"\267>\031\036\210>\225\221\004>\324m\217>H56>\237N\027>\202\230I>iG,>R\372\036>;\246\017>x\263\350=A_-;\027\365s:\266I\241: (\335:+\254\3569\241\273\";\002\262b:\343\3507;1%\005;\363\215,:\301\246\306:\204\240\270:\237Og:\000\000\360B\037`\277=M53=\026OK@8O*>`\345\036>\016\323}?\217x99@A\'>\232\372\224\301\341T\024?\006\373\020?\372F\034?\216E\022?0\275\216>\225\271v\273\354?\035>\247\\\254=\300Z\227>\276tA>\374to=\310O6><_\2619\341\351\2659i2/<\035H\303:\252*q:\026\240\317:E\213\016:\264\233#:\336\005\3029\177\242\312:\272?\3549l\312\3159R(H;\ns\377;\003\'\353;8\351\257=\014\3613<\314J\020<Hm\321=\016P08\361\230X<\200r\274>\200 \225>\247\262\247>#,u>s\312T>\247v\'>G((>\362(?>\017\202T>H\257I>\031\355+>\3571\346=>F\275=\352\242\3239\371\371\2019\340K\026<\321&\204:\350_J:$7\354:\245\'\2539\275\337\2359p\002f97\215\264:\312.\t:\236\301\2229\277\300\027;\000\000pCF\277\017=\014c\363<\2135H@\364~\337=\333\'\024>cTY>\010\311\207:g\306&=\214\206\235\301?\000\007@\303Lf<\001\026\217>\350<5>\331\217\316=\034\035\204=[\337\336>\226&\001?\301#\020>\350\036\205\276\260\364*<\034\253u>\352h\r:\250\000\2679m\253\260:\216O\213:\363\001\203:\367v`:\200\341`::\322-:\332\365\31291\246):0}A:\277[\3659\214\252F:>\261.<\341\353\317;\217I\251=\317\247\223<W\017H<\265<\361=\270_\021:g\200(<|\347\363>S3\256>\312&>>\312d\237>v\2437>\255a\373=\033Z->W\276:>v\340l>\242 \024>L\370L>\003\"\024>\007\376,>V\2346:\351\204\2519\020\300\303:n\222\224:\363\232\204:\312\237\210:\331\302t:\242\323\3709]\230\3249\334o\025:\304dX:N\311\3479eD\3229\267m+C\363\\\211=\261\303\213=\025*O@r\226\032>*\346+>\345R\027?\3229\2059@\235\317=\265\004\214\301\234\216~?\324V6>O~\331>\230\254\300=\362\005\244=3\2321\275\272\020\262>\200\374\276>#(\366<\265\325\021\275?\217\230=\342v(>U\t\215:N\313$:\232\014\315:\037f\3719\331y\270:\222\335U;\333\\\":Z\033\223:\227\245\35094\357\007:\020\326C:P\3034:\223\262\226:\2647Q<Zo\020<=\312\031=\"S\215<\0109G<*wJ>\334Q\3258\250a\310<4q\267>$\370f>\177\227\230>\206\356\275>7\'R>&s\201>Nu\210>\037\272\256>\202\316\234>\271\350\326>\350\365\211>V\346$>>EE>\304\325\201: \256(:d\315r:\243\231\2749\211\203J:e2>;\3173\3419\345\246\276:\031\201\2379\026\004\022:\210\262D:\267\0248:)g\':UU\005C\315X\246=\321\303\324<\274\314P@.z\025>\274E\022>\\wh?\177\206O9Q \r>\345\257\224\3011\221_?\033:\'?\244\301\333>^\344\021>V\370\313>\343\320\351=<\373\006>\371\241\256\275\322& >\207_\310=\375\253\200<\306\231G\275z\325\002;\333\266\007;\314\033\373:Q\311\261:\230\315\276;\023.F;\366\334\265;yJ\225:=I\205:\235$\266:\253p$:u\210e:\330\2509;\200\253\036<\2664\235;\327\275\362<\312e\206<\220\201a<i\245\005>4\245\2268\014\310\310<4?\022?\247I\225>\235\300\245>\256\360\205>\204\240k>G\200v>u\331O>\277\345v>B\3659>\315WG>\326^5>\222;\021>\025\230\007>KC\007;Ty\010;&\351\035;Pe\221:\263\373\360;}\307_;\330v\355;J\177\240:\005\242j:n\014\005;\025\316\005:\375\201z:\036Z\023;\000\000\026C\267P\306<,\3575=\277hK@<\202\272=LB\032>\204aZ=\331\240\035;\265\357\342<\322-\243\301q\371H@\026\3776\2766:W>\345\r>=\365K\030\276\211\356%\276\272\207\032\276\323_\">\313c\345<\265bZ>\2305==\367G\330\275\003\3648:\nS\2649&\354\3549\315\347\363:8sm;d\004\3009@\022\234:\333\230\242<l\005\252:\227\330n;\202\305\360:?\261K;b\025\335;\3714\024<\255\037[<\360.\316=\\\201\326<<\r\272<\217\356?=\361\203\307:\025\3474<\224\362\213?4\207\002?\306\232\341>u\037\252>\365\325n>$\306l>\276\307k>\224\337\215>I\350\224>[f\260>\363\205\323>\030\'\204>v:\230>\266N\217:\010NU:F\372Y:\253\025E;\330\342u;\337\323;9\262\267\302:V\310\240<\001v\036;\202g\227;\317^\037;\262\264\t<\376W\227;\000\000pC\327\351\245=7w\207=A\237R@\354\324\023>9\021\025>\324\234Y?\352\256\"9\3670\020>I.\210\301%\305\211?\216Z\237>\232M\257>Q=\216>\"\221]>\363\246\313>\242M\245=\204s\256\275GPs=\373g\266=\214r\003><\023;\275d\325y:\023\262\204:\014Qc;\223\276\376:\t\010\037;\240\2645;\365/\025;\306[\365:\374\356\241:E\365\305:\247\031\247:X\027p:\360\244\326:f\333\017<{z\222;\224\351_<\241\337F<N\3132<\020]\310=~S[8a3F<\006H\363>\230`\266>\223i\267>3&\215>\255\341N>\343\'\342=2\241$>$\330\376=8\246(>~}\361=\3757\304=\364\266\362=\356\251\307=\205\312\":pZM:\200\3173;9\t\240:35\000;\215\303C;\230\227\231;>(2;\255\232a:\023l\244:\265\013O:)\000\020:e@\267:\267m+C4@X=r\360\322=e\023F@\325.%>\030[5>\242\355\312>\252sF9fT\372<qm\222\301\n\361\332?\024l`?\241\231\'?%y\347>\212\205\273>\246\n\223<\331\232y\275Y\001\217\276\363\305\007>\373\177m>\214u\261=)s\345<\304T4:\255\337\204:\032\251\214;\023\346N;\351\263\027;)\317\244:\3405\221:w\032#:\021\220H:f\'*:\030\204R:\375SM:\022\031\306:\306\253\334;tv=<@\303\035=]\332@<O>\375;\313\321\215=\006\007\2518a\215^<h\245+> ~7>\1773\332=\021\340l=\244\200*=\230\257\215=@\214h=\027\007}=#\333\201=C\362\000>\014\206\262=\340Xy=\006~\251=\314_\3659G\2326:^C,;\343\252\322:\2614\376:NoN:Q4::\366\256\n:\374\257?:\275)\3509n\235\010:\006o.:x\000\025:UU\005C\t\276\276<\3072\251=\227ZA@\037\304\363=\301B0>\rC\367=5\363\335:\263\271\232<\013\321\237\301\370\2104@\331\317)?\313\r\223>b\214\026\275?8\'>J\n\005\276L\222x>N\352\261=\251a\270=\354\035W<\216M$=\031\344\227=9\014\344:,\265\006:\217\347c;\037{H:\201\362\202;%\306*;\262\016t:\236$\006;\333|C:E\277\315:e7\264:K\346_:<s\030;\300\306\'<\252J\001=\356\3705>\331\272\320<u\2264<\025o\274=\360\320\224:\207\227(<C\232\260?\301\200\013?C\017\330>e\377g>#Q\264>\243\253\277>\321\"\204>\250\217d>\310X\207>4\240\221>&\216a>\274\223)>\242\327T>\322|;;\257<\2309\030\323\221;3n\006:n\200\245;qLa;\344\332\201:\362\340\020;\026\357\203:f7\336:\224\250S;\027\221c:\330\033\310:\267m+C\264\333\201=D\002\274=\227NR@P\2361>\324\2477>\243\272\025?\032\377\2019MT\272=3\226\214\301\216\031\243?T;m>\375@\022?\213\252\236>\206\241\215>\331\375=>\261$\222>\264\366\235>\003\223\315\274~l%=\177h\200=\355\222@\273\030\366$:\320\223v9Y\265\345:\020\230\270:\024G\030;H\370\271::7\017:\246\017\201:\353S\2349!\213\004:\224\3057:J\264\2259&nf:\211(4<\236\320\353;\313f{<\314\354\024<\022#\251;\006I\013>\\n\2658)\323\366<\366\214\247>\'Ua>\252c\270>#\243Y>\211]\307=\320\177\020>\330\0136>\'\227e>\250\252R>\304\320N>yt>>T\336\375=\346\343\t>,\266\r:\370\361 9cT\036:\3648\364:\317\264|:k{-:\254\246\2339;:U:\307+\0349\274\037\2669\330\201*:\227\232p9}\006\3249UU\005C\261\326J=N\224M=r\025O@\220\364\004>\361\335\037>$\333\330>\002\366\2369\003xW=\014M\221\301E\254\376?\353\016\037?A!\021>\376Y\243>\307\302\236>%\177->I\224[>Q\362+\272!?\007>[nX\276>\377\274<\017\303\334\274B\327\250:\267\325\353:\262IO;[\326\232;e-\031;*R\016;\345w\243;\203\327_;TT\003;\335\210\313:lF\024;\324\316\035;]V);%\330\024<\347\355N<\035\026A=\223\032L<\320\324l<\223\003\341=e\001\3508\213\013\006=\244\272(?\252\000u>\343M\301>\004\025>>\351\2376>/K\n>\233\021\016>FD%>\350\375\273=m(\005>\344\362\341=\312d\244=\206K\265=\234$\202:\261\205\236:\333)>;\2247\276;\240R\204;+Z\340:\006g\244;S/ ;\026\373\366:._\263:\321\236\363:|%\342:\010\306\324:\000\000\026C\2400}=!\303\304<\202<H@\257M\t>\364\335\021>7\346\034?\272b\2329B\336\331=\002\301\232\301\014\340\220?\327MV?\343+K?\212\304\203>\365;8>\326\257\010>\275p\035>\227\326S\275FQP<\207\353\256\275\273@\315\275\355?\245\275y\306\033;\255\354\n:\013\265\031<\007)\260;;\301\';\207u(;\256\363\005:s\252\010;!\364m:\n\273\016;\266\237\021;\270\276\026;\332\364\202;\303\265\321;\374\366@;\'M\230=\004(\300;\353M\246;\306\271\332=X\361\2378v\331\240<\3324\276>\251\032\033>\232\016\252>\035\302\347=\364F\361=\017K$>M\347\001>\255KI>\'\024X>WX\024>\332\273S>mc.>\313e\030>=\010);\316\016\2559\224\234,<\3417\344;\235\370\206;\327\025N;>\002\2619Pp\373:\r\241\242:pz$;\332\3604;A\220\004;I\373$;\267m+C\024\341U=\255\006\246<\311\255A@\357\217\032>\031\320\032>I/0?\2712\3379Uk\327=\260\022\233\301\216>\234?\353p/>HK\375>{\273r>\267\2750>\341\034\264\274\3350\002>q\277Z\275U\317+>F\362\013\275D\362/=o\230\242=; p:+\344\013:lG\300:\302\373\202:\006\'Z;l\373\r;\270p\271:\215k\373:\310\241\3559\242\205\216:?dG:l\255\260:\'\031\321:\305\010\267<\2543\373;OF}>9\261\000=\003q\242<D>\256>#B@9\030}b=\023\223P?E~\276>\316\023\272>e\326\002?\324\263\213>\370i\262>X\276\230>kX\027>dbD>\364\345I>le\356=v\t\364=\324\304\t>\365ii:\321\225\2749\204\365\350:\244XN:O\243\312;\016\213\213;\n>\257:I\177\252:Z3\3279\264Rj:\013\300\014:f\'\255:\324U\344:\000\000\026C\321\300\t=\227\250\366<\316\262G@\247~\310=\271n\n>\250\216?>\321\341::\2048\035=\nf\234\301\317\257,@\313CK\276\022\223P>\315,?>j\\\'>(LV\276z\343\300\275U\241\260;}\273\211\276|\016$>\230\376\226\276\030;\355\275\247s\325:\034_\220:M\233\215:=^\341:\266P><u*\234:2A9;\357\031\231;+\225Z;\232\030\307:n\231\277:=\224v;mr\205;\323j\022<!P\221<\246\236O>\240\312\201<\311\252M<\253\214\314=\3014\2429\361\000\226<\324L\241?\351\253\264>\001\177\020?1\343\024>wQ\252>\370!\210>\300\005I>~\306->>\007Z>\357Q\212>\351\265 >F\316\177>\320;a>\255\036\327:\205}\n;y{K:\365\343\006;\361~B<\205\227c:2`8;\334\317\252;\372\235Y;%\265\271:.\033\310:\311\3238;\207.7;\000\000pC\300\213\372<\010\312\243=\306\001M@e\031\316=*A\017>V\350#>\336\0377:\327$\366<H\341\221\301\302\352\022@\354\242O=\352\217\330>\345\257q>\335b\374>\020\224\364=\340\313\233=\361\333\t\276\262\014L>\342/=\275\242\370\027>r\r\264\275\314\324\\:\274E\024:\211\263\031;\376\000M;\000A\030;\371\'v:\336q\272:\323\314p:\366\t\237:A\245H:{\275\333:\324\375\251;\256{\017;\215n\003<\t\204A<\230\205\223=Z\350\265<\010\275\276<\236\036\233=\r\035\2239\334\215\036<0\370\274>`Y\267>\233)\330>@9d>@Ai>\250\035\014>=\346<>\237g\037>\361dC>_\3551>?-=>\353!7>bm->xuE:\353-\2469QD\016;!\265\221;3\327\';\014\014(:\276@\314:\332q?:|B\265:\023d\021:\212\310\307:\313\310\260;\255\014\270:\000\000\026C\374s\020=\360\365\203=\240\240P@\020F\367=\247F%>\035\3607>0\320*:\'2\017=r\212\223\301\004[\016@\r\000b>\007\232\216>Y\016\220\274\3271\036=Kb\253\275!\256\345=yc\035>\346\026+>\'1\267<jC\362\275\366M \276-A\332:\242 \3319[\360\202:\001\346N:]\n\241:\212\375r:h t:\253j-;\003\230^;\036\372A;\002\354\355;\273`\3759\310\224Q;\331\230\307;\\\301\r<H;)=\354\222W<j\356#<\375\203B=\\\323`9\335(\034<Sm\271>\006\362.>\243\214^>\246\334>><\307A>\322\235\003><w\032>\r\211\214>\034\332l>\031q]>\272\214\250>l48>\017l\020>\241\351\203;\232M\020:\345\207L::\233c:2T\245:\356\306C:\332\031\177:\234b\223;\200\276\212;U:H;\304\277\022<\357 \2459\031\t\017;\267m+C:\343\200=&\303F=\216oJ@r\206\016>6\333#>C\344\022?\272j\2159!\251\310=\001\254\214\301\024h\272?K\030*>f\332\310\273\005K*\276$\330\021>[C\010>\236\004\315=K\2337\276\001\306\245<\205\3776>\023\037\322\2730\207\276<\000\236\311:\204&\212:\255\346\333:g\205T;\373\220 ;\363\350\327:pX\360:\014 \t;Z\216\013;\2778.;\222\361\313:\2269\365:\332\026\344:\200\233T<\264\344\026<00\220=\337#\213<\3728E<\200\272&>\242q\3338]\375\321<\353\314\272>\3159\212>\257W\264>\221\323C>\024EH>5\002|>\333\336Q>\335\353T>\02146>u`j>\277\275K>\317\3735>\301\007.>\231\362\213:)\342\235:\367\246\223:\334\025\274;Y\241\200;!\271\254:Sg\260:\310\215\373:Hy\345:- \374:\237\177\266:\221%\341:<\356\323:\000\000\310BeC[=\211\312\253<\3338C@\312d%>26J>\352>k>|\3417:\336\r\375<{+\243\301s\026@@\340#h\275o$,>\304s%\275h\024\217\275\'\026D>?T\310=\320\237\371=\311*9\275d\311X\276\014\035\222\275OnY\275\2035\326:\010\312\016:\275\326\006;\334\002\321:Df\267:\375\324\330:z\252\361:D\321+<tS\005;\213\246\230:\225\007\305;;\344\253:\220\253\222;\265\347A<\275\217!<Y\367\">\352\323\275<b@H<4\267\277=\266&\2169\220\t\034<\376~\232?\035;\234>\235D\236>\366xQ> 9S>\006\205D>\243\006M>\032\032\036>\341\t\021>\201U0>\354\234%>\213\\4>\255\252\010>\266\305&;C\314\2619\275\303\366:\010\023\306:\275\210\004;\336\310\372:@\322);FP\312<\357\220\336:\264;\243:Ks\010<\r4\332:\223\265\325;\267m+Cj@\211=9[/=?&G@X$#>\202X$>\334x0?\2515F9C\342\364=Y:\224\301\276\014\264?\304\366\244>\327b\360>\305\027\272>\312\021\211>}\347H\275r\221\025\276V\022b>z,\337=],\246=\305Zz=\024Ea>\313\321\211:\243|\026;eUZ;v\032.;7\305\252;h\014\356:\327\250\205:\377\221\276:\353x\223:\342o\';\266\311\307:h\2276:\233\335\006;h2V<\213\253\214<P\257g=\003\302\354<\223(\265<\312\027&>Zs\3208\313\'\034=\254\335e?%\335\316>xS\234>\314gv>\261\324l>;Ch>b\251\351=\352\\/>\352\273\\>`\344\'>\0041#>\3059\366=\277\014\370=V\006\237:\241P\250;\262\222\\;;\221\331:EJF;\'q\026;\203,\204:@\257\242:<<4:\276KM;\305\362\235:\312\n\023:\035\213\250:\000\000HC\263I\240=6\330\260=p\372O@P\357\027>\252\220\036>\362\351=?\014Ln9\312\252\371=\022\000\206\301\310\223\251?\252\200\345;\346\333\200=0\266\351=\226\204\311><\236\326=\262F\375=\023\203&\275\347\007;\276\035J\006\276D%\001=\027\354\022<\362t\217:\217f\274:\325\201\333:\r\323\006;\265\313.;\003\251\335:(g=:GV*:\242\244\":T\251\201:\314\365;;4\315\335:\216\277\252:%gL<vg=<\342\005\013=\345dg<\235\335\016<\217\225*>\030\t\2508\251\022\374<\357\010\310>^\020P>\030k\244>\355\036G>\000\313\013>\264PT>)\036\n>\263}\004>85#>4q&>\312\277\361=.J\366=\031x`>K\214\230:\256\217\222:\246\363f:\351\035@;\037\232\004;@3\225:Bi\004:\202\032\3339\256\361\3179\212\271\\:\025{\t;\344\364\305:\273\266Y:\000\000\026C\3569\253=\022i\250=\266\375Q@T^\030>\343Y\026>C$Y?\244\254.9\024\344\t>\313\324\204\301Y\326\233?\'\257\273>\340C\244>g\326\260=\377\327.>\316oW\275>\"\212>K9\234=\216G\342\274\021\371d=!X\233\275[;:\275\241\025\222:r\037\344:\307\305 ;<\021F;\207\325T;\0251\377:O\323\355:)\341\343:\207C\271:\"x\240:\370\005!;\243J\262:\263u\341:\215%\364;\323\310\005<\332n\316<t\207\341;7O\336;b\304\350=\265\307-8\226\302\237<\250\020\232>\245#`>\376\232k>\337\220\211>\347\204\025>\344>\037>\340\"D>\0208_>\003<\201>\274\201\\>\251\303,>\346\007 >\342R\354=Q\2519:q\271\220:_\257\315:\240\031R;c\010H;\031\352\013;\210\264\004;wy\366:\356\244\261:\257C\205:\312b\260:\210\233g:\217\332a:\000\000\026C\236IK=\341\255w=\334\350M@\344\232\371=\253m\027>\023)\345>\316\370\2709\'`\243=\363\306\215\301\'\275\274?\201-\302>\255\205\242>\201\211\344=\"?\235>\030B\300=\214\252\260>Z\003\334\275\376\366\342=Z\220\227\275\354[k<\372\274\034>\230}H:\374\207#:V/\276:\347\374\351:\301X\035;\371\315\273:\331\024^:\337\360\211:\275M\226:\213\315\021:R\027\010;\301q\223:s8\221:K\344><1\234\341;,ql=\331W\244<G\311\204<\036x >\334k\3318\232\031\321<\344U\323>;}\271>\177\tr>\322^;>\351\242A>\026\343*>\"\177D>*\313I>Z#M>\032B\006>d\256\023>\260\n4>\000\\\370=\217y\3479\033J\3669{Im:O\234\034;f&\224:X\314\002;\207\3067:wTG:\276\000\232:\262\344\2419\220\340\267:\271A,:\3475\":\214.\332B\304+\271=\271\010\225=\261\033P@y\014)>Zl+>\027T_?\274\241\0249Zr\017>\203=\210\301\344\214q?;\034\014>\026\267\247> \225\326>\240\203\254=g\221:\274\361\217\221=[\353\024=\250\010;>\243@j<\277} >\250%\'<\177\347E:\327\017W:\321\217\210;J\306\273:\373\245\205:l\342\223::\014\277:&|\021;\374$k:8\0213:\232$1:k\032\342:\201\335\243:h\002Q<\013g]<\340\035\014=gum<\005\243\037<\247)\374=2\311\0318J \332< \265\270>\205\250\234>G\202\361>\254\224\205>Q\374E>$\277\020>\001\036\315=\205\302\326=\022d\000>Pw\252=j#\303=\2154\363=n&\230=>\202\3439y]\036:\020L-;\240\200t:\'\355\027:\316\274Y:5\323f:\\\035\261:>\374\3669\366\230\3259_\225\2529\327-\247:\202\263$:\000\000HC\360\363\211=\261\364\000>\321\210E@\375\330F>\350\226M>\270]\351>\271\30589Z\364\032=\017E\217\301\312\314\341?/\035\001?\036\231\256>\270\327\010>rVy>\037\342\323=}\345\034>\'s,>\257\204\017=\345\253M\275\013\001\224=<\344\370<\340\265$:F\215\224:\272P\252:I\322y:q\177K:_\342\001;\326\221\227:\376\035\201:\036\310[:\031\357<:z\356l:\2440\':\022\333<:\327i\221<\014\t\246<u\202\256=fc\207<\023\250\247;\030Y0>\235\323\2038>]\025=\302\265\241>I\361j>\234,\301=\360\267\301=qn\216=\370-\207=G\360\220=\200~\301=\315D\344=\006\351\326=\232\231\232=\006\016\321=D,\205=\307\352\3159\273%T:l\265\3159BU\3679\346#\n:3g\355:\345(7:\366\213\027:4\215w:\331\212\3719\r\3558:\333\033\2209\027C\3079UU\005C\240\270\321<\241\366\010=_\3739@\224\021\357=%\207<>\205W\221=\255\204I:\003\236;<\326\277\245\301\333Y?@\016*\250>\010\027\215?8R\236>!=C>\223\022\031>@m\340\275\226\236L=]H\307\275~c\256=?\242\022<\021\326\210\275\023\334\n:\246K\25493\336\260:\313\335\257:\313\355\036;|\314\205:n\322\264:\033+\212;zV\002;\230r\203;;\324*;\234R.:I\243\006;\360,\t<\256\343\264;\216=\017>\000\013\212<W\326/<\264Y\020=\354\020\2419\344~\272:\370\350\321>\0250n>o\220T>?\344+>>}\\>!\375\013>\242\352\330=\026\270*>@7\025>*)\335=\361L\017>;r\001>\271\376\223=\371\270F:\323\311\2039\241\250\247:\326\003\251:\272^\034;\321y\201:&\005\231:\0377d;l\367\257:\350\274\202;\"\220\361:`\032\3379\230\035f:\000\000\026C\004+\211;;\250995\230H@A\217M<\270\027b<\333\037\013?Q\342\030;j\215\332;z\027D\302<\320\234=H>\035\275~4\021\275\253\376\266<\032\251\230<\202\222N<<\322\241\274\031 :\274\000\301|8\266\274\257\274\035=\024</\366\014\2730VZ8\253T?8\207 ~8\315j\3569\256\321p91\356@98zD9 \333\023:\266\377@:\017\304\037>\260\266-8\240t\2128\016\2001=q=\210<+\345y:\013\0044?\323\020X=\260\326a=w\013\035>\356\236K<\\O\362<P\263\301@ \216\234>\276\233\214>U\333\r>\237o\300=E\026\245=\001\250\253=q*\033>\335\373K=\213\246\311=\232o\256=5\205\036=\212\352\211=f\266s9+\n:9\332\233\2309\261\032\n;Q\371r:m*N:eTJ:\322\007C;}\023`;\215I#=9t\'9\201\203\2019\367W\'<\000\000\026D%\266\215=\267\217\215=\310\036G@~\214>>\364HM>V\364\n?\303G{9\360\037\230=\244\270\215\301[\201\007@\313\234}>\007^\224=; \004\274\036\016b>\262A\030\276;f}>\370\246E>\354\000R>sH\'>=\3504>\357A:=\212-e:8\225G:\t\252\331:p\372\271;\372\263\304;\014\\r;\302\227\211;\375[8;/_\230;\352*7;s\373k;}G\022;\243`\\;\003&\263<V\330\206<\0034\312=\215\246\267<\376\330\022<\227\3348>?\273\2578\310\241|=\253\352\274>2\261B>\241\341\241>\364\rA>\n\037.>\323\344q>\374\343\037>)\016->\344\000\023>\237\345$>\225M\030>y\324\355=W\275\032>wD\3229Q&5:<\247\200:\001\256\335;\013\002\262;\270CV;ro\220;?G{;\310\340Y;\307\003?;\031\3631;\354:\r;J\"\355:\267m+C*\355p=eSX=\216j%@\000\337\026>\277\244A>Z\304z>\275\201\3109P\221\257<\317\305\227\301\334d\031@\330\360\350>\370w\003?GZ\214>\356\201\243>\321\326t=`\325\313=\320\005\341=\240\313\240<~\027\251\2746\322\220\275\242l,\275\202\241}:a\330*:\215});\247\230%;\001`\355;\354\337\253;\277\'\210;\003\312};)1\276:\202E\307:{\224\224:I`\312:6\203(;\025\340\273<\026\034j<o\262\205>\243\344\240<\267i_<W\372\352=\371\315W9\235\224T<S\220*?\006\313\246>\201\002q>:\3735>\275\006\020>5\363\020>\247V\031>\326\033\301=\313\331\272={J\275=\305}\231=Y\322\205=\277\000\315=.\021\3619\177\303\3709\202\010\365:?<\256:\303\220\253;\272WW;\267\362G;\231\341\365:~\3650:\317%?:\223c.:\"\025\203:1\334\232:\212\235\270Be\366J=\037`\256=\377\035P@\216\343\003>\262;\">\014\231\243>c\236\3169\352\005m=\323\010\211\301xx\367?\226\031\331\276rou=8-\311=+\330\257=\227\2771>\251\300\341<\334U(\275\301JG=\035Z\t=\254\224\003>\002\301B\276\322\320\2739X\037D:iM\335:G\010j:\347[\277:\3622r:\303S\335:,\246P;\254\214\213:\rO<;\232\211\004;\303\241\264:\236\210\312:y4T<\351\323H<$_\025=w\311\256<\242\005C<\270+\010>5\25179$\224f<\324\357\250>\235\215>>\3737\231>\250\001\344=<\351W>U\325\027>\005\363E>#\2407>\325\250]>p\276z>q\235,>\352\212\t>\372_7>\350T*9\215\023?:\215\366\263:[\3725:\302\253\260:\247j&:6\360\246:\321\0205;}\352i:\006i2;\024\030\364:\n<\256:\272\200 :UU\005C\313\203\300=\360@\233<\203\243O@\351\2372>\202Y*>S\377w?U0:99X >\030\377\227\301\203\022\202?\205K\227>\3378\314>0\350\006>\377\377\202>7\376\233\274&\'H>\036\310l>b\027\206>e\206h\275<\333\264\274C\036X\275\267\264\3549.\3507:,K\000;F6\203;\035\352\340:\341eH;\355\245\305:\014\240\231:\037j\264:\316\007\246:\333f\253:\345\026\001:\003j\337:\013\"\210<\203\032\260;\0208\022=\304\366\206<\342\316\345;t4L>\016d\2048\007\371B=\366&\375>\352\257q>\213\321\243>7\275\025>\\\365/>\312\035O>zU\374=\266\240g>\225HN>\333\3706>\340\204C>\262N#>\345t\351=\322\362\2609\214\245\241:\276\022\351:\351<\233;I\300\205:\207\363u;Ocz:\275Z\016;\331\220\265:Q\373o:\177,\204:j\206\2149\202\255\256:\267m+C\223\250\266=\036e\251=\252\231R@\266Y\035>q\207\032>\337\326u?y\\\0269\177\020!>\353\330\205\301\"<\216?t\352\373>L\350\231>\031\366\251>\031#\215>\244B\240=d\'*\275\306\232\345<\315\240|>\355S\200=M\365\007\275r\220s\275\2542\035;\274]\214:\032V\357:\257\212S;h_\014;9\371\277;\254\360{;\355\027\014;n#\242:\226-\233:\334\251\324:\004\352\302:h\203(;\356\344;<\313\201W<\200\362\221<\214\372A<\341\344,<\341\314\016>\242L\0368\037\341\234<\262\363\312>\013f\021>\244\311\200>\246\035%>\344u\347=@c%><\335\275=d+\t>\256\202(>\362<\374=\246\336\362=\221$\327=\307\213\266=\334\030$;\275.C:\030JT:M\232\265;m\362\361:s\355\271;\034\006\255;\262!\305:\215;\002:P:d:j9\255:^\032\326:p\313\357:\000\000HC\t\265\230=I5V=\232\230N@\t\335\027>o\247\033>I>8?\266\020\2029\241f\372=\242?\214\301\232b\221?Sc;\276&\230\277>\374\357\311>\247\361\267>\256Nf>jp\032\276d}\347=\243N4>\234\225n=\270/\317\275h_\332\274\274P\002:c\271%;\316V\206:\024gt;\251\017\362::\227\002;\241)\031<\306w\260:\363\013\236;\326\320\325:\260\266D;?c\314;5\246\226;\0347\'<\333\266\"<\357\340\232=\337\310\'<}\315\306;\300\303%>\373U\2468\261\264\323<\031\275\313>\354\001\205>G\370\340>\313\260\227>\003\255a>\033fJ>\212\010\216>3\006Y>QRu>\270)U>\265x\372=\335J\364=\314t\013>\343\300\021:\355\252+;b4t:h\211\205;\310\251\354:\201\327\003;\205F\002<\231\276\270:\206\253\344;\361\007\r;:u%;s\372\226<>[\236;UU\005C\023\330\344=\304X\300<\002\201H@\016H\032>\326\306\367=\303\037\241?\263\365\0139\003\215U>\212S\222\301_\362\006?\236G\240\276\261\323\177>Yw\200>2Y\363=\207\273\010\275\0321\234=ZK\303=\203YT=u\201\215\275\326\374\354\275`s4>h\343\":V~n:\374\224\370:\371\005\001;\022\224\327:\314\301\270:\303U\032;r\342\377:\345q\024;Gx\261:\014Zy:-g\301:[\254\240:\372\236\206<\211d\001<O\340\317=\272zn<_\234\320;\r\364\207>D\337N8\330\243\023=;\264\'?\002\220|>\034\217\226>s\317\250>\333\244\\>\333\362y>\251M:>\330>\033>\212\305[>#\352\n>e\346X>\225\304\037>\245\013\002>\245z\3209!\257\027:\320c_:\024-\320:\231\212\225:7\305\226:fq!;\0229\007;\262\250*;\001Zk:V\201\006:2\206\243:q\000P:UU\005CKuV=P\225\215=\r6@@\023F\365=\363\276\026>\004\005\335>\235\235\2079\2707\233=\036\311\210\30116\315?\351+\230>=D\244>.Z\360=\2455\237>\010\t\350=U\224\024>&=j=\222\212\365=\303\200==:\234\004>\273\267 \274\251\341\262:\3308\225:\346\377\021;\216\276\'<E\001b;\004\334P;\0347[;\036\005V<Dz\326:\370\370\317:\255\264-;y\004\206:\262\376\272;\033;#<\207\312\202<UF\355=%4b<\0350P<\216\313\003>\345\004\2728\234(\260<\251\276\257>\305\302\215>X\000\266>\255ZN>\307\316}>\366$i>g\2609>v\266\007>\316X\020>\342\002\000>\337\022)>\235\263\370=\004%(>\300\365W:\267jL:\334\276\273:\3713v<@\313\024;\351\207#;\025\321+;\303u\206<\266n\021;\022-\310:\335\310\360:?\252F:W\216\233;\267m+CfP\233=\216\023o=`\035P@\326\342=>\215\2552>\265\274:?\337\236\2249G9\t>W\355\222\301\327:\273?S\366\021?\371#\003?:\320\266=\222\351\231>>4\244=\177\003^=\242A\303=yA1>\271\271\274\275f\251 >\"6|<\362\025\2079\210\212\t:\235\342V;\213m\245<%\373\210:\0336\214:\370bS:\2360\241:\364\263>:\277\352):\033{3:\272\302\3329\345+\265;XI\204<\277\263\312;\373\2779=\r\\\273<<\373\030<^ge>!L\3468\325\370\215=]\272\204>D,P>k\341>>\320\375=>\205\214\375=\305K\367=\246\013\016>\242\332;>Kd\216=\'\370!>w\267\n>\255\314\301=\006\224\335=Xi\0219\250]\3029\273z\006;Y\315V<\360\205b:\361}#:\245\030&:\236\316\254:z\234$:T\014\3049\321m\030:u\266\3079x\227b;\000\000pC\346@\225=\026\010\243=p~Q@\300Q\'>\336{*>5\277%? 9\2139qH\315=\032p\213\301\276,\240?\2358\307>\227\344\003?\276Y\247>6w\332>\363YJ>uN\311<*\357\032\274\241`<>LN\214=02\026>\0104\246\275\312o\232:$gK:\227\357\231;\377\274H<t[\346:\257\222c;\024\364\355:)\225\027;\202\007\023;\365\005\036:Rw|:[\007 :\030I\222;\201\213\013<\037\016\337;\263\016\240<U]8<\223#\036<S\323\330=\257\200A9\300\201\302<J\305\001?\272\277=>\211\312p>a\r5>\237\240*>@\344E>\255v@>>\263K>N\372R>\010\335/>\366\341<>\221A\233>.OV>&4\206:@ \3149\360\226\302;\200M\346<\301\017\304:)\356\261;\034\360\270:\033\001=;\215\211\034;\326r\2649\374U\255:!\003\3559;\\\365;\214.\332B\357\342\372<\261\253\304<\367\232B@\372t\341=(\320\024>\274hN>\210\372\214:Y\221E=\037\017\242\301,\315\r@ \252>\276(\203\233>%1]>=\365M>$\254}\275,\254.<o\224\355=\232\370\207\275\"\263/=\026\303\300\275\270\377g\274*S\212:tX\025:\232\334\262:NZ\271:\035\307\276:\253\202\206:\370il:\356i\370:\360l\327:\307\356\241:\023 \367:\367\004`:\377P\276:J\204\240<$\026E<\211[Z>\224n\004=:\016\243<\216\361n> \340\025:\313#L=\217\224\217?\202:\263>\314r\347>\351\224\243>\036\000\200>\353\367M>\034\313\221>\257\"\204>\002\265\227>\343\035\255>\004t\244>\031\270\254>\241\306\217>\325\341\241:\252\020\036:\355W+;h\317\021;x\326\270:\024\350}:\221\262\234:\374\343s;?q\376:O\372\252:\001;\322:\240\375\310:\230G\220:\267m+C\232\220\321=+\324\365=i\265M@\025\336_>]\216O>\252\002f?Ai\3548\007\2050>\352\233\206\301\337p\311?\t\336.=\306N\302>>qT>\034C#>\330Ok=n\273\036=\213\220\\>\301\300x\274\3120\231<C}S=\"+\002\275\236IN:;\354|:r\267\306:\0258\217:|\363\026;_\246#:\264Gd:\260L\202:\032#\260:%\361\261:A\231y:\272\233[:t\247S:y\260\313<\331\214\022<b\nY=\326\023a<$\306\262;\370\215t>\224p\0018~5\237=K&\263>\251\235\310>\250xR>\265q\244>\301\351A>\334\200L>\277\307;>k\367\211><{#>\22696>D\2717>\334r\371=\271j\002>NR8:\n\313\210:\205\016\210:\010\323\031:\205&\245:\202\377\2529:\007\214:q\2628:\332\007_:\'i\205:\322\373\3379\327F\3129Kn\2609\000\000\360B$\\s=?\222G=\3261L@\030\367\315=-\225\326=P\373\375>%\325\013:66\314=\2001\220\301\001\224\202?\360\346\344\275_,7?\037\243\201\275M\013\365\275\351\272\230>Yu\022>\246\003>>\0077\266\276\037:\223=\376\200N>\276\344o\275Wn.:\354OE:6/\010;k#\333:@\037\310:\370\363Y:\31101:\366\242R:\314\301h:\013p\246:\372\227\311:`\343\2579\325\343\263:\253\177><\210\337g<\374\304\366=VM$<\260Z%<\332\032L>[\03279if\310<\216\325\321>7\351\311>\227\217\202>!\304\253>\210{*>\016C\035>\370+`>\210\236L>\005\331~>_8Z>\320\213*>\200+W>\363\013\226>u:\3709\250fJ:f4L;\300X\362:\252;$;\214\320\343:\"U\3409p\225`:\343\035f:(~\215:$\020g;E\036\2269N&\230:\000\000HC\310AW=\260\261\034=0=L@\215a\010>\274\r%>V,\303>\227[\3759\313\030\220=\275X\225\301\330d\353?xm\027>>K\262>LD\305=@\306\\>Kk\231<.\353\267=\242\274\263<\0322\254=S\"\252\274\355\t\231\275@\001\257\275\222\262\276:\036\353\2759+\001\347:\224\020\236:Y!\211:\246\252\340:\275\350c;\326\330c;hMa:\251ng:/\367\371:\216\241\217:\036\021\343:\366\207p<\034_\n<\334\020U=\305e\270<\230hb<\016L\030>j\370@9\306M\001=\351t\021?M5\247>\203\\\210>\333zq>\364D6>\033,Y>\316vS>\206\257Y>\334o\206>\027\032<>\305X\242>\0312\202> _t>:\316\302:\212g\2659\356\230,;l\311\243:\223Dx:v\277\316:\271\244R;\207\342q;]\231K:q\201\222:\006\372N;\361\"\225:\025#\233:\000\000\310B\263z\215=\372\227[=\265\331C@\275\343,>\022\244/>=\300\021?*_\3209\244\357\267=dB\236\301\343\177\253?\001\272\222=W\222\030>AG\254>q\316\036>\274I)=\265x\360=(\372\266\275\265\231\000<i\302\250=\335\235,>x~\224>\277\016\2169\245\307\2349\312\n\304:\313\376{:\322T\254:9H\3019f\'\3119/u}9\356d\3379PP\003:\216Gf9\340\345\2229(W.:\'d\272<\347\0213=\006\253\340>$\354\247<\027Y8<\277\307[>\212;o9\377\204F=W\240)@4d\274>[s\331>\300\250G>\033\236I>\255S)>\371\n[>\255\224a>\n\262A>\2008Y>\367H\206>\237\211\376=\026\365\010>\235y\3169\314\025\2559\201\262\207:\022\257\306:\005&\007;\274^\3249/\201\3139\363\234d9V%\002:\002\362\001:B\226\0209\214\331\2079\226@\036:\000\000\360B\250\003.=BrT=Z\207R@z\362\277=\325\237\345=P\304\342>\327R\2659+\241\263=\361c\223\301\202LH?6\325\213?\326\210J?\275\313\263>\007\346`>\245\253\216=\007\345\271\275Eo\225\274\237!\020>\250\320\221\2758\0361>J\n\313\275WN4<N\004b97\322H<\250$\203:\210\222\352;\336\n1=R\310\255:\332_\201<\034\320Z:g\002:<@\222\262:\010<\':\214\017\227<\036\300\243;\315\010\371;2l\272<M\023\227;\037\301#<\245x\211=\352\374\0049\013H\212<\023\207q>\360\026.>\317\226\253=\270\\\306=\302\313\250=i\265\212=jb\254=\212\200\326=_\034\350=^\352\007>\231\367(>\317z\031>\200p\002>\313\264R<`\347#9\237\\\214<\243\2752:\213\3243<\021\311\211=L\251w:\266\005\376<\322X8:\234|\201<\272Y\024;\024\337\017:\262\202\214<\000\000pC\302\244J=\024F\240=0\316L@\303\207\020>\377\233(>\301\266\306>\306J\3369\250\210X=hG\220\301\004k\003@\353\216\361>\264\216\255>\030\025I>x\260\337=S\350\327=\212\250r>DO\311=\307\377\245=\322(\037\276J:\371\274\253;\324\274\243\362\330: &\37696\251 ;\317\374\035;\327\222\255:\001\343\370:\277\302\277:\214\375Y;Sp\227:5lv:H\256\324:\231\004\202:\377\241\371:a\004X<f.W<\3653\204=~\336\221<\265\242$<\220\375#>\251B\0319J\241\343<\232\306\372>\340\266`>VT6>\354\236V>\206\036L>\323\271&>3DP>`Oo>\277\373B>\002sP>7\344;>\357m\013>\367ki>\306\365?;\001\003\004:.\222#;\300\364\201;\354\274\203:HX\034;]5\242:\204\323S;V\020G:\263s0:\3247\351:F\377q:4\244\224:UU\005C\233\013\261<\352\303\026=\335\365>@\0048>=\314\223\277=\306\222\213<\362\022^;4>\366<\377\335\244\301\366\330\\@\317\317I\277^|9>\275\335\264\276\323\010\200>\267\266\303\276\030S\373\275\306t\207\276\222\005/>\315\265\310\274:5\330\2747\312\357\272\220\014\3319\302\310\3069\201.@:\322\364\352:\332\331\233:\276\027\3009\311v\337;z\361\253:\234\021\346:\364\373c:3\206\323:\271\376\370:3\244%;\367\257\222;M\325s<6\2500>\030\255(<i\226\317<\331\310<<\312\246\007;s\324\314;0\022G?\367N\356>\021\332\233>z\222\221>\206\032\347>\227\301\233>\305\360\304>\031_\276>\001\377\323>\354h\330>\312H\231>Y\235\211>iy?>\017\370\032:[\r\025:\376B5:\300\2340;\206\333\215:5\007\3269E\307\017<e2\276:U\320\004;\263\034\274:\302\337\r;\317\344&;\'\256\013;\000\000\026C\377\210\221=9\r\220=(CQ@Z\035\010>\252\231\020>h\3124?c\023M9(\030\366=\247\220\206\301\367\"\212?\331%)>R\207\307=P.\217>\365\206\222>\302\005\264=\343\221\224=\032?\332;\260V\333<\373.\031\275\216Ro\274\255\347\030<\235\237&:im\367:_\325\250:\254[\r;x\351\247:k\006!;\303R\327:\336\247a:\225Y\202:e\241F:x\335\204:O\021\245;\007D\352:B\314\364;\356\237\r<N\275\332<\014N\204<\336X\231<^\006\224=\'`h8\331\035\030<\352\016v>\340\230\211>\014\335Y>m?9>\25443>\036\307\302=\266\204\014>\2715\273=\031a\026>\363J\375=\261\211\334=\r\330\373=k$\303=A\037\2509f\"\314:\3620\257:\236U4;\244`,:\330\374r;W\3468:\207\246\3669c>\024:_\t\3779@\372u:\266P\210;s%\251:UU\005C&2u=\032+X=\311\207O@b\276\002>U\004\017>\235\033\030?\031\210\3549\375\274\345=\026\\\217\301\252\026\235?\375)I>%\342\276>\251N\206>\254\324w>\326\231,>\001\210i\275\030\370\023\276\204\357\031\276\'\265\277<\014\353\212>B8X\275\035\210k:\242\233\212;s7!<A\333\271;\311\013\241:\240\035\026;\333\330\345:\002\'\231;S\226\007:\'<\200;\254D\007<M\316\3629\035\213\277;\371|B<Gt\227<\357\221\265=\326g\260<\330\341G<\265J_>\031\232N9&<>=\377\303\005??\225\220>\374{\005?\213\317<>\237\016e>\357\245I>\"\3714>\261\347\214>\205$2>6\nl>MQ\220>I-u>\231\236j>\256\215\177:\265\233B<(G7<%\033\320;\225z\332:\2150\n;\'X\343:j\330\356;Qk2:^\222\337;\373\213\363;\2754\026:\236\024\\;\000\000\026C\333\316V=\242\354`=L\373K@\303\356\357=(\257\014>?\251\305>\034K\3049\001\252~=\237E\215\301\326\225\374?\031\324{\276=\332\213=\201\377\242>[J(=\3327\001\276^\3740\275e\241\253=\t\331\034>\256\r\262>\261\0011>nnZ\276\335\316\030;\372\261y:[\262\260:)F\272:\022\317\017;9gx;\314j\001;\351z);\332~\333;\341\000G;\245\033\215:\246\002\225:o\237F;\010\376-<\262Ei<\253\233\013>\356\204\205<\3513\r<\212A\007>K\234\3048]\357\254<\271\006\277>B\014\247>\341j\220>6\323\031>\nke>\320\224g>\276Ub>\210\207V>\231\374Z>v\377a>\274\347:>2\3133>\217cV>U1\';4\221.:g8\203:<\203H:\332\360\006;9\251\237;\271\005\013;\236\256:;M_\036<\370=\215;\260\243K:\276\021E:\254\177\036;\000\000HCw\327\307=\274\213\310<\020\020N@\207\2530>\237i,>Y\034v?\321\265:9\303J\'>\203\310\224\301p\264\225?\351N\306>\030\316+?\305k@>\303N5\275\271\023\267;\020\026\232=b\333\034\274\375\200\000\276\342\3316>\302\207t<O\351\r\275RU#:\360\020\244:\330\202\264:\200Z\236;\010Z\\;\032\344\023;\232k9:\312\261\t;\325\377^:\254\034x:[b\';\367\211a:nq\374:\343\333r<\221\020\222;M\253H=c\220@<\263\232\344;\204\257%>\273\230\2258\2779\013=\346i\277>3\324\035>iHd>w]$>\334\014B>\200V\034>\202qE>\312\324K>)q6>fb\022>f\005\'>\273\024\323=\251\362\331=\200\2747:NT\206:ba\234:{\r\313;q\202>;\342\274\357:\004j\3419\312\266\336:\322\024;:\217\317\024:P8\";K\327;:-\344\314:\000\000HCyH\033=\031\322\200=\234\377N@\316,\026>xL4>\204\335i>\205?\024:k\253\020=E\203\230\301\312\226\027@\351I}>\205\001\244>\023\231\301>\201\'\n\275\032\266\345<z\276,=\311i~>\216\002\002>.\350\237\275u>\210\273$\t=<\226\371\320:\376\275-:o\245\\;\010\273\354:\0367Z:\314\002Q:\000\366I;\343\1774;\221\320\205:\034\245T;\365\260\313:r\274\275:\366X5;~\213\014<\027\205y<\246\266J=\240E\224<\254\264\'<|\341\250=R\236\2129\0073\301;\246\255\341>\247q\247>\323v\241>qJ\202>\210\023\266>\207\037\214>\014\035F>I\364l>\306dU>5(\216>\367\222T>\324wW>H\255y>i|I;\242\270\322:@\313\327;\336L\371:\233\325\005:p\366\r:\361\337\341:\225W\256;W\307\214:\272y\374;\027\003?;KyZ;[\372&;UU\005CZ\025Q=d\224U={/Q@B\025\035>\345\365->\032#\330>r\324,:G\"\200=\313P\226\3015\255\331?\237\234\325>\316\346/>\013B\353\274\222\376z>\224l\206\275H>\325=\211m\347\275\252\021\352\2747\353\326<\273\002\324\274\336\363\031\276\\\366=;{\305);\323\315\230:[\242\265:\211I\244:A\2416;\263\223\005:\335S\203:fY\232:\022\034\304:$\370\325:\263Q[;\325*B;\352\020\214<O\353:<\3431\374<\313\257\310<\350\301><DS2>E\300\3579\007g\003=k\027\203?\225/\302>\354$\306>\274\376\232>8\231\223>\247B[>@zQ>7Pv>\"\326\271>\336\177\233>\304)\201>\345n\271>\n_\277>\022\276\314;\203\222\275;a\0371;\303?\024;F6\006;e\023\313;\n\364\027:\305\275\264:\332o\320:\212\231\034;-\214$;J\340\276;\205\267\035;\267m+C?A\304=\317m\034>\254wQ@\017}.>\242\213+>\303\210\204?\016\241\0049\217u&>z&}\301\317\367i?\245\305\301>\027\224\225>u4\207>\210\014x>\t\273\264=\006\363\262=\253\025w\275\333\241\013>\276\007\301<\300\345\033\273\017\035 \275\032*\005;0n]:\314s\234;\276\036\014;x\r,;\026\200D;\032\345\301:\367J\033;\025\255E:\245\376\276:j\263\250:\354kz:\216\333\374:\001\370]<\272\321X<\216\303\342<\201\021\227<\340O@<\263\335F>8\356\0078\307\331/=F\333`>?\237\n>\272gb>=\351a>#\330\026>eI\024>\352t\250=p\020\360=\314\235\305=\237H\363=\314z\r>\2038\322=?\n\344=C\226\325:_u\3629\215\016\201;$\n\265:%\2274;\016{F;\360\036T:\342t\000;\020\255\3779\330\006\217:f\336_:}T\3339eZo:\000\000pC\031\250\253=&N\032=\324\037M@{\302\001>R\362\362=\275Uo?\213m\2049\342d\022>\206d\216\301\246\035\031??\250\267>\014y\243>\350Z\222\275\376\037\276=gj\236=\211H\021\276df\303=\277\313\030>\003\304\264<\237\323\021\276X\332\363\275Hh\274:\271\014E:\307\033\032;\004\016\205:\330\215\207:T\264g:E\310P:\274R\264:\001{\323:{\200\034;\215\244\264:\201\335\226:a\033\242:\345;!<r}0<\216\227\255=\177Y\367;#|\344;B\030 >\210\\\3148\237=s<5u+?\316,\302>\250\244\307>\t\247\201>\315\352\231>\374\3726>~A\210>z\017\207>(\2419>\266\303\\>\366\276`>?\207@>\316*r>\310\270\256:[c5:_a\361:\312\377d:\000\352\234:\362w;:\257:\014:\230\3274:\262\352\244:\344,!;\023\347\354:\215|\217:\245v\027:UU\005C\254\351\216=N\"\314;o\320,@\235\376I>\257\221J>\342\201B?\251\365*9y5\357=>$\250\3017^\210?\366\265\002?z1A?8{\204>\025Yc>\251HW\275F\275*=\353]\375=u\307z><\370\346=\324\022g=\r\256E<\005]C:\"\225\2459\206?\353:#\341\306:\000\251\006;%=\276:J;\374:\200\t\007;\233\206\217:h\225\017;\312C\276:\343s\207:\032\027\212:\177\017d<\215\252\326:V\204\r>\010\373,<l\007!<\254\273\033>-\337H8:j\022=\271\204\023?\000\021y>Zj1>\270\033I>\005O\007>\325(/>b@\r>\372\0054>\352\354\'>\343\005\352=\260\327\022>\272Q\302=MM\326=e:\002:\350>f9`$\242:\373\263\204:\364\305\266:\246Pf:fG\262:\334\243\265:.$1:d\r\314:t\255\210:\204\2374:\375\306\3229\214.\332B`\271\313=u\271\356<\323\350E@\377\316T>\265\333D>\305Bc?\361f\2139Y;C>$\363\224\301\350\310\317?\302\375\274\276\202\265s<\246p\275\275aO\006\276\332\261\227>\231 \336\275\372k\006>o\202\200>o(\347\275\370\310-=\306\373\017\276VRJ;\017\350\2519\314!\340:\3167\246:\223\337\236;f|=;\017\332\254:N\263C;\356\033\275:=U\375:T\221\364:\222!\252:\227[\';+7\277<\363\036\034</F=>{T\366<\306YO<\212\316\204>W+\2718\001\346\357=\341\304>?4b\350> \343\362>\201\006E>\236\306\214>\006?\214>\224\306\211>\212\357\241>=I\033>A\006O>\322}X>\344\220\205>\245\321z>\'\227\233;\332\275\2139\357\214Z;\244\272\016;\335\370\212;\242o1;:\303\261:\0213\\;\262\r\322:\021]\022;\027\212>;q\271l:\235\316\273:\267m+C\000\222\270=\002>)=7\205J@S\321+>*\230\036>uh\203?\3318Y9\207f8>!\245\220\301\355\362|?%\010J>*\027\220>i&\203>\240K\356>\246\203W\272\004\237\020>\037nW>J\036\213>j\252\274=ls\226\275\274LY\275\243.\027:&z\24595]\225:\007d\214;\032r\202:\255\374.:\271\207\t:\335\315\254:\027\200\362:\330\341\225:*\271\213:s\251\233:^#\325:\304d\177<\3731\032<\311\310\246=Mev<\261x\351;\213\017h>\224\010\2028\352d(=\014\254\001?\000\033\207>\221\265\276>\337\242B>\225Xo>A\375W>Z\353\032>cYS>)?8>\022AY>Y\003@>`\272?>$\n\370=\220\373\2629\307\344F9\230\200\214:\362j\236;\007\020Q:\021\356X:\363\344\3329\330\263\002;\224\243\016;\303!s:\004\216\307:\346\267\277:\303\317\236:\000\000pCTe\221=\225\3677=&%P@\332L\034>\333\016/>\225\300#?%\217\2019\260\357\324=a\337\215\301\340\351\244?\363\321D>8\323\253>3*\316\275\246\371\034>\025\225\246=\037\240.>\263\360\335=\255\354n=\362s\206\274\031\001\331=\004H\007>\265\324\273:hf/:\002-#;~\373\326:go\001;*S::\234\261\253:Va\371:\355\235i:\240\277\325:\026P\t;\r\026\022;xc\330:4S4<\nk\334;\006[\035=\333\021\030</\373\262;\035\3332>9\323\24482u\301<\360N\250>{\\\031>\312r<>\305\351\026>\306Y!>T8%>\262&\t>\321;\004>\341\036\016>)\272\367=,\351\273=\245g\t>\301I\001>\213\256\326:{-\3749\232\376(;\235\346\253:\264\230.;^\331\3259\277\277\233:\t\302\351:=L\':\204\233\032;\342c\315:z\rr;\357\227\212:\000\000HC\207\311t=Z\210\007=\247\217M@P\262\334=\240K\341={\301\025?\346\224\2279\301i\334=\250X\217\3012$\254?Qz\304\2759\370\227>\260\2320<;\322\236=@\353\201\275\353\346]\276V\347,\276`\004\366<\212\226\203\274c\241N\275\365\252i\275\244%$;S\266\342:\366\331V;\376\322C;\256\244\256:\002\271\000;&#\346:3C\n;\221\255|:\022\366\r;X\227];W\307d;\356\020\021;\301\003k<Y*\361;\351\032\211=/\236\037<fV\360;\233\341_>\264\252\3128+\347!=\245\262\304>h\261\246>\025\260\303> f|>\272\372e>k\026?>\360H\210>&\344g>TO@>\252\364\242>\225\356\236>\220\247\241>\370\0164>+\022I;\002\261\366:}<\300;P0\004;S\352\230:\240\265\013;\252\013\332:x\211\000;^\3028:W\337\321:\003\265h;\273\330\213;\212\310\325:\000\000\360B\327*\247=\341Z\256=\326\346S@\177\266\'>\021\251*>\342\301d?2\22169\033#\027>H\365\206\301-\222\225?@\265\374>uVz=>t\267>YX\213>\250\0069>\010\r\037>i\301T\275e\t\357;\310V(=\317Y\377\274\351@\316\274\254\235\014;\304j\205:\241e5;g\341\266:\341v\204:\331\330\363:\274R\017;\327\272Z;/\241\263:\255*G:\236\362l:\261[{:\371\031\321:\361\205\332;\213;\217;\200\245\312;E\366\375;/\235\343;\217\366\211=\314\003T8\256/\013<^\003\345>\265\tH>w\221\256>\323\360q>;\\\'>\277*!>\353\327\353=\031\350\005>Y\366\003>@~\276=\222\031\354=\262\324\236=|S\327=xj\025;\\o9:\335v\032;P\216\332:h\230\201:fP\362:\372\334\321:TCt;25\251:t\263\3119\316\211C:\233\240B:\246\"y:\000\000HC\232\315\315=\363\211\322=\300\243M@\242\352I>\213\257>>\246gl?iXq9\261\221$>\3215\211\301m\253x?\357\014\312=\3605\224>\\y\257\274p\233J>c\t\272=\257Yx>\201\206o>\375\333\214;\333\277\357=2A.\27429\222=\311wQ:Q\006\006:wf\365:!3\341:7\037\200;\233\310\002;N\002c:\356\315u:8\235Q:\307N/:\346/\3209\363\226\010:\362\t\323:Q\325\234<\344\363\t=*f\202>R\350\243<\237\360\360;4\203\217>D9W9D\347\230=5>\276?\270\\T>&el>96\216>UAH>\335\374\313=\327\3674>\226\t\222>f\204\261>\341\357y>jIR>cK\031>M+h>\3765\3739\237\002\2539g\363\244:\325e\213:\374\242p<\307\236\265:z[\024:\341\207J:\002\254\354:$\370\003:h\331\2569g\322\001:\"\272\201;\000\000\026C\33044=N\220\313<9\326@@\332(\033>\361r,>#\216\232>\371\006t:\tB\243<\213j\250\301\245\267\n@I\377\274>\205\277\306>\312\320\020?@\347\214>\242\344.>3Sg>\261\356/>\313\030\267\275\335\036\353\275x\232b\275\336a\001\274|\347\243:H~\213:6\326\020;\322\316o:S~\307:\205\270\3059(\"*:\240\307\326:kf\243:}\253\026;g\342\276:\360\226\327:I\315q:o8\245<p((<c4a>B\223T=\345\346#=P\315)>j\316\246:\026\007\200<\221&\346?\236\302\027>A\221\305>Jv\303>\210.\332>%\330\205>\367\030\006>\007\240O>\035\256\310=\0045\265=\370\026\377=\247\332Y>W%\033>U\037\225:\202H\013:\024\324\322:K5+:\260e\227:\274\005\3219{\261\3309\312\332\226:w\373`:8w\002;j8\243:Y\255\275:]\241\3549\000\000\360B\t\205\375=\352\242\215<%\271O@\034OG>\351\230)>k%\273?\354\256\3178w3^>\321\224\233\301\230!*?\212\005\252?0\376\352>1\204\201>\363\004\341=m\264\270<\373/N>\344\265\274=\224\320c>\355\273&<\316\323\357\275O\357\031=\215\242\016:\327\010\3469whG;\362](;\272Er;l\032\016;\r\246z:\337\243\264:,\376\362:\231K\201;\325\362\267:<\\\027:\010\342\000;^\270\204<\312\037D;\327?\244=\215\2072<\263\"\n<B\325(>\340V\3417\260\345\331<|\036\305>!#\025>\356\027]>*\252\237=\253\275\230=q\274\211=\337\331\312=\375e\236=\364\247\221=\3516\266=I\316\260=\2715\245=x\314c=O\305\2049U\37159\263A\023;I\314\000;\371\016\214;>n$;2\r\026:\217K\200:U\236\300:\271yh;\'\026\211:\224P\2049\013\022\230:\000\000pC{r\233=\'\035\006>\031\257S@\2708\r>\221w\021>\037\332L?\025a`9\326\320\374=^\025\200\301\266\334X?\363]\214>l>F>\367\217\332=,\030\272>\010\262<\2747\326\026>a\232\005<kI\343=\374x\335;\235\373\335\274\031s\240=\355\320+:\306Z>:\245\247\036;\212\254\317:\330\227<;\210\370+:=>S:\362\351\027;\345\266*:\316Z\254:vm\201:\246i\204:@\307\306:\tD\026<\257^\033<\000\370\033<m\223@<\213\336&<\375y\274=\270\244\2278\356@0<\007\352}>EDl>{\323O>\353yI>\360\251\025>w\240D>i\023M>\023\241\016>\230\037\360=\333\217\357=W^X>i\221\321=\256\332\346=\020\363\006:\317\004\006:\276K*;\311\017\220:\344\242];\330\333\3179\373\306\3579&\375\251;\234R\3319xx}:\327z\244:\220\226M:K\216\276:\000\000\226C\331\"\324<d\253\227<\004\3314@\356X\316=\217\270%>\307\3375=\262\276\365:&\352\333<\312\240\255\301]2e@\371\331\315\276\222\327\373\275\325\304\230\275\336\027\213>\3241\275>E,\327=\366#\242\275 \003\335==b\335\275\n5\233<\215o\364=-fG:\302Q\3039\263:\246:\265\275X;\320\240\3679\346#6:\353\232\32795\\\2219\200\204\334:\035j\024:54g:\025\247\037:\237\236\273:\314\332\251;\212<\343;k\330}>\235oW<\321`[<\217}\207<\031\356-:#\313\266;w\3172?\264\354\220>\215a\303>\037\341;>O\337\223>?\373\204>M\353\224>,\276\244>\022k\236>\205\371\236>\332y\243>b\332<>:\204/>\244\334R:G\032\3179\205k\245:\246\250\300;\332\201M:\346\205\201:\350\363\3239\326\264\2479\244M_;\030G\010:n\235\203:u\177P:\024c\325:\267m+CW\000\032=\000\347\212=27I@\\\377\016>\220\003)>!\363\215>\220Xg9\203\036~<\016\375\227\301=\341\000@\235\203V?\311\267\332>\341\3617>o\334\027>\322\0365>\233\032\215=n\345\320\275=\344\300=\310a\335=\016x\241\275\\m\355\275\367o\022:\272!l93~\253;{\347\016:\243\377F:8z%:\302n\261:KCK;u5\237:\021/\r;\241\205/:c\354\236:\247I\317:/\021=<\356y`;\322\264\204=~\375><\022\316\372;*\206\245=\323vx8/`\376;\017\245o>\2767\275=\321\031\'>\256\377\332=\311\350\223=\3673\222=\22634=\203\031\206=*\313\216=\362e\265=v\242\251=<a\223=\311E\264=\351\254~9]h\3478p\363C;\361\234\3129\013\346\3049UD\021:\224\335\':\270.\215:\235\033F:\200i\270:J\tw9\214\364\240:4\371=:UU\005CX\246\224=\006\206\276=b\rP@\324\341\017>\311\346\030>\214U=?~wW9\325\246\376=\016\326\202\301\006\010\245?Hw\255=\251;\2069\377$\235;\272V\025>\0218\220=\314\237\227\275\373\274\001\276\200N\237\275\001\361\013<i\340\251=G\003\2579BO\263:\221X\255:r\343\005;\275\315:;\243\t\006;a-\001;\355\264\231:\021Y\263:\304\327\204:\374{~:\231\371\312:\367b\256;\227\310\006;\310\367\'<\\!j<\374\372\224=\215\333j<1\331A<\334\020\367=\360\\\2028\240\"\224<T#\266>\243\001s>\223\346I>\213;\t>\344^.>\230y\020>\247\300\005>\237\225E>\333\3514>\316\2424>\301\2018>b 6>G\2650>L\224}:\222\221\332:i\351\r;O\320\017;\024\020\313:\270\226\267:\201\325R:\200\\\206:\255\031z:\004\022\211:\302%\343:u~\n<\362\322\006;\000\000\026CNO^=Kn%=\255?9@xE\034>\217H3>\337\021\240>\262\245Z:\244\021\203=\244%\231\301\327\352\330?\207g\004\276\237\246\017?\300\017\367\274\006\262f>Z\212r>\212\374\322<\036\016X\276&\376\n\277\260\215\306\276\014[\006\274\350N\271\275\342\235\332:/\323\313:\255}\025;\024X\223;\"\337\371:\256\031T;\240[\236:\277\003\n;8O!;O\007\003;3&\320:\350\336\266:\274bD;v\026\253<\347\232\246<\267\357\364>\020\216\313<+\357\201<K5=>\004r\020:q\344\002=M\200\255?\370\036\034?\014\347#?\301\002\375>j\273\236>\035\304\261>\354\r\213>\347\276\267>V\227\273>KO\271>\247)\231>\261!\276>\266\227\253>`\372f;qS\023;\t\270\214;\252H\304;\361\316&;3,\213;\247/\374:\177\206\221;\020sQ;\237\267\';*\347\000;Q\206!;\371\225\334:\267m+C\031+\312=K\371\\=\306\375S@8\237\030>I\"\017>\005#\217?\rz+9\226\363,>2\275\210\301\222\370\026?\311\332;>R\355\242=\356T\272=X\032\271> s\276<Y\207\021\273\365>F>S1\356\274\216\252\027=1\242B;\240T#<\300\324\225:\001\313^:D\263\275:\273e\275:\311Np:\310\225\216:\250G=:Ja\304:W\304\200:\206D\037:>Nd:\326\271\212: -Y:2=<<Y\264\206;\367F\305;\351\235<<\276\2759<\010\310\t>\346\353>8\345\341\236<\301\031V>\251R0>\027t\373=%\353\373=,H&>8\\(>e\004\004>r\202\030>\217g4>\235\030?>\007\267,>\321*\353=\336?\325=\343-y:JL\003:\332\035\307:\344`\231:8\322#:\301\356~:E\215N:,\366\026;\331\320 :n\267\006:\275\tS:\334\271\034:Y\001\":\000\000\026C`l\205=\221\014\213=-\303O@c\335\021>\274\006\037>\3404\022?i\345\2639\203\224\301=\032:\216\301\345c\316?b~\362>Ie\361>\203\270R>.\017\376<\017\021\273=\304nT>\002\331\370<\304\321\221\274\255\202\211\275$8\024\276\206)(\275^W_:\"\373\032:\366}\213;\363P\205;\2155\275:i\362\013;\373\334\343:>z\006;\367x\304:t\355\261:\305X\004;\367\'\263:\244N\r;C\362\222<\nBL<<\210\031=\000\211\261<\352~D<&\3049>\244q\0169\375h\031=\276)\024?C\367\315>\263*\013>p~\202>\017L7>\300\241V>3aW>\005\252`>C\273F>j\372@>;\330O>\276\257\027>^\027\"><\214-:\305T\3759BC\270;\370\346\260;)\342\314:\3507U;>\244\375:\2636!;\277\303\216:\353\274\301:\301\273\322:$\t\262:\314\316\326:UU\005C\333\234\227= \316\222=`\251P@F\265!>h\330&>M{*?\225\271\2319\203\230\331=\2079\213\301Q\"\264?\202EJ>n) >&\213\020\2752\201\342>I\211\205\275\006d\251\275\322\037%\276\246\342F\276\215M\303\275#>\275=\302\272\372<\206\010\247:q53;Di|:\325\322\004;-\007\347:\344$\200:\'\332\277:\254\233\215:\244[\271:\337\241V:Qk\223:\211o\374:\255\262\313:\022<H<W\216\361<o&o=\362\360\265<\235@}<\335\204c>\\\377\0339\261\240)=\257\006\244?m\262\320>\217K\271>)\215!>\334\0179>\215\241\031>\212\247b>O\347h>\273O=>\277\362a>g+q>v\261:>\2178L>\252\210\346:\275N\260;I\202\026:\031\030\034;\330\373\360:I]{:\002D\303:\252\241\002;:\270\353:\024\303A:W\013u:F7\332:K\271\273:\000\000pC\242\326\214=\377\014\252=\n\002P@\333\260\027>\267j,>\274L\004?\222\210\2439\371\313\265=\006\331\205\301\370M\262?\371\232\222\276\304e\010?\252\310w=3\370\2659\361`\224\276\215H\333\275w\372)>\031\256\354<\221&\026>\260\0040<\275-\373\273V\254\007;;!C:C+\273:\374\372\010:\251\376\373:\370\007\322:\214\363\225:\337\331\016;\324\037\263::|5;\314(j:\346R\342:\260\362\310:K\351=<\241b\350;;|\006=\3509\227<g\202 <T\264,>A(\3248\224\211\217<g=p>\327\027Y>\362\213\250>\217\356\240>\201\3230>#\2554>\034FS>\031\002\217>\311\361k>\361K\222>\243\230\230>\361P\214>\007\010@>z\031\r;?\226\022:1\026y:\361\000\3519^\233\360:\332\024\273:\340\276d:q\276\001;\026`\360:\330\323X;N\246x:7\277J:`\271?:\000\000\360B-\005\245=\237\'\023=\352:Q@\374\021\364=\031K\334=\\\263\200?\277|I9\301H\027>B\332\215\301\035\t\235?S\213\004?\302\246\014\277\303\306\013?\340i\203>\003\010\032\276\377\350\253>\251\277K\275\371\342P\275K\273\013>\323\352\234= o\247\275a\030P;\034L\302:\366\251S;\274\013\225;\200\244\005;s9&;E\017\301:\333\031\013;\3300\241:Y9\251:\217U\310:\241\256Q:E&\371:,P-<y\225\001<\204\266\t=\370]\260;v<\316;\376|\360=\267\034X8U\n!<\025F\t?]Ld>\241\017\241>\274g\214>\024\2014>RtF>\'p\017>\244\350\r>\262\314\">j\306\362=\001H\024>\0177\266=SB\222=U\210s;\'\361\304:\367\353\020;\351\375\210;$<\304:*\325\316:J\262\231:\020$\332:;E]:\262nO:\300\236w:\275t\3149\2027\223:\000\000\026C3=\203=>\377\222=d\321M@\202\263%>\035<2>(\277\004?\013~ 9\350:\245=\372\211\217\301\007\225\322?LX)>A\266\"?\032\037=>p-\177><\234j>yk >\216\030\353=L,\241=\033\251\013=\2753\337=\227x\n=X\316\212:\317\231\2429 \034.<\217R\016<\315\335\031:G\371\335:\003\330\036;o\212 :\362RM:\242\321k:\342\346\r:O\340\374:>bm;^\214\357<}\315}<(\326V=\232){=\024\247-=\006W\235>\271(\0269\227@K=\307?\001?\237\331\001?\t\360\201>\025\271!>\006\207\225>\326s\360=\016:\357=k\017o=\336u\014>\332\010\237=;\261\352=\002\026\003>Q\303\377=\2317\006:D\240f9\352%H;)\361;;\337(\2239\322\000\377:\251\256\234;\216\305\30093x\004:\270~\34698\253\34790\315\310:R\227\221:\000\000\026Cz\261\317=j\353\340<\371\310R@@B\n>(|\371=j\331\220?\nV\3658/I,>\n\252\220\301`\'\001?\022\036\355>$\020\235>\035\006\245>s\337\244>\021\307\302=\301;S>s\006\260<\335D\r\274\351\270\324\274\036\021\307\275\256_{\275\033\320n:\245WQ:\215\322\363:\t\354\r;\000z~:\023\302t:*\226\200:&\020\300;\203\223\354;\211.M;xW\327:\355\203,:J\2149;\030)\241;D\'m;\314\210m<\330Rv;8\237\263;\255r\203=\342g\3177\344\325\302;H5\217>\2442\225>\334\032\264=\210\235\036>>\022\020><\323\222=?\371\\=`\326k=\263\021\260=!h\322=\"\253\202=\372U\211=U\025g=wh-:\223\201\3679x\243\221:\273;\202;\177!4:\024\254\032:P\356+:\351\344\210;V\324\270;zgV;\333\223\267:\211M\3119\330\216\306:\000\000pC\335\240S=\330#\223=\321\221K@\334\351\005>\362V >W\335\243>\307\n\3739t\267o=\276\236\215\301\241\352\301?\201v\241\276\241\266\265>P\0346>C#&\275:\'p\276\220\016{\276\27505=\215?2>\266P\335>]!\222>\235\270\024=e\035\t:\255\037\3469*\027\221:\327\014z:Uy\033;\334\242u:\035\371o;nQf;\367\370\":\215b\311:\351\247\":_K~:\231%\017;\007\214\201<\341B\205<\241\267\245=[}\265<\307\314v<y\212\000>\022a\0269V\365\206<\020\t\316>\377\013\240>Q\005]>\341\375C>\200\224\367=~(\037>\335\256|>&\336s>\315t\260>72\235>\354\353\207>\260\215\210>\221,\\>xI\3119P\362\2369\205L\002;F\240\241:\340\321V;\367\215\231:\002\233\261;\265\372\204;J6=:\031\376\030;\326\306B:x/\330:EE\270:\000\000\026C\347$(=W\356\311<\0040;@{\225\362=S\351\027>t`e>vC\200:8\371\342<\220[\245\301G\350\366?\310\340\247>\337\262\367>A\022&>C\327\316>\315in>h\016\210>\335\002\205>\324\237o>\225\013\230>\275\003m>\0042\301=[\253h:\247\003\2349\275^\356:\355\022\262;Y\201\223;\226\321\022:\364\202\301:\224\310\262:\214\303(:f\356^:\262\340\2509\342\211\3339\305\225\003;\227f\277<\267{\221<\357V\214>\331\316\344<!\024\211<=f\034>\354\361U:\360\253\272<\020\302\021?O\231\243>\203b\363>\206\214=>P\032f>1o:>S\325J>\371\323S> \327A>\376\0309>\324\204N>\357\206+><\340\023>h\247\005:\242\215\2159\302\255\332:E*\263;\277\311};\016\243\030:vB\221:v\331\241:\343\002\t:X\305^:<\377\2219\335\363\33495\321\304:\000\000pC\314\223\237=\257\266\212==\005Q@\346\005\027>A\203!>\"\277??\344\247Q9?d\367=\017\233\210\301y\001\220?{\363\341>\035\021\211>\361\331\037=\266ks>\360|\373=F\226\232<j(\035\276\010\016\363\274} @\275\371\000\027>\271\310\244=f]\365:\206\265/;\230\216J;J\201\272:\222\"\244:\270{\365:\350V\';\017\000!;)\237*:b\276}:\344\200b:\2111W:=_\323:)\007@<+\233\317;\244\266\357<\372\241\265<\350\017\264<.\241\000>\030`\2068\024\320~<\345\342\247>so6>EP\230>\212\241->\276\273.>mn%>\243\241q>\022&j>Q\3309>\220\336+>6qQ>\016E0>\344s#>C}\250:xM*;\313\235B;\256\353\256:V\311M:\220\201\023;{\343a;\256\323\010;7\312\026:jW/:\030K*:*S4:Z+\213:\267m+C\231\"2<\267\325w=:cM@]<==H\303\353=.\256.;\330Y\006<x\335[<X\307\266\301\037}p@\224.+?s\266\211?]yJ;\302\006\256\275Ih\342\276\355U\264\276xF\030\276\276\030j>{F\034>\235\350\031\276\333\034\322\276\007\364\361:\237%\2458\311\241>9_\303\362:\373\374Q;(\003\260:\335p\2139\023D\24396\206&9\031;>:\212c\305:\'\305\2759\343:\332:\021k\035;\320\222\034=$0\320=\2764{<\322\217\025=F\220\237:n\377\232;.\271/;\231\312x?\277\310\204>\240\350,>-\n\207>\276,}>\332uJ>\316\235+>2\014$>\355\262 >CH\204>&\323\254>l\334$>\251\026\177>\245\244\023;Gk\2558\247\362\2009\320\\l;-e\206;V(\004;\2155N9~\020\2549>\224\3768\206\257):\010\223\233:]K\3419\021\217\221:\000\000pC\314\240J=\272\020\250=\373\213K@\326\236\027>\276\340,>0\343\346>\225\303\2519\323>\211=\362\317\213\301AO\264?\020\337^\275x^\215\273\222_*\275WAN>\3120\257>\350\376\373>t\347f>\372e >>.\266\275\271\340B\276f|\206\276#\301\365:\367\204\242:\017\365\206:T>\202:\374\242|:\032U\177:\202\\\250:$*^:\236N\250:\346\333\201:h\262\200:\370xN;\303\322\261:\025^?<\035\242\302<R\207\210=w\244\217<\317J <h\232\037>\020x\0139\2728\014=\006T\377>]\221\306>]\206\270>\223,d>\356\313[>u\021Y>ZFA>\257\374&>y\231O>\201\236\021>\321_G>\272\014\033>\036\362J>\372H\326:\210 \324:+HD:\341\217(:\226\007\202:D&3:\"\230\375:\360\253\3669\256\320\311:\365Ss:\342\006\022:,Eo;k\361h:\267m+C\310I\253=g])=y\376E@z\037H>\002\2503>X\355V?\365G\3409vS\034>!\312\237\301\320J\245;\254\026u>\305\213\314>!)=?P\0260?\270\252R<s~\006>\035\234\314>%Y\326>\260\2577>U\260\255=\321\242\320=\357H\":1\037o9\"\207N:)\025\017:z\010\2119\242\211\2259n\223\2559\257\220\3169Z\373\2679\275\355\3029\231\315\2169&\032\2659\'\312\2669\322P9=\341\322R<Mn\320=\223K\200=\300;\017=\233\224\347>\303\361\3159:\324\357=\233\357$?\021mB?\275`\237>\202{\350>\253#\003?\374\234\244>\322\322\252>\332\200v>\312\023~>\214R\342>H\331\325>Nj\214>\004\321a>e\347\2649\001\375F9!\310G:\007\201\210:F&h9;F\2669H\306\2329\207\303\3429nxp9/+\22297t\2569l\010\23196.\2219\000\000pC\322\243\266=m\321\307<\0019M@\335\3001>\253\334.>\374\016S?\373\366\2059\360\014&>\361?\225\301\237\342\225?\017\313%>Ep\254>\326X \274i\2121>A\273\224\274\341\364\321=\223\316\323\275\346oD\276\032\264F>\304;M\274\374\214\331<\035\004\343:\000\210\217:\341S\025;=\016\260;}\237\334:\257W\352:\306t\':\260\\X:\305\333\021;\277\207\246:+\356\335:\204\026$:\005K\002;E\200\272<\310L\315;\317W}=\254Z\372<\374\236\205<\177y\221>` \2678\2038\314=\370\250\010?\254_\t?\177\336\365>\203\234\274>8\336\220>\316\242z>{\006\210>\023\356\221>\244\343\252>;\255p>\243\005\214>\325O\232>\232\204\204>l\262=;\022\256\214:\246g\366:\320\336\336;}\355\352:dI\326:z$\3469,\264\003:\360\224\026;\243\277|:\246?\227:/\021\':\326j\340:\000\000HCEne=x^{=\334\244F@8\016\027>\313m,>\023\035\313>Q\375\2309\344tw=A\235\221\301\276\005\315?_S\010>\344\334\243>D\222_>\261k\272>]\206g>Km\036>\354\005\343\275\221\315\263\275\324\227V<\214\370Z=\274\247\216\2743\322\223:\032\255\014:\340\032\023;\250:\027;0.\237:W\243\341:\250\237\237:\236\353~:\277e6:\234&5:\004j\224:u+u:\311\000\221:\006\207\233<\005Y\016<\214\252\326=\002\314\330<\306]\315<\277\323k>1E\3368\341Z}=v\2470?\261\206\252>S<\362>=\265i>\017W >+F+>\332Y\201>\331\202\016>\027\216\034>\003\021\006>\262\021)>s\322+>u\302\023>V\203b:\230.\022:=i\275:0\017\010;\212T|:\216m\262:\302*\356:\242g\306:\210\357\":\356\324\020:\240,I:\321\'\334:\372D#:UU\005C\346)\311=\331\370Y=\370MR@\r\3163>\260H\037>7\023\224?G^\0259\342\323,>\242A\220\301\357\371q?\246\200\221?[\344g>B\356\355>\210\251\323>\310\2511>\017\202\227=\324q\206=\n\034\200=\\\361Q\276K\311\377\275\366\230\001;\006\016\254:\003[\213:\376\261@;o\305\230:\346\030\266:E$\216:\251\320u;\223L\335;\252\020\032:\006\n\205:[\266e:z\326$;\216D-;>YM<\227\177\260;\036\301J<\356\336L<v\263\013<\245T >\311\325\0258\251\007\346<\347^\242>\271\t\r>6\355\226>\'\354\026>S\320\024>\367\200\252=\317{\n>v\007\364=\240\025\260=\002\020\300=\357\207\023>W?\354=Zv\332=\363\200M:g.\200:l4D;#ZK:\321\037\240:\315\034S:~V\\;O\323\005<\032\265\n:\250nB:(_2:\367\353\376:<\223\360:\267m+CgDx<\220\016x=i(P@\375\017\317=\310\020\">\246\252B=!O\261:\264 \205<\224\211\240\301\223\304A@c\3322?\215@\377>\3731\275\275\204\351n>\245\202\002>\374\270\017>Rm$>7\360I=\224p\201\275\207\227M\276\245O\210\275\307Y\031;\207\242R9\010\236\321:\230Fk:\014@\3569&\301z:\036\251i:\211\224\002;\235+\2739}o\3559S\230\256:\332\266X:t\331\251:\277\3726;\206\233a<{\206)=\361\024\350;Q6\327;\2547c<\010\314\013:\370Ww;\243*K>\201\305\365=H\007\007>\257\026\004>\372Q\370=\265\264\333=\317\036\312=;\006\352=\033p\005>\352\366\232=\\\366\347=^~\364=\207\337\276=\374X\";eG-9\365\224I;\224~~:\032f\3539\206C\322:\356@s:ws\222:\371\013\2469\340\034\2429\357n\002;uBf:M+b:\214.\332Bf\316\030=\223\376\213<\254\363=@\013\272\313=\201/\014>\271eq>\263c]:a\316H=9q\243\301w\022\000@7\202\343>r\236\334>Z\230H\271I\200{>\357b\204=P\031&>\014o\364=\024\034W>;\362\210\275B\2370\274^\355/\2765|\237:\321 \24594\023\325:4j\253:\021\255\277:\201q\022;o\330X;d\235\332:\355sk:e\020\247:\217r\003;E\250\264:`\305\327:\373\3747<L\363\006<\225\373]>\027=e<\006a\245<\340R*>3\305\2379\335\371\360<\003q\220?*!\323>az\273>\260\303\200>:r\203>\335\357\212>T\324Y>Y\270\276>;&\265>\3462\233>n\205\205>{\031t>\233V`>\236\n\226:Q\331\2029,\356\347:\316\363\220:\245\375\312:\356k\273;q\222\232;R\021\267:\324x\216:I\356\247:\357\n.;j\322\332:\344\017\350:\000\000\226C}\354\224=\374\026\203=\201oR@\316\266\022>\'}\024>\267\031L?\231\317F9\3466\t>i\241\210\3010\377\207?\203`\241>\0017+>\340\264.=\222\215v>\326\355\033>\364w6>\001Q@>\276\000t>\300\371\013\275>\314\004\276\226\235\252\275zB\347:d\361*:\213\253\307:F\334\272:|\315\367:\017,&;\370\016i:\016\235\014:spT:\227\014m:\231\321\";W\357R;\251\314\277:\356\331\276;$\273\273;\023\313y<\376\260\020<\313\311)<\027i\247=\215J\2568\034Na<\320:\273>\233 \'>|\302\227>\022\254O>,\001b>2\340!>\032=\016>\177\365\330=j,\360=\266\354\352=\251\241\301=\023U\332=*O\345=\001_\253:AA\2179\324\032\211:HR\256:\321\0203;u\013A;\007\024\027:\037\232z9\244\347\3129r\247!:A\341\362:\203\360\025;\024\223a:\000\000HCV\017}=\2770\330<\334(>@\257\343A>\3332\\>K\330\235>]\342\3619%\361\002=\031\312\235\301\202\272\033@\344~\346>\300M\002?T\001\260\276KrD>SF`;o\251M\275\342\273\005\277\177\t\202\275\002\255o\273\315\310w\276\321\023\226\275\214\250\';\215e\251:\331\342,;{\205\273:+\370\257:Cke:>hX;\302\032\000;s\254\032:T\037\033<\025[4;\"X\207;\274\204j;\277\257S<\223\364\032<\247o1>\221j\202<\265\276\331;\334K\272=\231\302Q9\261\271H<\304\304\017?=3h>A\'1>\230\003=>\204R\016>\177\026\025>\351\237\350=M\263\375=#\317\022>i\363\315=\210p\002>\005\317\347=\032(\035>\371\334G;\235\"\304:g\207\374:h\234\220:\230\272\200:D\214W:a\027L;\245`\361:r\235\030:n\2603<\000\236(;\002Q\237;&$&;\000\000\026Cb\300\204=a\014\007<0<%@\002\336+>\246\032=>b\344\264>\327a\302:\004\376|=\306 \304\301\"\312\330?\202X\226\276\364\024\030\277f\216\216\2760>\025\277f\006\306\276\363T\016\277\217k\317\276M\263\242\276\0207\\\2763@D\275\266:_\2767#\312:\205\252E;0\245\347:\376\366\356:v\\|;\001\207v:~?\223;\256\305}:\342\\s;Rw\214:+X\225:e\360\343;\220\234\235;\177\030,=(D9<\331\352S?\216U5=\3149\322<\205?\322>(\246\207:\000\315\223=F\332m@\363X\207?#\366\260?\324n\031?|L\313>{\362\302>\027U\347>q\215&?+\254\353>1\272\361>\207\022/?l\020\014?wQ\321>\357 ^;\311\275\304;\003P\256;\364\264O;uP\013<>B\351:o\016\273;\240\317\232:\013N\351;\343\374\344:\036\277\036;|W\235<(r\255;\000\000\226C\273_\300=\225\261\356=\227\343Q@Y\2232>|C,>6\330y?\370\034:9\357\313\034>xP\205\301I?\200?}\2308?)\306\243>g-u>\257\005\207>[\334\325=\311\310q>k\275c>\342\273 >`O\027\274\370\310\220=D\340\205=i3#:G_::\364\241!;\325C&;\233_\221;$z\364:\365\206(;o\365H:[\204\234:\257\337\r:\300eI:\207\023p:\263\373\017;\266wG<\341d\035<7bY<\007\363e<i\226\022<iR\010>\222$\2168E\337\356<O`\276>\24125>\306\360\274>\256\366U>3\3765>S\371\032>b\367(>\344n/>\211\034*>\003d\032>\036\256\036>h\367\375=c{ >G\203\265993\032:~\336\t;zPd;;o\t<\341%\262:\322\224M;\304\033\3259%+\271:\3254\3019\274\013\3479\351P3:\216\361\t;\000\000HC\211\262\363<\355e\317<\254?J@\\G\201=(\372\273=\302\300\206>\240\331\251:\341/R=\271\234\242\301\315a\024@\302\227[?\215\327\243\275\271\313\034\276\213U\024?\225\307\342=`\357\331\275s\330\261\276\316\255\247>\276\325\006\277\350\'\334\275\014\257\301\276\204J\237<\324\021\27097_\321;\370\245\375;\362\014\013<^d\004=<\2210:A\030\342;\233K\262:\214\007#<\013\337\016<\327\266\026;\324\026\210<c\266W<OW\340;\337\211\314=\023\270u<\377\342\261<j\034W>\320\327T:\374~\027=+\351\222?\265\332B?\313\311\025?\"\322P>l\371\264>\374\313\201>\030\005\205>\210J\201>h\032e>\374\234H>w\266\305>\251\212\210>:td>\030\243\245<\257g\002:\311<\364;\002^\317<g\324\223<\366\206Z=\202\242%:\036\232p<\242\022\006;-\261\225<\025\2404<HN\030;\373yb<\000\000\026C\202\3618=\302\377\204=\330(R@\243\321\365=\300L\023>\237z\266>s[\30194\375o=\236h\214\301\304\366\332?\031>\266=\236V\341>\022\313q>\267\217S>\004D\224=\310]k\275\2501\234=\371\345\276>\251\332\335\275<\351\032>v\020\254<\376\234\245:\251\374\007:\272Tw<\020\255\022;\254\211\020;\035V\002;\017{\246:\0163\330;v\364U:>}E:\224\tE:CT\232:Y3\233;\234\325\276;K\2274<\260L\303<\342T\345;y\264\t<Pr\212=`\252\3318F\024\215<$\356\352>w\n\223>,\360\220>*\003:>\031\373\014>}i%>\211%S>\033?\371=\316\241\202> r%>\n4W>\232%5>\005\231\005>\"\330?:Gm\3569L\356\230<\350n\031;l\361d;\005\372\370:\333\356q:Ng\240;\325A\":\344\364\3629\010\304;:\273\3056:\230\334\236;\000\000\026CZ\330\236=I\223\331=F\271Q@,\366 >\026\310)>..F?\356do9\241\220\365=O2\205\301r\212\231?\366V\021?,\026\221>Amb=\353\034\233>\004.\r\275\350S\254<w\252\310\275\017\371:>\366\320B=R1\327<H\004\016=:9\224:9\237\r:\257\2573;,QU;_;\216:|\r\004;\021\010e:\331\365Z;\202s\014:Kf\201:\304,\374:6\374r:\024\245\313:\032\301\033<\222\353P<\312\376\233<\231|\223<\36358<\035\223\000>\337\346\21081j\213<\217\333\231>;y/>\304\307>>\370\251\021>y\317\026>?\024O>Nu#>\350\312+>x\365b>\330\n%>\335?I>\004\237,>\202Z->\306\010\\:U\021\001:\3050\000;\234\316j;\336\345<:\223\330\352:I\323\3739}\254\016;\'z\013:x\364r:8R\360:X;9:\300\\f:\267m+C\256kH=m\177L=T\010A@\001\362\243=AC\260=\213\031\010?\351\3170:\'Q\307=WI\220\301:\331@?!q\362\276\266\234(\277lY\352\276\264\224\211=\304\005\315\276\027\374a\276@\201\001\277\302\314\025>\313Ur\274\264\340\235>\027\221\234\275f\302\347:\260\335\321:\364\375\035<\240\332\234:H\207C;wtJ;\210\320\016;kQ\n<\247/1:(\214\204;\031\301\017;@?\006;G\035\267;\307\2619<6\262\271<\254\251O>\235\275\026<\365GM<\342\356F>\2260?9\005\232\251<L\340\202?y\262\000?uk\342>\305\346{>\341\374\262>\244\253\213>\301{\237>\032\210n>\260\250\221>\360e\215>\236\266\263>\004D\277>]\364\204>\200\026;;D\335\252;\201\362\253<{\213\270:\237\361;;\r\332J;\360w\367:\226\236\035<\274z<:\366\267\356;\007\376n;\203\313/;\326M\255;\267m+C\356\306\240=\216t\372=\210ZE@\320\365;>{\217@>\025\377\027?\245O69\003\265\305=\337C\210\301\255\006\304?0\371-<\024\235\367>\2375l>\037w\">\216QT<\370\203]=~u\030>k:\201\274 \200\025\276-C\345\275\255\376\355\274\336\344\017;\364.\363:NJ(;\027\230\230:\341\204\243:\0058}:\224\r\3569\264\327\002:\'\353\246:?\371\257:\362\271\224:l*\332:\235\240\255:\345X\265<b\211\320<\n^)>\200\204\353<\360\255Z<\322\270|>\216E\2268\022\275\204=\237\262\260>\340\213\026>\277#X>\265\365\035>\345\002\360=?\265)>\007U\345=\25678>#/\034>[\271\">v\006g>\264A>>\256\362!>7}\013;\220s\355:\271O\035;\236\236\235:u1\310:\t\230B:\261E\2049b\n\2069\004\223\250:\330a\325:hj@:\275\277\244:\247\2233:UU\005C\362\341_=\200q\254=0IQ@N-\n>\315\013\037>\345\031\361>_t\3449\334\352\247=0\212\212\301\000\022\355?Q\257 >\264\216\352=8\275\010>\333I\230>Z$\'\275\034\375\000>\333L\213\274\354\023\243\274\006\274\010\275\005\ne=\212\322\277;O\336]:\243\233L;\005/\243:;J\023;\300\213X:\313\337\266:\275si:q(\210:h\017\006;\252\300\262:{\213\230:~\370\013:\222?\334:\3277\207<\2326\306<O)\034=e<\305<\265\274f<\201Fh>\317\00749Q\335(=Q#c?\355\224\344>\317\310\257>\353\016q>C\2041>D\342(>[;$>\254R\032>Nw^>4l\315=q\231 >K\033B>\256\337+>\316\0210:%\225\025<*\262\244:\302ct;\014\364):\317\312\307:\251\0108:\226h(:\'d\314:UV\276:}\333\225:\034o\3139\216I ;\267m+CD\3623=\247&U<\025\0162@R\202\t>A\337\035>\366[\312>\264$c:/.\212=*\027\254\301\023\210\334?\002\354p> \335\346>\215S\364>\\\245\225>\005\003F>(\243\021\276ue\217\275\376\350\304\276\2021\223\276\311\261@\276\340\262}\276\360\360E;Q\276\032:\376\265\204;\027\202Y:?V\020:\364\344\017:x\226\201;\233\305;;\266Nh;O\313)<Z\226(;\262\247\225;-\343\224;j.\237<A\005Q<E\006\254>\257\373\365<\000\355\301<\217O\260>\313L\r:\231\337q=\020\037\014@\257\265\'?\267\273<?\361\341\302>\237\277\256>\327qx>.\212}>\325\306}>\365\344{>\264\006\221>\"\364\353>\312\365\263>^\333g>\271Ix;\013\022=:AL\221;\242\265E:\303\335\017:\332\325\031:\025p\212;\206\251E;-\257X;\032\2269<\370Z:;\377\342\'<\311\331T;\000\000\026Ci\205z=\270P\234=\n\350Q@E\216\366=\006\225\000>\013\037,?\030\313\n:\273\031\357=\024\016\216\301B\242\216?\354\227#?\352T(?\351\371\230>\216\024M>y&J> \016%>}\311b=\220\302\373=\337B\007\275\223\256\201\275\373\027\366\274Xm\031:\235\372\3539\333\325];\224t\352:\324\266\322;\025\363\255:\206f\t;\332\261h;\341)\226:\222\301\210:H\311\030:bu\212;\014rK;jH\222<\273\013\002=\3370*=\227<\271<\275\273G<\261\265\202>N\327E:\374\225-=\221\t\361?o\006\r?\271Q\220>tcm>\3570\267>\277oR>NQS>u\365\356=\373Y\363=\024-\304=\237\032\303=\304\231\312=\275\246\223=\327\304\2549\021\037\2259\216\rW;\215\232\235:Z\373\355;\252\323\307:;\377\363:\347\000\243;0\340d:\031\\\216:\350\307\2369\341_\314;\302_\373:\267m+C\225\300U=pY\r=e\363F@V\211\017>{x->\215e\247>\324\0067:\257mH=\240\256\234\301\247\204\006@\367\201\370=\n\312\233\2751\364\207\276K\332\371\275n\3645\276\3719~<\332\206D>\3757\036\276\331\250\231\275\266=\241<\005f+=I\224\227:z\014\232:\224a\233:w\000\022;\221\n\345:b\347k;\227\003\262:\315WP:\222\225\347:\305\324\266:n\211\234:\217bm:)X\336:\210\216\214<Wk\314<\256\035\032>AM\217<Zu8<\277+\364=\3046\3669)j\246<\030\233\027@\'\207\350>\242\025t>\364\202\231>\223T5>e\340e>\256\005\255>\323\276\303>)\n\234>-\262r>\335\345\217>\257&\237>\334!X>\360\010\230:Y\311(;cxi:\371\035>;\353\205\254:<\335\200;(CG;\203\275|:\332\226<;\324A\236:\231E\253:\027\335S:\236\321\262:\000\000pC\346\373\216=\345P\245=m\354R@\210\034\001>Wo\013>F6L?\246`\2109\207\331\352=\366\364\205\301\341\371$?j\032\313>\026\311\013?\027\337\277=\232v[>\232\301\262\275\245\335\231>\222\301\257\275\002\230\213>\201\366A\276\373\366\212=\347\021w\275\324\374\303:\354\303F:LKS;\025:1<t,\215:\373,\256;6\303\206:\220j\013;\0306\3569\374L\307:O5m;\376p#:7\004\217;\370\224\355;\266\321N<\275\2755<\345\025\"<\232h&<\356\317\341=\320\215\2308\270~x;B2\306>\200\276V>\343@\275>\030o\022>\033\222D>\230\256\t>\340\256\013>\321\276\313=\023[\347=:I\014>\371\t\317={\356\371=\241\367*>\217~\354:\254\333\026:o\353\255;C\357\201<\262\2252:n\260\377;\202\2350:\\a&;\200r\2569\203S\273:\2748X;\"\276\3529!\304\204;\214.\332B\207\220\221<\177\225\241<$\256<@\347\261\241=\213h\t>\251\006\205=k\3333;\311Rh<\256\203\265\301x\372[@^+\232?\327y\243>\025\330B>v\234\000>D>\320=d\314\007>\277\341P<\223\234\356=\330\364R\275\324g\217<\226\337b\276}\256\3769\345:\305:\247#\232;u<\303;\363m;;\213\037\325:\367\255\320;\223q\247;\243\250\255;E\227\311;\031}Y;k\323\313:\307\022\315;\315\231\016<sK\n<\254\213\231>\376\235\276<\005]\233<\270N\211=\316\253\264:P\006\212;\300\361\261?qB\340>\'\2471?\366%\261>\334\370\326>?{\224>u\001h>A\375Q>pQ:>\301\325b>\276VK>\330\3642>\t\016\207>S\326\3639\033N\";\274X\334;\002\0343<Kc\343;\351\004\t;[\344\031<\346o\362;\356\033\355;\272\233O<\204?\224;\314\215\205;\245\337n;UU\005C~\324\342<\277\200%=\316\266.@\242\324\236=\276\217\375=\3273y=\020y\347;\303\005\t=\240\233\260\301\315\036\312?00\301\277\346t\277\275j_\203\2765\020h>4I\031\276F\362\244\274\257^s\275\035\000\362=*\2177=\007}\203=KD#=\262x\361:ok\2259\341\263\204:y\272v:K\263-:_\341\3109A\323\2279W\230h:\031\353k9\376\270\"9\322&\263:v@\006:y\210\221:\253\364[<\221\207\"=/2\274>\244\241\275<\301\255\277<\214J\270=\2435\024<1,\272<\267$\346?\200\"R?\374dA?BN$?\370\266\372>\355\307\216>sES>\353\2609>\216\316?>I\315\261>;^c>\326H/>\377\337\017>b\351\202:eN\2479f\324\022;az\357:>\266\235:\231\177\031:1r\2349!\005\307:\275\001\23297\357:9i\004{;*\"+:\215]\211:\000\000\026D\350\305\201=h\033C=:hD@\n\370\013>\344- >\216f\017?\222G\2529\034h\267=E7\221\301V\363\263?\021=\301>M\370\262>`\237A>/\334\006?\263\371\006\274h*\002>L\206\260\273\002\263\005>\252\351\236=|\211\274=\020\261\363=\356\007\201:\002\347\3429\003\353\364;\361Q\263;\313\312\326:\362\367\205;0a1:>\2539:Z\253):\010\023\245:qx?:X\310$:<(T;\322\366\205<\006\374\004<\365\376\007>\022_-<\300\254\016</\3714>\270\026\2568uk\324<R\264\343>\021\262\207>\024j\026>1\350\345=h\007\007>.C\377=D\240,>p\271J>`b\233>\315\262%>H\220 >\224\022\021>\231\020\372=\372\022\003:\263\362\2679\345\277\020<\363\352\310;}vF:C\312_;\367^\020:\212\266\3519\026e\3449UU\331:\353-,:\210\020\3649$\364\013;\267m+C\0209\241=\262\205\315=\351\201L@\317\2101>!\"4>\240{;?U\010\2249\333x\371=H\267\207\301\373\211\264?\327\271\206\27550\"\274t>g>l\214\235>{\312\255\275\271\204&>\243\334q=,\212\303=8\251^=\200\037\005>\010\201z\275\003\3401;z\3246:b`B;\346\306G;\033D\213:\006\366,;\335\372\306:\020\350\026;\225M\026:X\300\315:<M\037;S\003\214:\177\337\022;\0148\270<\221V\334<-vO>1\377\266<\'\247\t<\315\214\233>G\t\"9\257$\230=+\346$?\367\316\266>\266\226\006?\230[\274>P\375\211>\237\037\246>\355\217d>L\353\234>\2500f>W\353A>\025\366\213>\345\243x>\251\003E>a9\020;\302\265.:\214\267\267;\376\331j;/-\212:\000\013\027;$\203\007;\350\271\022;O7\3349\353\273\317:}`8;\210U\255:3\352\270:\000\000\026C\205W\231=t+\027=(\373\005@S\364\030>W\3661>\035J\252>\212\357\2309\200\335\357<\362\037\237\301;\035\010@s\203\262>\263a\273>\355\300\241>\231s\364=\372]\020?8\257\243>a\322\021>\271\203\016\276J\230\027\276\362\210\263=u\240\237>X\'N:+\026\204:~v\364:/\375\254;i\035\221;\336F\307:\206\241l:\330\356\3769m+\3249\352\3248:\322x\010:Z\247\3469J!\350:S\ts<Y&U<\241\343\234>\247?\215<\305Ke<\225\304\017>\2709\0359\315\223\370<\351\304\335>G\230\277>\224\227\261>0c\246>\236\027P>,\336a>|\016>>\343i8>\260\206\250>\010\316\t>W\264;>\327xC>NC9>\361\025\010:\267D|:\353\022\215:\016\007\003;\035\024.;\344rd:\234\366\034:\367\363\2179\345\01099\201p\2049\2779`9i\375{9\227\025%:\267m+C\220\340\217=\3621B=6\205P@k\020\001>tW\006>C\301E?aL}9L\365\376=\260\275\214\301\256\346\274?\341\225\t?\003=N>\357\352\023>\210t\255>b\254\247\275\236`\342\275\323\370\037\276\326\300\020=\376^v=g\3448\276\021\261\205\276J\037\222;\205\241u:w\343\r;r\312\330:\2500\363:m|6;%\332\016;,R\253;\331\356\355:\005)e;\'@j;\3065\021;\266\0134;e\302x<\017\271\013<\324D\010>\313\355;<M\302.<&\tn>] \3248\021\246,=\320A\022?Z\373\322>\224\010\r>Q?\232=\211\214\341=\312\206\344=\331\251\245=\321\030\335=\252\344\352=\333r\265=\207e\306=\214\r\227=\3724s=\300!\204;EeB:k\371\210:\334@\255:^E#;\177\3226;\360j\234:?>\275;\277\343\267:\375eG;7\241>;-eL;14\241:\267m+CdQ\266=Q\206\237=\336\237Q@\340|\r>BM\004>\300Ez?\277m%9\371\035!>\037\315\207\301\020pR?<\236F?\017u#?\2516a>\250U\250>\227\342\007\275%f\227;%\356\031>\2177\325=]W\203=\256\373:<L\371\"\276\313\376\244:Z\361\247:zn\177;m\376\215;\002n\024;s\360\372:\362\376+;\315\276\357:\227b<;\326\252/;\2131\364:`\231\021;x\222\r;\212-Z<\252\237G<\036\210P=\320\304\026<M\n\315;\t\251B>weQ8\302A\317<\232\024\373>\265u\233>\224(\250>Te\">\206{\360=\211M\263=(\371\304=6I+>\t\267\020>*\332\027>\r\"\351=\201}\305=\t&\263=\354te:\277\346\221:J\"7;\363\017\237;\344\206\324:\'\361\277:TH\203;`\215\322:\177gd;L1\004;\336\362\313:\'\273\335:jG\265:\000\000HC=\032c=\337d\311<\032\203A@\"\021+>\377\260E>}\337\227>_\263!:\205%-=T\260\244\301\262\270\225?q4\032?3\206\235?IA[>\374\346\026>\363\205\244>\327\271\242=\257\331\'=\336:o>m\226\010\276\003\376b>\222\363\202>.\217\2209m\233\3539\352}O:<\303\265:\361\017\035:\316\037;:1T\021:\376\375\2669\362\357P:;\035\t:\343\201\004:\317\022\3469\247\260\025:\014+z<\255m\207;=#6>\210\324\\<2\361!<5\300\304=\256\302k9|\304\355<h\3666?j\201\332>\006e\234>\024\221\241>P\332x>^\334Q>\240\017\230>&\3221>\363\235R>\260<\222>/f+>{\013w>I\340\021>\214ya9\243\025\245:\203A\002:\226=\326:\235\337\3519lt\36795J\2509]\362\2109[\307%:\263p\3329l\236\3349\221\262M9\207\365\3469UU\005C\265*\225=\243\213\231<\345\203S@I\022\371=g\270\002>`NW?\357\251G9\256\"\002>\234\224\223\301v\031\241?#\367\027<\017\343\314\275\202~\344>\330\330(=\327\021\026>\367U\344=5\313w\275\232z.>\321$\t\276\205\251\204\271\340\300C\276~\334\227:\354a\013;\273\251];\033\323\326:{Tm;0N\317:\201\336\256;(|\000;\212\300\373:\336<\250:t\220\351:\221\201\320:%\226\000;\352rP<\375\307/;&6\373;\342G\010<S\315\006<\340o?>\022_\2408\235\307\257<\374b\210>q\243\247>\203\305\032>\355\311S>`\037\210>\253l\222>\232\270G>\277\004\220>\"\277Q>?\277H>\212j9>\027\221\357=\033\307\326=\"\354\266:\371\036\340:0\206\343:\227\"\261:\"\223\022;t\241\221:\235\372\201;e\245\264:B=\255:\242\244\227:\316\026\326:\364\306\222:\366\344C:\267m+Ct\021Z=\036$\027=S\017M@!!\365=W\341\020>\323\031\301>\357s\3429\266\343\234=\240\300\221\301.\232\256?\027!\263\276\226\245\234>\242\236F>\324\253F>\340L\207\276\323r\035\275\243\241T>K\334\003>\347J\014=L\030\244\274q#\r>8\3016:\320\225\35399\274\245:\016\222\024;\005\336n:\016\315\261:\363\033\":\2359\264:f\014\351:\035\273=:\354:\231:\253O0:\324\366\237:\261\002^<a\347e<!0\323=\016\271\304<B\362\233<)\3501>\374\006\0039\213V\262<\223\010\t?\361\322\327>h\255\330>\024\371\253>\211E\213>\216\227w>\271\265\207>Ni\235>\316\226\251>\207\252\231>\262\300\245>p~|>\026\257|>\300\013I:m\363\001:b\250\315:\237\263\321:\024M\226:\344\000\007;\352\360<:\205\274\253:k\246\030;\330\216@:p\024\321:-\024\000:\25004:\000\000\026C\"\245\307=\"z\340<H0I@\226\267>>\355\321.>o!V?z\035\2629\200\270\023>\317\206\234\301\257\255\276?\242|m>\274\211\022>\253J\363=\251\322\304=\347-O\274\227P\002\276Q\325\201>\234\370\276>E\322\213>{\233\340=\026\203\347=\327\3067:\240{\2149UN|:Jr\212:\370`\2339#\244\020:\356\316+:X\016\3019\271c>:\341\014\222:z=q:\224\2009:M\320=:\003^\276<\007pC<\360\371\246=\267\346\224<\"\241Y<l\317\177>WZ\3458\217u\215=|u_?\261\374\022?(\235\244>\257HD>\250\3037>\245\3635>\241\260`>1|\220>\341\r\215>\357\033\204>\274D\227>\274\204^>\207\325L>\023\334\337:\252\300}9>.\214:9\357M:t~^9\277\031\034:\\nP:#\036\007:w6\227:\200a\305:\334;\025:\340\373s:S\353\021:\000\000\026C\240\200v=\304\221\246=%2Q@\"^\t>\334\020\035>yo\010?j8\2239\304 \257=*=\206\301\326\302\334?u\"\237>DL\026>\030\325\276\274\241K\211\275\331/\244=\002\202n>K\022\254=\337m\\=\242@\242\275\026\217e=\327\340\':>\203.;\314\352\000;w_n;s@<;\262\204\326:L\262\264;\225\365\340:v</;\342\204\037;\354@\266:+\013\365:>\253\224:\276\014\035;F\354\025<9\010\346;\016&\264<?\251]<\003\2007<:Z\314=\211/\2638\234y\215<0\372\205>\220\341\366=E\020\225>\332D)>\021\2779>3\177\017>\026X\032>\327\244=>\314xv>t\003@>\321\322\344=\357%\355=\323\257\276=\361\260\031;O\322\347:\316IW;\353~\025;\322\272\230:x2\253;\024\301\363:f\306`;\376\250H;\006\237\212:\324\303\262:\n5\221:\204\223\251:\212\235\270B\365o\207=\254\232\227=\031\334G@v\320\004><\224\031>\254\354)?\275\277\2739\037p\355=\360\003\214\301\320]N?\364\315\227>uW\r?\267\323\261>\372\375\245=\272yf\275M\301[\275\',\310>4<\261>\273\300\346\273\250\304\257<\370\013\"\276\214\034N;8\037\035:p\247\306:\372\304\230:\337\363\243:;^\035:\337\206p:\313b\006;@\263\226:\366T\263:\273\317\3459\363\n\367:\237\271\305:\372s\025<c|\213<\210\263\333=,R\215<1!\237<\004\360\016>\345\267B9\037\247\233<68\256>\000\273M>\222\262\303>v\'\211>\330Lq>b\005\'>\347\3027>\317\020?>\260;\213>\013jH>\027}\221>0T\204>\351\244->\306\rg;.DK:\367\330\214:\027\037\311:1\034\327:\304\273\3139\307\267(:lx\363:6B\007;\303\354\264:\325}\2479Hm\331:b\031Y:\000\000HC\204\250\256=\345\243\001=4OH@\241p0>l\350(>\010Cl?S\376o9\236\004\'>\223s\222\301\373X\270?\301\317\312<^lH>\224!3>T`\343=59\346;M\001\316\274n\014\262\275\357\226G<\035Y3=W\013\237=\000A\277\266\314N\016;\003e\302:\227{\246:\224,\';\034[Y;\256\017\355:\262\321\244;tJ\213:^\341\r;\243\365\260:\210M\n;\376\311\205;0\3751;\351\341\235<\343\026\031<\261\000\347=\304\314\216<\004\2057<\247\200\207>\372\003\3318\267\240i=S\221\n?\316\277\354>\016g\276>\306\363\\>\217\235\205>ZP0>\030\270b>\033\001y>\000\233\244>\2221R>\036\311q>\234\240\223>\377\240:>X\245\367:\347w\223:\240\222\212:>\2243;\300\224\273;\t,\377:\202\365\355;\305Ui:\273(\361:\001\202\313:\204l\000;\345E\206;\2212\001;\000\000\360B>2\226=\031W\024<Q\3418@@\032<>[1+>T$\221?\000\235=9R\0215>\034J\242\3016M\\?\252\370\002?\320Yj>l\036\332>\014q\314>{\033\001<\202c\216>\215X\014>r\321\230=\250h\213<\336mC=\257\002\027\276\240<\223:m\210\204:\264B\244:\201z^:\231\363d;\301db:^T*;O\231\301:\211\274x:\036\027\327:\201]\302:\357{\215:\250\271\337:\3567\254<e\240\375:F,K>\272\327q<\201\366\006<\003V\245>}O\2048\246\372@=hW/?\240\021\301>ZZ\025?\347\017\251>\206)\213>9:F>-\2763>\277+t>\013\230\212>\231\3715>\02205>\'\207;>\266sD>\343B\247:\367\234E: H\367:\270A\264:O\252u;M\232K:\261E(;\244\177\306:\236\241\025:\331\036\267:\257\376(;\335r\255:6\353w:\000\000\026C\364\207%=\256\204\014=TZ;@z2\266=\214\243\365=\t=V>\n{\213:\\Xy=\357\235\235\301m\223\261?\317\214\242\276\251\017\013>W\376/\277\323\275T\274y\227p\276\350,\263\276\3646\003\277>m\225\276\035\235\263\276{\310O\276\204\003A\276_>K;\367\343>;\247i];\253So;\361\260\025:;U|:\005\345\013<c5+:\234\312=:;\031\224:\213\340\326:\337\324\204<\017R\303;S\332F<M\205\347<\366\312T>\035\350\037<;$\336<<9\036>\006\202\006:B\333\354<\\\237\375?M\271Y?\'\023:?\004J\272>R\334\316>\234\211\232>\016\203\214>8\226\276>-V\232>}\273\216>\343\236\224>6\037\307>\274\271<>\t\360o;\214\273\233;\re\216;\252-p;\377\256#:\030/\330:\370\327\346;\020w\226:\3738n:\331p\344:\254\346\305:\334=\273<g<\272;\000\000\026C\200{\304=\306\021Q=\274\342E@x\276L>\370)B>\207LH?e\01459\256N\n>@\373\222\301\301\014\227?d\324k>\277\374f>R\341c>S\035&>\253\211\240<I\225\235\2745S\246=\353 i=\320\3000>\2108&>\211\210G>\247\260\3109\220\001\3219\037#\212:\302\300\273:k\240\365:\017[\277:\306\363\254:\031\366\211:k\0107:\326\340(:WL\000:nt\036:\225\324^:\344\317\251<\300\243\000<6\343q=\272\034k<\340?\006<?\3678>p\rn8\222\216j=\376=\251>\247%P>\022,\231>\343\316?>\277\326\035>\362\366K>\036/\026>,Ng>\245Y\212>gZn>$\376r>\252\0210>\212\323\035>\007\242\2419jl\2609}\007\023:u\376\202:\211\363\274:X\221\276:\027:8;\200`S:.<G:z\343@:\262ew9\253\322\2549\320:D:\000\000\360Bg\306z=\273Dy=e\211O@\232\211\030>p\310#>}\226\014?\226e\3479\007F\265=\342B\223\301\t\\\330?\332\302\224>\323<\255>l\032\375>\354\342\211>O\275\007>\365pE\275\377\0331\274\366\364t<\376\361\341=NW\016>\235\200\226\275Q\222\3769\360h\2569\367\037Z;\034m8<\252\355\203:\244\263\025;\232\254 :\212\246\345:\252L\230:\241\354\033:qk\230:\032S6:\311\004o;\336\303\315<\377_\257<\247}\226=\325\264\014=\000\243\216<\221N\222>\013S\3519\270\207D=\t\320\273?q\347y>Lb\216>\007\236I>r\000\342=\354\rC>c\253\020>0_\014>F\001\317=\373\223T>\200\371\333=z\017->(\353\355=h\212\3469\221\201\3119\"\203\231;!\033O<\222\357\210:h\337n;\250\030\n:\217\271\335:o\014v:M\201\034:\350\037\363:\240\270b:\366/U;\000\000\026C\224\344\226=\0318\316=;\363R@\222M\025>\327\256\035>\004h5?\\\245\2069\351\362\366=\330\305\203\301~\301\251??\177\017>}@\326>\rk\206>\235\204\275>\363}\330;a\304\014=8Z\371\2754a\353=\033BN\274d\235\370\275\212\210\340\275\036\204\225:\307\274X:\3642&;8\314\010;H\217\n;c\001\205;n\203\027;\356Q\326:\247\354\016;p\036\205:\3021\207:\266\006\205:^\215\346:\260N\213<_0C<\275\254\177<\241\337\246<z\275\213<\021\020e>\323E\3378\366>\024=\001Zl>\017\355\202>kt\004>\010\250\010>\222\277\027>k\247O>D\024\007>\215RS>\234\231\025>\264>Y>W\230$>Ev\023>\263\026\363=\3241\212:\227\326f:\010\014\024;\273\212\372:\235k\334:\350\354\220;\241\026\035;\267\266\004;rA\335:\031\266.:=\226{:G\345c:\362\311\224:\267m+C4\201Y=\362Q\276<\327x:@\314m\362=:*\t>J\014\374>\372\262\3669P\322\264=\245\244\230\301CL\306?\220vf\275dC\347\276\230\026\317\275k\270s>\320)\263<\371\313\001>\246\253\303\275b\263\351\275`\243\216\276f\303\022\272\372\305\024\276f\327\256:\203]\361:T\356\323:3oJ;\321\"\246;\000\022\006;\341\237Y;\301R\017;v\276\224:1k\':\264k\356:\272\273\320;\022mJ;\336\354h<\365\337H<\371\241\205>\255\347\260<\305\267\212<,:O>\213#M9gF\342<@\264\235?cY\265>H\022\021?\030\376\362>\r\330\236>m\021\241>#\255\236><f\251>\273\314\214>M\217\232>@,\202>\311\334\203>d\251h>(\375\271:\250n/;_[\333:&\321`;V#\241;L\235\022;d\245o;l\021];\315\262\317:\\$\3369\314\0236;\234\221\340;\315\275\347:\267m+CV\315\251=\035\036\016=J4-@\264.\037>\367}0>\014V\010?(\016M9F\277\252=e\220\223\301\014\001\206?2r\211=x\001\031?\346p\315>*%\342>\331\376~>\255/\350=j\351\025\276\344U\024<\3553\344=6n\027>E2\200=\306\372p:\227\024\016:\251\n8;\355\266\006;\250N0;Jz\004;\n\217\261:h\202\242:\262pr:\303[c:g\201\213:\352q\217:\304D\215:\365\220\224<\331@\022<R\327?>\315\210@<\032\302\334;\211\326\">\027\002p8\347\023\275<\205v\320>n\355@>]L\244>\213iF>u\374\037>W\214>>aO\013>\0208<>A\014p>\222<K>_\007`>#\224C>\204hE>\034z\220:B\"\2579\237\265\225:M\277\210:vJ\340:\214\342\203:rm6:\023\253\203:\2056\3609\312\037\3749\027\0002:5\323q:\036\226\3149\267m+C>\233I=\024\034\201=p\321R@\033\372\023>jW.>@0\257>\n\274\030:V\027c=d\373\222\301\350`\003@\364\036\010\276\376F\365>B\244\351>D\247\221>N\020\">y\030\362=\2004\244\274A\210s=\303t\243\274\\\245\245<vZ\037>:\364\200:\022\326{9\303\204l;\030\035\224;\310\265\330:p\312g;\201\342\2759_\266\214:~\031\226:\277k~:q\024;;\000^W:\323\354\037;\371\242\216<0,\t<{J\275<b[\332<$\232\205<Q\0304>\251\306\3139\340F\225<\300\255\224?\035\213\367>su\215>\370:y>b\023\210>\245\354V>3\003h>\357\0031>8h6>\253\275\035>\337W_>k2\">\2016#>u/i:[\370e9\305\022\206;\353\322\357;\207\317\";\364y\202;=\263\3209(,\236:P\316\217:\245\315\214:4\371\205;M\030p:\020\270\006;\000\000\026Cv\247\n=\263\207\245<G\214C@\343\335\322=\025@\006>\207<\205>8\277\r:\346\371\031=\352\013\237\301\234\004\024@\360m\023?2\3223>\2511\034=\352\334\244>b\204\234>m\324\013<\333\336\201\274\306\313\200\276\210\317\226\274\273p\377=\351\230\314=8\\\366:\006\001{:\204\340\354;DRR<\256a[;3\223.;2\n\305:\334\312\213:\311|s:\333\305\027:\361\343\247:^\316@:\374\212\214;\345\226\007<\232\316\272;\006\300\356=o\330P<\3353.<\\D\370=\255Y;9\324*\273<\330WS?o\274\357>u\002\253>3\332\262>\022mH>_\320\203>\352\357\206>g\3348>\027\2715>@~T>\216\2634>pC=>\217t\\>>\014\026;\315/\211:\225\266\317;.p/<l\257;;\314\243#;\334\342\203:\230\327n:\252\373[:\203\303\3629\260\314\207:\n1\013:Qy0;\267m+C;\212\027=\236@N=\332\317F@\3326\007>\262]*>\2554X>\354\343\325:\360\235\013=\363r\241\301\207\363\013@\362\237\307>\256\217r=\024\260t\276\0257E\276\310\323~\276o0C\275Z\365\031>@C\227>\022g>>\220\247^\275={\n>(\241\346:*\2706:\271\315Y:\000\003\242:v\256<;\222\254;;N\263\n:\304>\334:\343\037Q;\035\327\205;\364\257R;>\202\305:\321N\202;\341SI<\032R\342<\325r1>\351\276\025=\020\273\322<)\211\n>\201^S:\220u\245<\343/\246?,\210*?V\311Q?\017X\217>\345\n\305>C#\344>\220G\304>\364\210\001?\213\320\033?Z\256\024?~\231\027?\001\354\322>\323\276\316>\320\373\260;|\r\253:\340~r:\004\311\010;#4.<B\366\025<L\357\003:\234\321);N\210\232;e\331/<\007\203\312;\356\030$;\033\362\212;\267m+C\206\224\226=H\251\\=I$O@9\021\020>\005\336\024>\252W>?\334\212d9\013$\364=\001\252\211\301X6\212? \003\'>\014`\203>\237r\360\274\364\010a>b\357~\274\370\361\342=]\210\322=\344C\"<<\376\361\275\'\216\275<!\324\322\274|\004\004;4\006\032:\030\300\322:\221.R;\213J[:7\t\211;\004\253c:&\336\n;\310\366M:\362\017\005;O\347\270;z4\251:\0216);\213\201\204<R{\355;^\335\203=\326\272\266<\260Er<OIq>\014\343e8L\202\004=\341\r\305>\341\353\230>-R\216>\352\363\213>5\274R>\372\033O>\333fW>\333\2074>6\273L>hd\t>\216\037t>\301Z<>\244\267\006>\240\360\343:\0010\3439\331\177\251:\024\307\230;\306|\035:\260n\320;\251\337V:\246\003\030;\022K\037:\317\223\251:\312\240\213;)#.:\247\373\332:\000\000\026C4\334\305=\217\271\225=\320\177K@u\2024>i\324->y\013f??E*9\230\332\033>\222\025\212\301\346,\252?\271w\274>U\264q>\377\333\215<=\373X>\177h\303\275\003\214\213=y_\"\270\270\tq;\007\2349=\221\017\212=<\325\036>,=;:\027\032\230:}\235h:]z\322:\237\235\316:\222~\001;O\315]:\260?\203:\277\313\';q\001\005:A\216.:\327*n:+\371\203:c/I<AWQ<\366\235\226=\275\272\363;\332b{;K[\013>w\222@8z\002\307<\003V\210>\341U\024>\233\\}>J\302\032> :[>\336\377\345=\230\035\351=\322\311\024>R\214\007>\202Z\331=\'\245\301=\204}\002>\301\324\302=@q\2629\3730\213:\256\361\3339\234\315\265:\204\224K:\033\225\002;\374\253\3579\301{\003:\"+\366:\231\321R9\376\261\3769S\221\t:X\352\010:\267m+C\020}\213=\226P\014=i\240>@\330h\017>E\010!>\325(\005?\1775j9fr\255=,\007\217\301\372\002\300?\347\"\037\276\316\370\307>\361-->\220\365,>=\220H=9cA>0\345\261;J/\315\275h5\342\275Z\026F\274\026\002\217<[\246\334;\262\361\203:\303\373\201;L\203E;\377L\253:\316\346\252;\256\037\005;\375 \236;\220\316$;\311\205\236;W\362f;\371\275\366:\204JZ;\262\375\231<\205\006M<\247=D>~rn<4\243><\237)\013>\'\000\2118\317l\222<]\224\002?\005\274\213>Uw\240>\330\357j>\026\266b>B4J>oQX>?7n>0\017k>\224\001<>(\332\177>\177\315N>\202\027G>\352m\323;,\275<:\3762_;2\005 ;\005+\203:\030\034\220;_\260\261:\331C\256;\353\004\367:5\325{;\214\007F;\366[\245:\310\314\314:UU\005C\370?8=8\314%=L\261C@O\323\014>\177\000$>6.\320>\322>):\003\203\230=\234M\230\301\213\200\007@\260KQ\273o\013\216\276\335Y\000=\201\004\237>\r$)<\257\300\030>?\271\243\275\241\340\017=\324\314\335\274\355X:\275Q\017W\276\234WU;e\031\372:s\336K;;\355\331:\023\257\206;\273\017\264:\021o\262:\367Jp:\2418\001;!\355^;S\322\344:C\223\205;)\311W;\327t\201<\263\300\003=\333@\242>\025\r\003=\313Ff<f\270\227>\201,\3009\216\346\221=\233\243~?\224\023\276>\211]\371>\n\242\250>\353\r\231>\3748\276>\005V\245>(p\274>8\230\240>\301\346\314>\306\272\223>\317T\213>\226\343^>\203z\303;r\373\357:EU\211;\334\3324;`*\323;\302\260\367:d8\361:U\360\227:\022S\023;\006\334\275;\303\237\265:\205=\275;i]\020;\000\000HC\357#\220=\316\212\216=\261lO@\271\031\007>\324z\017>\241\0270?\177\275S:\300\347\316=\335\224\221\301\357\376\204?4\347\344>\337\372\253>\314\374}>Dt\346>G\217\247\275\036!\340=\222:\222=w1\201>\303<\000\276\245RT\275\361N\265;\202\270\311:\374\321\270:\032\377\267:t\234 ;\312p\265:\220^u;\343\277]:\207)\221;\314\202-;3_S:\267t\203:i`\":.\\C;\375\323\010=\216\255\036=\223\356\265=Z\303#=|1\006=Nw\262>\3700\247:\272\347\\=\322N3@c\321\t?u\335\366>\000M$>\362!\366=\010I#>\264\007`>g6\177>wH\200>M\010\034>\036\026H>b\353\345=R\214\n>\003\024\312:\206\345P;A\242e:\366\354\202;\232\244\211:\230~%<Q\221\002:\307,p<b\230n;\004\350l:\354\233d:\320\023\031:\002^\224;\000\000\310C\331\3633=O\017\000=\2048F@`\265\306=9\351\364=o\264\261>(W\2619D&\217=\356\314\221\301\225\216\311?V\323_>(/\006?\344\023O>\324!\200>\232!\362=\220 \036>b\316A>\334\266\"=\222\362\r<\362y\230=\371vc<.\002;:\303\2360:%\367\246;\001\201c;\201\364\275;\265\327\336:*Fc;\201\305\252:EJ\r;\275{\260:Km\205:\206dn;\014n ;\301l\354;\262\375\221;H\275\237=5\322\264;\200\226\026<\021\234\237=\261{\3138\255h~<#U\314>\031^v>A\007X>\226\3626>>\337\344=\252\267\275=dG\014>\257\337\251=\024;\362=\333\213\001>\307\366\342=\353\267\247=T\344\241=\005C&:K\\\2549\3322@;\337\0161;\306\022\346;5`\251:\370\026\031;\236\241e:\375B\340:\377h\216:t\223::\251\355H;\214\316\333:UU\005CU\t\277=\304\\\216=G\001S@\206\2662>\211\253&>\326w\213?\007f\0209\310\362#>\177\226\212\3019\324 ?YiG?\360\375\310>b\306\235>|N\256>BZU>8\373x>\335\212\022>@\354*>(\276\233=\225\001\n>c\264\215<\253\000]:\013\033\032:\265!\323:8\031\004<\\\030\260:\372\325|;\375F\256:\324\002,:C}e:t\360\3729\311\003C:1J\031:\254\316#;\r\204/<\217\244\353;\304\332\217<\241\303l<\'\3674<\352\376\316=\221\241d85\264$<\374\345L>!Q\256=v\227C>\321\227\t>\215H\331=d0\001>\231\251\311=\246;\235=Az\315=\367M\000>\254-\267=b\267V=\247\333|=\322_\36490`\2469\371\331\006;\002\342\310;[\024s:\013e};\376\307\225:\316\266\2749\275\374\022:\221\200\2479\376x\3249\311\371\2159\305r\324:\267m+C\033\342\211=\31611=+\213R@\201[\024>[\340,>}\035\024?;\277F9\030\255\312=\025\207\213\301\274\004\236?\343:#\276y\361r>\215\325\320\275\234\366\214>\021L\212=\"z+>\3742\022\275\341\233Y\274\353\220\245\275t\352\325=6\207\000>\324ak:<\255D:\337\335\310;\372L\222:\356`\013;\313\"\353:|4|:6Y<;\372\007\013:\250M\220:\006F,:O:\224:\031x\007;\037\343\032<\315=\251;8\343\300<\366\254S<_VA<\201\207\025>=\262484\032\251<\223\032\202>\023\353\363=\276iS>\276\267\317=\205M\001>V\026\037>\300\316\300=\212\362\262=\313\246\272=W^\025>\300\2703>t\365\352=B\005\001>\305_<:\352.I:\225\360\257;(\2066:\325Gp;\320\333\";\332e\223:&5\023;\250\001\3469g\"\376:\311\362\3079[\031>:\236\342\315:\000\000\026CT\331m=\261\330X<\327%?@\027+\026>\227\360*>\224p\r?{\361\005:\316 \310=v\215\240\3019o\235?ha\021\275\314\305\310>+4c>\034\351\225>\312\'$\276ST\252<\322e\035;\023\256\247>%Z\200>\240M\337\274HJ\351\275#\366\3559\377U;9\263%\237:u$\216:|\307\303:\361\310\332:.t\333:\21070:I\263\315:\272d_:)&J:~xO:\364\013\230:\223i\"<\013\326\010<(P\203>\3623\265<\320\265\247<@\255Y>\214\03779\200p\213<\315\253X?\362\202\234>\3247\264>\032\275\204>\370\303s>\234(\257>\345E\237>\337\207\303>(\267\241>\251+\255>\3629\270>3N\213>\371d,>\032\310_:\261C\0039\324\233\266:N\337\213:\2736\277:_Z\301:\n\336\277:\324\342\n:W\000-;\271\306P:l\240#:L\376\313:\347\364;:\267m+C\252\322\301=X\251\266=\0042F@f\313?>N\2439>\005JA?c\20509\244\273\000>\"\204\217\301\022\014P?*\315q>\356\005\372>!\252\355>4\026\307>3\337\007>\3464\367=\266W!\275\\O\234=F%\255>D\336\251>\344\3629>5\345\2429\206c\2519\247\036\030;\271\206\020;*\364\336:\241\247U;\243U\3279\275\371\220:\343\033\2449\241\341~96\030\3119_\322I9f\312\306:\3704\332<\350@\002=\006b\005>\252\234v<\242r\311;\271\343\241>[\327\3048\345H\251=<\001\331>z\035\206>\217~\232>\311\323\250>\215\027\227>N^r>P\300\203>\241a\222>)q\216>\336\267]>\376\017t>\366\353r>\223K<>XrG9\377\327V9/j\307:2\215\037;~r2:\304\270\312;\260\257\2369Q\204V:l<Q9\2108\0109\307\243=9\210\334\2268\031\227\313:UU\005C\346\n\207=\364;\272=D\227N@n\305\006>\222\001\016>>\323\"?\000{\2239>\010\314=@6\211\301K\340t?\025i\373>iTD?:\302\t?\343\307\363>K\014_=P\342\020>\346Z\273=\310\200m>U\035\027=\352\362i\275\375T\257\2753\003\006:\017\220\3759\217\337\337:\374\364\223:\231e\025;\004z\216;0\374\031;\324\262\027;\342\027\353:2G\355:\301\262\220:I\010\022:\230\013\345:\n\253\206<\026}F<R\356@=\177%r<\021\342\037<\322\271M>\212g.9\214/\017=}x=?\207\312\246>\020$\205>-Ys>\321-%>\234dB>\245jB>6\'\'>b\272l>Vc\035>\032\365f>s)G>An\002>\315\262\3079\004\203\034:\014m\277:U\261~:\013\252\020;\201\243Q;\251\366\035;\326\204\021;\035 \026;h4\006;1\ns:\254\272\3229\307\352r:\000\000HC\327@\215=`\231\257=<YR@`\206%>J\372+>[@!?tK\2449z\335\341=\321\317\213\301\245\201\247?z\021\001>\251\371\'>\307\035+\275\276\221?\274\245r\252=\304\211\227<\372\243\310<\2175]=\217,\212\276\351\220\205<\345\252\240\275fVo:@\342\376:\350H\373;\211\035\342:\3017\217:\010\t\220:90\201:\002\303\270:\321\260%:\256N\341:\257\324\224:!,+:[\'%;\np\255<\030L\024=1\213\274<n\350\340<\317\244B<\023k\203>\310L89\205\231s=\034\352\230?\262\207\247>\230\356\022?\250\223\225>\217\320\222>r\326{>}\330I>\007\335\221>\320\n\210>\216\334\320>\241@\250>T\352\222>\306\"B>\200\221\260:\230\227F;\342\262\031<\212\340\007;O\264\321:/\207\221:b\335?:\361\320\204:\3756!:\021\007\300:\333\376\256:VU8:\262\222\035;\267m+Cb5\022=\2163\205=NDR@\202\021\r>\202\005->\\\324X>j\3023:h=\365<\271\355\224\301J\332\000@\231\311\242>\260pw>A\323/=h\364\361=\t\275K=(\'\220=\370\014\t>\241\005\355<J\260[\276F\303\n\276\307\340\220\274@+\3339Z\253\2339\370r\247:\271H\3319+\224\3039\224Q`:{\264\3619#n$:\270m\3149`$\200:\264\023\316:\334\224\3209\327YB:5\212\036<\337C%<\022z\343<I(\202<</\r<\322\310\221=5x\3449\235=\007<y\351\347>\"[L>9/\236>\024\340]>\214w3>\311\333\003>?c\304=\304\323\004>\025>\005>\371&\031>Q\315&>dy\035>\323\363\001>s\036\3119\313I}9\2039\302:\001\325\2449\321\366o9\255\243H:V\307\3409\020\326W:(\025\2419\005\007B:\277c\361:5.\2379NE\3749\000\000\360B\375v\257=\267\307O=Y\246F@\246+->6x2>y\342:?\347@\2079hT\376=\362\364\215\301\375\007\334?\002\235\"\275\2131B=D\276\033>x\316\027>\352\326\332>\373\372\354\275\017\266\235\275\222\013\221=\364\352\330\274\026\"\204=@B\330;Q3\336:\017\227\177:\354\212f;?b\341:\261\340\276;\340\356?;\241\227\n;\211\262\360:r\200\013;T\231\007;t\037\031:\220d\214:\340\\);\211\024|<P\262/<\253W\320=\346\372\263<\3350\014<\341WM>\034\303\3108N\261n=\326\207\037?Z\302\224>*#\246>\013\'\'>\272\271\243>\025\353u>[\033O>b\2236>@q\n>#\2250>g\340Q>z\367\212>\374\344d>` \363:{JI:X\226\324;\002/\325:\330\230\262;\365Vx;\246\003\371:\270\202\036;\034\327\004;pT\037;JJ\3449E\371\207:\026\336\370:\214.\332B $*=Y\316C=p\0021@\366\343\356=\222^\025>\364O\232>5\016\3679\244\200\036=m\004\226\301<\021\t@\351\373\272>\344\256\263=\221\210\252=\200\226\357>\223\024\251>\371\305\256>2\251\262\2751L6=\033\035\242:\352\204\t>\2149&<\030g\373:\341\246\303:?\361!;\234\243<;L\267\361:l\021\216;\332\347\315:\324\300\230:u`S;\267\340q:x\232k:\001Y\206:\324\235\001;+`.<\021]q<\036w\205>\006UW<\376\216\006<\002\363 >>B69\000\035\361<\031R\272>#\304\230>\240\246\375>e\207\267>\263\262\225>\321\332\236>\264\365;>\205\332\217>\231\304\227>\301\242]>\264\216O>\236\332~>(9#>8\263\023;\315<\314:_\227*;\352\266\007;\023q\276:\206b\226;0\214y:@\236h:\224\347Z;\357\016\004:\230\274\004:]\025\226:\220\352\224:\000\000HCF\027\177=T*\002>}\260L@.\224\034>\305\212$>\330y\023?\210\346\2449lr\274=\353\260\205\301\270\263M?0\274\\\276P\267\337>\366C\376=cE\266>lz\216=c;L\273?\312|\276\002j;=L\014\267\274\330\225h>\273J\214=\267L\275:\004\224e:\227\351x:s\346y:\307\266\324:\217|\014;\316\026\226:\021\212X:\304\001H:o\243_:O\312\250:\002] :C\004d:r\304q<%\255\022=\'\025\032>U\022;<\263=\363;\366\336>>\303\276\3568\245\344\t=\332\'\214>\331\032\251>\351@\255>\310\020\221>\370`n>\271\356>>\314\372\031>\032\2024>\320\2454>\313\364V>\303_Q>\243ik>:\023\036>\272h\r;\3112B:\007\360\005:\213h\3259\022\321\217:z\037\033;\241|N:G\374\001:\"\031\3449\014~\3149]\n::\030\301\3319\270S6:\267m+C-\333%=\251\177!=u\007O@I\"\216=:3\267=R\263\222=:2Y:\214\230p=\254\002\232\301\236\337\242?z\234\212\277\313/\033?\351z\374\276)\2210\276J\241\216\276\356||\276W\313\340\276\315O\023>\244{y>\345\254U\276\202\377\211<,\221\372:\215_\3559S7D:\220\010\3029\365E\006;4\006\035<\357R\307:Ep\324:]\010);\201\014*:{\327\223:H\256\2779\005\341p;\206\365\262;\n*\210<\003\352\230=\224O><q)\324<T\244D=B\321\2339\370\206\234;\244rC?xx\333>y\251\334>y\226\274>6\242Z>\304l\251>3R]>Zs\245>\275\036a>\213\274\270>\024\226r>3T\237>\341{2>\236\227\016;t\206\005:\001h\225:U\224\3609N\343\030;\227\344k<\244\252s;f\n?;\033l\270;\263\262\215:\2676\";>|\3149\357\033v;UU\005C1N2=\317C\007<\214\2258@\223h\241=\310\030\317=\332P<>Sc3:\024\314y=\264O\247\301m\230x?\0029\245\277\363H\234\276\007\275\354\276\241\003Q\276\272\274\245\276\232\022\237\276\273\357x\276\343\022\014<8\221O>l\023f>A\354\020;|lE:\230o\251:nD\224;\241\013\355:kc\244;\337\313\351:\2304\317:\0244\022<j\333\310:\333\344\326:^\227D:\343w\035;\236%\205;\240O\025<\235q\343;\032N\357>YG\016<\201\350\200<\357\245\231=6C\3109K8\210<\360\253\275?=\247\032?\025\013 ?\213\027\014?\345\303\220>\336\005\212>$\201c>\307{\202>\340\276\231>J\003\230>\013\200\300>t\304\227>\277\216\205>v\344\236:?\237\210:\214\204\271;C\353\364:\345n\024<\261t\n;I\335\267:\266-m<\013y\333:\327\203\355:\270N\204:\243\334\213;\026\n\207;\000\000pC\226\236\253=\315\203\324=lQP@39.>\026\3267>-\235;?p<F9\311\025\371=\322}\204\301(\204\233?\"*\344=pN\320>\264\006\346>\244\255\202>\325\365\275<\220\235~=\033>9>8\303\275=b\247\n>\231Q{<\204L\026\275,~h:\007\265\023:\346\362l;\31268;\277f\207:rb\024;a\233\257:\030\213\005;\242\255\356:\201g\210:\234\356\305:\254\327b:\306i\341:F}4<\2713T<\232\231\'=\0315s<\271\3301<\257\234\340=\210\333n8\344\277\264<\300\310\221>]\r[>\006\3229>\224\214p>\353\n\007>$v\320=PF\036>\3354<>\013=8>K\327y>\350\353J>\360\025\027>\245\023(>e\'2:4k\3059\322\'\301;H\221R;7\013D:\317\236(;\366\352\231:\3165\366:&\247\235:\226\234\032:\032<\235:\273d\034:\203%\313:\267m+C\201\234\235=\025\032\270=q|P@;\256\037>\315\205\'>Z\244)?\026<\20098#\337=3\024\206\301\260j\263?5*\214\275l\244\211>\360\030\357=^)E>\266/x\275E\372\017\275 \237\024\276\014\361N=9\037\017\275\324\205\020>\302e\177=6\364\242:-\210@:\303\006J;\322(\036;\313\354\336:S/0;\266\353\342:\215\242\243:D`\365:\353\320\351:\231\377z;\257\037o:\343\247\376:\360\t\240<\3516\271<~\227s=\231\200\274<\241Vf<Yk[>\334\372\2368s\261.=\371\2012?c\200\310>G\'\227>\367\3023>\342\024M>\343\'+>.\310\037>\370y3>J\022N>!+w>\013\000e>b\365O>\375\226!>\352\212e:Nh\023:\013D\315;\204\261\371:\212\000\017;\336\236\314:*\227\237:\363\310r:\013\233\374:\231\323\343:\355\361\337;Z\020::~)\017;\000\000HC2\026\330<\215\357x=T\304G@\203f\325=\272,\n>S\356\230>\273\246B9\277\333\003=.\225\232\301(>\323?z\263\256?y\220\235>\346\"\210\275\025\366s\275\241\310\n;\364\315\242=Y\372\346=\232\254\'>\351|\017>\247u\323>\333y\327\274\262\355\025;\022p\2149e\025\2409k\332J:qi\245:\226\344\226;\321\034J:g`\367:\205H\235:\252\204\3429`\241\234:\242\024\2679^\026\252:!\035\251;\232:\325<+N\302=\225%\245<Z\321\002=\317M\255=\210G\3078\003\363\316<\253\342\251>\302\315M>v(\214=n`\016=\356\336\203=3\230\200=q7\230=\013N\201=)\023\310=\177\210,=\215\237\206=\220\341r=\365CD=\375(q:\021\251\0269\025\303|9\337\t\027:\341z\005:U\300\225:\251\272\3379\273\203\251:\342\'\026:\323<\0359H\013\3259\240`?9L\263\2349\267m+C\262\301\025=\016\227\024=\213\270J@\332\357\352=H\244\023>\0070\200>~\362e:GXC=\035\267\230\3014\005\007@I\322\266\276!\264\222\276\306,{\276g\021-\276E=?\275*\343\276\273\227\363\317\276\365\332 \276Se\252\276\357\246b\275\322\3616\276d\230u;\273p+;\027\321\177;k5\270:+E\025;~\340\327:r^\260:\325\316\345:\222l7:\254\233\244:+}\330:~E=;D\336>;\222\026D<\204\003O<[\222\034>\215\252\340<\347\276{<\334\t\006>\377u\2759\336\310\245<\216t\034?\233]\334>\251\217\371>\206<\\>X\202\301>\3154\245>\036+\244>\312\002|>u\344\205>\265\212\202>\"\\\246>\370T\257>\346z\217>\310Z\327;\304\277\230;\364+\327;<\345\353:\236\005E;x=\366:_\r\376:\342\027,;\235\315@:d.\336:q\355\025;I\362,;\335\276\004;\000\000pCg\204\247=\305\370\345<\371DH@H\237+>\020\246*>\246\315[?6/q9S\312\r>\215\000\224\301\215(\226?%\276\">FY\366>\tp\210>S\223s=\031\273\215=mN\277\274\031\315\324=g)/=0\006A\275\342\027\263=c\246\244\274qR\371:\246\263Z:\"\216\350:\203\224\301:hI\372:C\327\036;\367\221\201;uo\217;\n@\264:\374\223\255:@a\033;h\006\320:\321j\021;h\357V<!\212=<\204\205\016>\337\3048<\330\243$<]\2341>\315\354\3118\242 \270<\352\364%?\226\036\367>K\200\305>\334\006\273>t\272Q>f\210L>b-b>\223\033V>\205\312\222>\326\225W>\202[^>\335:\235>\362\333`>L\013);E~\244:}\232\251:\344\264\200:Py\362:\232\350\000;\342bo;\330\331\201;\321\323\304:U\237\200:UO\220;\234c\013;\005\275\240:\000\000\026C\301\333\210=\355\373\014=i=Q@S\275\'>wf=>\250\377\313>\022$\3059K\037w=t\362\224\301g\217!@\030f\264\276#\347H>m\273\207>\n\376+\274pq\327\275E=\034\276A\375\374\275P\270(\276\0057A=\240I!\275\022\326\215\275%\241\301:\006*\260:{\355%;\265\255\345:\033L\252:\304\2534;\351[\016;\322?\265:\021\036\004;\270\330h;)\034b;?\207\370:\002\n\014;9\300\210<t)\221;\246h\000=\273\005\251<\250\252\345;#\0051>\377\006\3608\334\225\331<\242\347\372>C\232\274>\032\275\013?\014X\224>\374p\212>I\244?>\3628\r>\256^\024>*PI>9\203I><\342\370=,\375_>\017\005>>G\273\323:\250\361\353:e\021\365:a)2;o\334\232:\222\272b;\007\321\275:\240\353y:!t\014;\013\202G;s\035\254;\252\234\';v\315\263:\000\000pCdx\314=yew<-\005?@0\207?>\006\2635>\214?m?y\\p9m\331\'>\375\323\241\301\204\001\306?\271\340Z?.2\211>\262\275\255>c\035\221>\314\224o\275\236\021\034>\342\004\202>\376\353`>\342M\206>\262\0374\2752\203\364\275\317\326j:O\363\3369\211-8;/\205\007;\001%\245:5\2119;F\337?;AD\010;\374|\235:\375@1:\244\220\377:\235/I:bB\363:B9\200<M\312(;\'\242\016>\"\235\274<\316\341|<\300Z\t>\340\357\2158\222k\025=i\362\033?\014\274U>\234\330\227>\210\333s>\330k\210>\357l\212>y\224t>z\241\200>\304\025\264>\032\324Y>\010\'\202>k\361E>\266e\032>G\373]:\370\014\2309{\260c;4\255\016;\367\274u:\277\265\r;\371\202\220:\032\344\250:\204,\004:^6<:\253\210\373;d\373g:l,\002;\000\000\360B#\205\004> \0260=\224_J@H\320Y>(\034D>X\375\215?\331\373\2048\260\264s>\330\177\217\301V-\233?\311\030S\275\376\234\204>O\231x>\357`\217>\236W,>4\212\n>U\022\211=\036P\263=\364\023\345=.-\037>=\341\315=\276\032\177:p\355\3429\302\301<;\ti\036;\007\0012:1\205\255:\372Mq:\364\235\230:k\274\3169\224t6:\274\206\3719\260\262(:\254\304j:\231t|<\002c,<8\336C>Z\231\375;X\332\351;B\251W>\027\315v76*V=\353\364\230>`GM>#:\021>yAF>(\314\270=\023\376\270=\303\030\305=\" g=\3625\257=\236\206\231=\2736i=\234/k=N\261[=B\\\2669g\t\3329LVF:_\300\206:\371?\232:\240\331\3209\337\377\3269\316\032&:jty9\267\025\2159\024b+9\303Q\2509\004\243\2329\000\000\026C\252\211\266=\005\3726=,\0224@5\340\'>\330\327\'>\277\256G?:\270\2629\211\035\007>\310T\224\301\367~\226?\201\206\235>\016\363\034?\374\212}>\275\271x>m\320F>o|\320>\261G!>^\237$<\037\022\245=\2547\203=\330y\303=c\254\034:\205\357\324:\251\263\362;\331L\341:\372\320\205:=\352\330:\177\225\251:e\264\010:\326\344L:\204RY:y\217\013:\034\314\277:<a\003;\360\226\314<3\035\343<\345\210\210>\330\327\312<\2759\007<\305\220\305>I\216\0319\216\241\242=#\336%?\235\252t>\332S\223>u\344\261>0*\030>^N6>\022\270U>\023\233>>iE$>Y0B>\300\366!>\tk\030>1\036\375={\346\2529bT\235:\206{\320;\210\023\243:c!\3539O\264\247:8\233\177:U\347\3119\362\250\210:\315\032\2609\273\272\3019\251G\205:B\310\325:\000\000\310Ba\201\361<P\335>=>SJ@\333\204\361=\323\206 >\374r=>\216\210\221:\342\216\016=y\334\246\301o\344\016@\326\013\014?\256\253\223>\361\014(\275X\372\304>S\221->B\212\203>\307Z\247=\177\026\003=Ep\026\276\037\356\332\275\023y\347<G\203\316:\204\361\236:X\373\375:\327\037\002;\275[\240:\357\327\343:\025fM:\366G@:\374\n\3159g\033=:\230\274\261:\034-\320:`\"\363:+\nS<\247\201\006=\033)p>R\027\365<\257\304\266<;:\r>R\201x:\216\210\307<R\276R@t\026\356>\313X\343>\303\206\\>\325\t\303>\315\344g>z\222\204>s\223\211>4\262\214>\323\323\226>\0165\201>\004\206\302>\225S\240>\251\010k;\254O\031;9\323);\366\305L;\253\310\024;0\243\005;\307\331W:e\346\237:\261d\036:\215\'\266:\224\214\002;\255\035:;{\252\231:UU\005C\212\3265=\223\266\332<<PC@\204\264\371=\336n\037>\201\253l>\3017+:\000\232\034=*n\236\3016Q\r@H\025\007=\317\013\212>I\036z=$\277\230>\314\345\001>\177,\022>\253\255\017\274\244\225l\275\264\326V\274a\251\237=\261\367\342\273\006\1778:w\347\3769>\201%;~\373\307:\365&&;[F\254:D4\232:\264\002{;%1\311;\300S,;\336\362\236:g\335\3419z\032\001;k\217\024<\326\025]<`\006\t>\256\323\265<@\025\272<\366\005\323=\326[\013:\316\272\'<\243>\303?d/\306>\361\030\030?\220\3778>\211\247\200>\3707\230>W\202\256>x\352\217>\004r8>\032\266\206>\023\0216>\027\3608>\030|\346=\217\032\006:se\3729f|(;a\204\244:\243\212\017;\226;w:\026\235\210:\207L[;JD\254;+\376&;\371[\260:}}\2039_q\263:\000\000pC,S\233=+{j=\033\330R@\254\2241>n\2741>\322ZA?\210.\2159\211\360\371=\\\013\217\301\264\355\256?\004\363#?cz\222>\355\303o>\214\010\233>\034;F:\235\002\270\274\016\223\316\275\343W\377=\263\2239>\254\0040>\336!2=\336\202X:\374\001\2459\256MI;//V;\361\223_;\374 \233;\362\374j:\305\250\301:\026\374\030:\323\310D:k\200\310:\214\277\3009\275\265\021;\362iD<\361-\003<\224\350:<>\014n<\t~\004<\355j\034>-\036\3258\372M\264<\277\362\335>\013\007\326=\311O\202>\245\004f>\006\302\370=\033\360\024>\026`0>T\340\027>\265\311$>3m\036>]\257c>\326\323L>D\315 >\342kM:u\031J9*\202k;\244E\233;!WK;\366z\216;\027\247,:Z]\004;\n\354\021:\025\'J:D\262\334:\224F\3029\355\345\303:UU\005C\305\323\200=\3135\242=\023\370L@\263\250\345=o)\371=\260\347(?UB\023:x\306\321=F\010\216\301\224\263\300?\215\217\206>WmK\276\371I\023\276=\333\255=1\3430\275+\254|>h\302\330<\204\013m\275\020\270\\\275*\tZ>\2556x>[\350b:\365\"}:\354\022\345:\252x\302:\\\215\243:\035\350\2559\023\2122:\230\006\022:\217=\3279V\351(:\240\250\2019e\257\":\312_\205:a\375\212<\221\026\233<\234\030\240=$\370\031<\2517B<\325\275\217>Y\'H9\332\244\037=\215u\364>\320n\276>\343\276\340>\3241\202>\366\232r>7\216M>\245\222r>S\250\257>5[\235>\310T\034>c\312r>\214\277\023>\035\275{>\017\225\327:S\020\236:\304\2224; \207c:\355a ;;m\014:\305\253i:\226C\226:\245\003\3239\372\315\263:\213\231e9\266\274\025:\006\036p:\267m+C\234\204y=\030\006\346=\251\355O@\014\274\035>\036m->\340o\362>\271\034I9Vv\234= \255\211\301\271=\240?\210\354\016>\230\311)?\014\253\263>\"=\266>\240\304\202>u\r\272\275&2-\275\225\000\354<\376\357k>\344>\275=*H\361=a\2070:\320\001\036:\234\2544: \036];\250\\\304:\235F\234:|q\274:a\016\272:t\372<:\010\271\":\266\251\':\340\373\001:r5\205:\"\313\t<\371L\364;8\252\021=N\357\"<\344\030\373;\241T\351=1\234d8\247\275\303<\277zz>L\203^>\3138\220>,\203\220>\273\212\307=\237t`>\010\341\207>i\031O>Uj\242>h\331I>\363\320I>g\363\'> \345\335=\377\317!:\262\037\2329\346\373\3219i\242\257:\177\242\014:\272\316\302:\027Q0:r\026\222:B\206\3429\262\014v9\025}\027:2\034\2379\250v\2629\000\000\360B\334M\205=\202H\306=\346\347<@n\343\025>B\225\">\322\364\026?T\31269\362\245\300=:\016\204\301\307\357\321?\035*@\276\254&\205>\037\360\007;\022ZY>x7\347\272m\312j>\206d\032>\n\352\201;<\347\212\272S.\372\274f\335\262\275w\277\262:\337\202z:[\233\364:\263\364\247:\345l\034;U\007\226::\343\215:ye\017;\333\350\026;;\273A;\222\331\023;\030\313M;\364\301\313:\310\231?<_{\273<\006\207\366=s\227Q<\351\374\350;\236m\346=\221\032B8\323\264\343<<\205\316>^\312\033>\215\240e>b\313\031>\267\'+>\307{0>\227\342\005>\021\373:>\2413\366=\247?\032><\026\367=\353\333\n>\313\211\020>8\273\254:\377Z\243:\2705T:7\020\':O\250\375:\031\303\022:\363yM:\365\365\256:\336\234\276:\345y\r;\217\264<;\003\342D;\321\202]:\000\000HC\340\327\311=\350|\230<\226\334A@\203\\\r>\201\243\036>SX3?CQ_9\331\177\034>L\270\230\301\250\314\322?\243\316\203>\010\302\365>\236v\244>e\310j>\320\377\253<C{\021>R\210\242=_\020\031>\235\301\213=\001|\316:Q\037\200=\021\034p:\246\205d;x\244\316;\005\230\217;o?\344:4\253\030;3\204\022;V\3470;\234v\347:\020\014U:q\335\320:\214\027Y:h&\032;\025\210@=\237\352\332;\355\305/>\t:U<\25426<2^K>\000\372\2368\017\335\237=\3001^?Q\350\270>\007h?>\326\325\034>\005|\014>\333b,>\276\177\267=#;\354=\300U\017>\234\366\025>\263\311\252=J\231\002>\277\214\000>Of\033:\034\272\007;\037\002\225;ZOe;|*\216:\274\206\274:\366\331\335:~\220\";\347\330\035;\307[\025:\332\210\241:\353\237\3569\304\000\222:\000\000pCn\013\317=p;8=R\310P@;F,>nR$>\201\312~?\255n\0379\316\2340>\333\243\215\301\300o|?\033\260*>\226v\235>\260\306P>Q\001\346>\252f\004>\224\211\034>\256\3256=eY\023>\020\374\327=\375\026\265=\360zo\275_\343\301:K\225Q:\276\343\353:\222\3110;2\374\346:^\037\037;rY\236:ml\254;\324?\276:\2754\325:\276z\277:h\230B:\234\317\020;\312Nq<[\222\222;\313\214\216<%\001V<\350\352\320;!\0137>\303\\38A\371&=\267\372w>)\014U>\321\246(>d\273=>*\001\t>|o\n>4(\004>\241w\'>\206=\020>|\006\016>\256T\034>\312\255!>\336\253\350=\014*\303:~\351;:\353\243\262:v\211\220;\025+\302:\321\356\200;\244\223r:8\327\230;\357\271n:ap\000;}\010\247:q[\000:\336\260\262:\267m+C\366d\025=\263T:=\242\004J@:;\326=l@\021>b0;>\356n\023;\007\310@=2\315\240\301X\336\001@\325<\214\276\r\030\007=pb\245\276!lC>Rg\245=~\225)\276\356-\255\276E\301n\275\324ib>P\332\277>\205\330\224=\264\271\2309\336\315M9>\322!:kAO:\260\305;:\270\237\244:E\337\214:\370y]9\306\r\033:\000\352J:_<\036:\026\'h:\354\276.:%\026A<\200o\006=}#I>\0276\365<\376\206\300<?\267\010>5\312\\;a\010\204<\336\367G@\342M\024?i\036\236>%\3472>\343A3>\316\374\006>\312\225\244>\306\314=>\205b@>\004\351V>]\216d>\317>U>-d\035>t\337\2079\234\275b9\307\014\t:\034do:kT\3659G~\200:\2172P:Q\25199\275\251u:F4p:\242\n&:&\327\227:\002\326\2419\000\000pC\310%4=\316l:<\220\366\'@\307&\300=#\355\006>\260\257X>\024\252\231:H\004M=#(\253\301&\017\311?\222\376\017\277\336\301\270\276\237\'\021\277b\357\027\277ht\316\276m\037\320\276+\342\005\277F\216\002\277\312\216\341\276\353\233p;\005`\252\275\034\247\013<\006\252<;\210\265L<\216p\031;j\3468;9a\265;H\n\352:\316\204\000;\3101f:u\202\265:oU\005;B\310\237:&d\301;\270\\I<&\366+<\317\203\300>\234*z<\350#\355<~\246\332=}pH:\035\254\256<\030\220\331?\335\312G?j%\002?\354\351\264>\230\331\214>\r\271t>a\360\220>\366\311\271>Q\021\335>I\n\274>;\244O>\364\257\227>\263\236\302>n\310V<\234\322\261;\212\336^<%\203;;\331\323j;P\251\313;\207\206P;H\344B;|\220\344:6\222&;3(\240;\302\014\";\202\263\200;\000\000HC\261IU=\274\321\223=\352\214S@\373\315\n>\252I\035>\007a\205>\223\347\2409)\235\225=~\315\223\301\335ZV\275\036e\325\2772*\223>\362V\336\276\202\341h\275\342\3153\276\r\310\246\274_\327\342\276\265\373\246\276I\3021>e\311\036>DG\013>\243\031x9\213\270\2739;]\226:\355\316\037:\2648\3539\366\007\020:x\te9\260\371%:\013\270\3068 ?\2029C\300_9\300\353\3409\177\306\003:\002\357,<^\n\247<\244\"@<\002\020\277<H\201\251<a\303\372=\376!\3458\001\373g<\371P\021?\205\026\316>an\344>\366\025e>\316\331\224>@@w>{\344]>\330\376\364>6Q\231>2\340\345>\204z6>z\271[>D\033B>\"\206_9\310\361i9r?m:$6?:u\3063:2q#:k\371d99\200`:\350\304\3058\276\025\2359\220xM9B\337\037:\235\034\2239\000\000\310C\004\304\215=\0273\203=\273\305I@.\014#>\r\0205>\003\024\t?\037L\2229\004/\244=[\344\215\301@4\321?\236\340\350>\335\254\335>S\272\213>2\"\002>I\301\235>d\354H>\2107\221=dJ\010\276\216\225\211\275\244\342\024\275\014\252\316\275\246\365o:\022\236\205:W\320\231;&\024\257;%\341\n;\322D\231:F\274\241:\227\356\331:\373\342\334:\320\223\020;b<V;\027O\222:\264\266*;\276@\241<j\352\031<S\317^>\353\275\266<{rz<\232\227\014>g/\3208+\252\320<\316\256\311>\314\320\026>V&\254>\030/^>\235\231->j[D>\021* >\223\001U>\261|u>7\324:>N\3248>\336\0325>\317\256O>\317\242\007:\302S\226:`\231\006<\177\306 <\0226\304:\026o\273:XN[:\357+\274:\216G\267:\035F\255:\326\222>;m\010=:\256\346B;\000\000\026C\331!8=\315?\'=\002\361N@\254\342\033>\021\2228>$:\231>\376\235\3729\241V\033=\376m\231\301\216\222\022@\\R\221>F\213\034?T&\224>^\024)>\203\257\261=g\224\230=\301\351\234>\004K\235=k2e\275\265\222\342<\024\361\004\2752\'[:\252\345x:\273\020\270;V0^:\267\216\330:\230\240B:\302\273\273:\221\260\027;\356R0:o\201\177:R-[:CC\266:\351l\002;n1\033<#\267\216;\264\3572=15X<\034\013\023<\014\310\236=K\233s9\302\3363<\334\357\245>\361\307\030>Iz\217>\027\2154>\250\212\370=] \344=\344=\017>\303\253!>{\031\023>\330\'*>\311,*>\373\266O>\030\311\002>1l\3509@OF:\035\305\323;T\341i:\006}\";\375k\3359&\373\241:\2347\033;\326>\3419\203=\264:\023B\016:<0\265:,\\\317:\000\000\360B:\021\205=\246\256\310=\230\276R@0\216\027>\214\305$>\265~\013?\002!\2269BX\267=\260Q\206\301\017L\332?E\351\261\275{\233\030>\256G==c\256\212>Q@e>\206\275\010\275\03105\275\002;\255\274a\003\333\275\034N\213\274Q[?\275\000D\325:R\372\321:Wd\344:\r\257\371:\217\267\241:\213\270\311:ne\n:\377\013\256:&<\350:\325r\262:\275\206\315:\177\265\220:n^\235:\365=@<i\277w<\376\270\242<\"\206~<\230\006,<\217M\026>\313\335\3028\253\263\351<U\200\277>\254+b>\312\007\231>\004#p>\306AS>\211\315Z>\031\267]>\344\320r>\345SC>h\334\030>\031\233\037>.iD>\352:$>l\213\335:\027\325\312:\376\334\357:\215\004\334:B\362\216:\023Q\026;\254\005\2779\374\371\275:\306h\301:J\244\267:\030\313\263:>\261\213:I\217;:UU\005C"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 800
          }
        }
        tensor_content: "\030\000\000\000\025\000\000\000\r\000\000\000\031\000\000\000\020\000\000\000\017\000\000\000\022\000\000\000\025\000\000\000\017\000\000\000\r\000\000\000\005\000\000\000\020\000\000\000\017\000\000\000\r\000\000\000\000\000\000\000\014\000\000\000\003\000\000\000\031\000\000\000\025\000\000\000\r\000\000\000\013\000\000\000\003\000\000\000\r\000\000\000\025\000\000\000\031\000\000\000\007\000\000\000\007\000\000\000\025\000\000\000\r\000\000\000\030\000\000\000\014\000\000\000\003\000\000\000\001\000\000\000\020\000\000\000\010\000\000\000\n\000\000\000\014\000\000\000\025\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\014\000\000\000\014\000\000\000\025\000\000\000\010\000\000\000\020\000\000\000\r\000\000\000\013\000\000\000\r\000\000\000\030\000\000\000\022\000\000\000\020\000\000\000\001\000\000\000\020\000\000\000\016\000\000\000\001\000\000\000\014\000\000\000\017\000\000\000\014\000\000\000\024\000\000\000\016\000\000\000\002\000\000\000\014\000\000\000\014\000\000\000\010\000\000\000\000\000\000\000\n\000\000\000\r\000\000\000\014\000\000\000\001\000\000\000\016\000\000\000\020\000\000\000\003\000\000\000\010\000\000\000\025\000\000\000\025\000\000\000\016\000\000\000\010\000\000\000\025\000\000\000\017\000\000\000\014\000\000\000\025\000\000\000\020\000\000\000\n\000\000\000\020\000\000\000\017\000\000\000\014\000\000\000\000\000\000\000\017\000\000\000\003\000\000\000\017\000\000\000\025\000\000\000\007\000\000\000\n\000\000\000\010\000\000\000\014\000\000\000\031\000\000\000\016\000\000\000\027\000\000\000\016\000\000\000\025\000\000\000\022\000\000\000\r\000\000\000\r\000\000\000\014\000\000\000\r\000\000\000\016\000\000\000\003\000\000\000\024\000\000\000\010\000\000\000\014\000\000\000\025\000\000\000\001\000\000\000\025\000\000\000\021\000\000\000\030\000\000\000\020\000\000\000\007\000\000\000\007\000\000\000\025\000\000\000\025\000\000\000\016\000\000\000\014\000\000\000\001\000\000\000\017\000\000\000\025\000\000\000\010\000\000\000\024\000\000\000\014\000\000\000\014\000\000\000\024\000\000\000\025\000\000\000\017\000\000\000\001\000\000\000\007\000\000\000\025\000\000\000\007\000\000\000\016\000\000\000\016\000\000\000\r\000\000\000\007\000\000\000\007\000\000\000\025\000\000\000\017\000\000\000\025\000\000\000\025\000\000\000\025\000\000\000\rr\000\000\000\t\000\000\000\021\000\000\000\016\000\000\000\016\000\000\000\004\000\000\000\r\000\000\000\014\000\000\000\030\000\000\000\031\000\000\000\r\000\000\000\016\000\000\000\017\000\000\000\001\000\000\000\r\000\000\000\013\000\000\000\n\000\000\000\017\000\000\000\000\000\000\000\017\000\000\000\030\000\000\000\014\000\000\000\031\000\000\000\r\000\000\000\003\000\000\000\007\000\000\000\031\000\000\000\014\000\000\000\r\000\000\000\016\000\000\000\016\000\000\000\014\000\000\000\014\000\000\000\001\000\000\000\024\000\000\000\003\000\000\000\017\000\000\000\017\000\000\000\025\000\000\000\020\000\000\000\020\000\000\000\021\000\000\000\n\000\000\000\r\000\000\000\014\000\000\000\010\000\000\000\r\000\000\000\017\000\000\000\020\000\000\000\r\000\000\000\n\000\000\000\r\000\000\000\017\000\000\000\001\000\000\000\003\000\000\000\010\000\000\000\016\000\000\000\017\000\000\000\rn\000\000\000\025\000\000\000\010\000\000\000\007\000\000\000\000\000\000\000\030\000\000\000\024\000\000\000\024\000\000\000\n\000\000\000\017\000\000\000\000\000\000\000\002\000\000\000\024\000\000\000\007\000\000\000\026\000\000\000\020\000\000\000\n\000\000\000\021\000\000\000\r\000\000\000\016\000\000\000\025\000\000\000\014\000\000\000\030\000\000\000\000\000\000\000\016\000\000\000\030\000\000\000\014\000\000\000\030\000\000\000\020\000\000\000\025\000\000\000\000\000\000\000\025\000\000\000\003\000\000\000\001\000\000\000\025\000\000\000\000\000\000\000\025\000\000\000\025\000\000\000\017\000\000\000\007\000\000\000\025\000\000\000\025\000\000\000\016\000\000\000\010\000\000\000\014\000\000\000\003\000\000\000\016\000\000\000\017\000\000\000\n\000\000\000\007\000\000\000\000\000\000\000\030\000\000\000\017\000\000\000\000\000\000\000\t\000\000\000\025\000\000\000\030\000\000\000\r\000\000\000\010\000\000\000\025\000\000\000\000\000\000\000\r\000\000\000\031\000\000\000\n\000\000\000\006\000\000\000\n\000\000\000\n\000\000\000\024\000\000\000\001\000\000\000\017\000\000\000\013\000\000\000\020\000\000\000\017\000\000\000\025\000\000\000\007\000\000\000\017\000\000\000\024\000\000\000\025\000\000\000\n\000\000\000\017\000\000\000\016\000\000\000\021\000\000\000\020\000\000\000\014\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\030\000\000\000\014\000\000\000\017\000\000\000\020\000\000\000\017\000\000\000\025\000\000\000\030\000\000\000\025\000\000\000\020\000\000\000\020\000\000\000\007\000\000\000\013\000\000\000\025\000\000\000\016\000\000\000\030\000\000\000\000\000\000\000\r\000\000\000\007\000\000\000\r\000\000\000\r\000\000\000\000\000\000\000\031\000\000\000\014\000\000\000\n\000\000\000\016\000\000\000\031\000\000\000\000\000\000\000\000\000\000\000\017\000\000\000\016\000\000\000\017\000\000\000\025\000\000\000\016\000\000\000\014\000\000\000\r\000\000\000\030\000\000\000\010\000\000\000\007\000\000\000\001\000\000\000\007\000\000\000\025\000\000\000\025\000\000\000\000\000\000\000\025\000\000\000\031\000\000\000\016\000\000\000\025\000\000\000\003\000\000\000\r\000\000\000\025\000\000\000\021\000\000\000\r\000\000\000\000\000\000\000\021\000\000\000\025\000\000\000\014\000\000\000\025\000\000\000\013\000\000\000\021\000\000\000\016\000\000\000\003\000\000\000\017\000\000\000\025\000\000\000\007\000\000\000\r\000\000\000\030\000\000\000\003\000\000\000\000\000\000\000\017\000\000\000\003\000\000\000\001\000\000\000\030\000\000\000\030\000\000\000\017\000\000\000\014\000\000\000\025\000\000\000\005\000\000\000\031\000\000\000\007\000\000\000\017\000\000\000\n\000\000\000\r\000\000\000\024\000\000\000\017\000\000\000\r\000\000\000\014\000\000\000\020\000\000\000\017\000\000\000\000\000\000\000\007\000\000\000\014\000\000\000\r\000\000\000\016\000\000\000\014\000\000\000\010\000\000\000\025\000\000\000\r\000\000\000\014\000\000\000\016\000\000\000\n\000\000\000\r\000\000\000\030\000\000\000\020\000\000\000\020\000\000\000\016\000\000\000\016\000\000\000\001\000\000\000\016\000\000\000\014\000\000\000\030\000\000\000\r\000\000\000\027\000\000\000\024\000\000\000\020\000\000\000\025\000\000\000\014\000\000\000\030\000\000\000\013\000\000\000\024\000\000\000\020\000\000\000\016\000\000\000\r\000\000\000\010\000\000\000\001\000\000\000\007\000\000\000\017\000\000\000\030\000\000\000\025\000\000\000\014\000\000\000\025\000\000\000\016\000\000\000\025\000\000\000\020\000\000\000\025\000\000\000\004\000\000\000\025\000\000\000\rnn\000\000\000\020\000\000\000\020\000\000\000\025\000\000\000\025\000\000\000\017\000\000\000\007\000\000\000\n\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\016\000\000\000\025\000\000\000\010\000\000\000\t\000\000\000\007\000\000\000\025\000\000\000\001\000\000\000\020\000\000\000\003\000\000\000\020\000\000\000\017\000\000\000\020\000\000\000\007\000\000\000\027\000\000\000\003\000\000\000\r\000\000\000\007\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\003\000\000\000\030\000\000\000\021\000\000\000\000\000\000\000\024\000\000\000\016\000\000\000\024\000\000\000\007\000\000\000\025\000\000\000\023\000\000\000\013\000\000\000\013\000\000\000\000\000\000\000\016\000\000\000\026\000\000\000\014\000\000\000\010\000\000\000\r\000\000\000\000\000\000\000\016\000\000\000\016\000\000\000\020\000\000\000\025\000\000\000\r\000\000\000\002\000\000\000\025\000\000\000\016\000\000\000\014\000\000\000\007\000\000\000\017\000\000\000\025\000\000\000\001\000\000\000\017\000\000\000\025\000\000\000\010\000\000\000\016\000\000\000\031\000\000\000\001\000\000\000\017\000\000\000\016\000\000\000\027\000\000\000\t\000\000\000\003\000\000\000\027\000\000\000\000\000\000\000\025\000\000\000\r\000\000\000\007\000\000\000\017\000\000\000\017\000\000\000\001\000\000\000\016\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\n\000\000\000\014\000\000\000\025\000\000\000\020\000\000\000\010\000\000\000\016\000\000\000\n\000\000\000\014\000\000\000\025\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\003\000\000\000\014\000\000\000\014\000\000\000\014\000\000\000\030\000\000\000\014\000\000\000\014\000\000\000\030\000\000\000\001\000\000\000\007\000\000\000\000\000\000\000\016\000\000\000\t\000\000\000\t\000\000\000\014\000\000\000\030\000\000\000\000\000\000\000\025\000\000\000\016\000\000\000\017\000\000\000\007\000\000\000\025\000\000\000\025\000\000\000\r\000\000\000\007\000\000\000\017\000\000\000\030\000\000\000\014\000\000\000\010\000\000\000\025\000\000\000\017\000\000\000\020\000\000\000\007\000\000\000\016\000\000\000\017\000\000\000\030\000\000\000\016\000\000\000\010\000\000\000\022\000\000\000\024\000\000\000\017\000\000\000\007\000\000\000\020\000\000\000\014\000\000\000\r\000\000\000\020\000\000\000\027\000\000\000\010\000\000\000\014\000\000\000\010\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\007\000\000\000\003\000\000\000\001\000\000\000\016\000\000\000\007\000\000\000\000\000\000\000\r\000\000\000\007\000\000\000\r\000\000\000\017\000\000\000\021\000\000\000\020\000\000\000\016\000\000\000\024\000\000\000\016\000\000\000\017\000\000\000\r\000\000\000\010\000\000\000\014\000\000\000\017\000\000\000\024\000\000\000\001\000\000\000\017\000\000\000\014\000\000\000\025\000\000\000\010\000\000\000\n\000\000\000\000\000\000\000\030\000\000\000\r\000\000\000\014\000\000\000\000\000\000\000\t\000\000\000\030\000\000\000\025\000\000\000\005\000\000\000\016\000\000\000\025\000\000\000\r\000\000\000\013\000\000\000\025\000\000\000\000\000\000\000\014\000\000\000\014\000\000\000\022\000\000\000\n\000\000\000\007\000\000\000\007\000\000\000\017\000\000\000\000\000\000\000\013\000\000\000\003\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\031\000\000\000\n\000\000\000\025\000\000\000\r\000\000\000\014\000\000\000\003\000\000\000\017\000\000\000\n\000\000\000\005\000\000\000\014\000\000\000\016\000\000\000\001\000\000\000\007\000\000\000\014\000\000\000\014\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  op: "Identity"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 69
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "E\000\000\000\036\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.24618297815322876
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.24618297815322876
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 69
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/hiddenlayer_0/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Cast"
  op: "Cast"
  input: "zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction/Mean"
  op: "Mean"
  input: "zero_fraction/Cast"
  input: "zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  input: "zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0_activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_0_activation/tag"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\036\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3464101552963257
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3464101552963257
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/hiddenlayer_1/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_1/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Cast"
  op: "Cast"
  input: "zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_1/Mean"
  op: "Mean"
  input: "zero_fraction_1/Cast"
  input: "zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  input: "zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1_activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_1_activation/tag"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_2/weights/part_0"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_2/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_2/biases/part_0"
  input: "dnn/hiddenlayer_2/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_2/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_2/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/hiddenlayer_2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_2/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_2/MatMul"
  input: "dnn/hiddenlayer_2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_2/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  input: "zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Cast"
  op: "Cast"
  input: "zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_2/Mean"
  op: "Mean"
  input: "zero_fraction_2/Cast"
  input: "zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_2_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_2_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_2_fraction_of_zero_values/tags"
  input: "zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_2_activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2_activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_2_activation/tag"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\032\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40824830532073975
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 26
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/read"
  op: "Identity"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 26
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "dnn/logits/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/read"
  op: "Identity"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights"
  op: "Identity"
  input: "dnn/logits/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/biases"
  op: "Identity"
  input: "dnn/logits/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "zero_fraction_3/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_3/Equal"
  op: "Equal"
  input: "dnn/logits/BiasAdd"
  input: "zero_fraction_3/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/Cast"
  op: "Cast"
  input: "zero_fraction_3/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_3/Mean"
  op: "Mean"
  input: "zero_fraction_3/Cast"
  input: "zero_fraction_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/logits_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/logits_fraction_of_zero_values/tags"
  input: "zero_fraction_3/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits_activation"
      }
    }
  }
}
node {
  name: "dnn/logits_activation"
  op: "HistogramSummary"
  input: "dnn/logits_activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "predictions/probabilities"
  op: "Softmax"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "predictions/classes/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "predictions/classes"
  op: "ArgMax"
  input: "dnn/logits/BiasAdd"
  input: "predictions/classes/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/softmax_cross_entropy_loss/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 800
      }
    }
  }
}
node {
  name: "training_loss/softmax_cross_entropy_loss"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "dnn/logits/BiasAdd"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_loss"
  op: "Mean"
  input: "training_loss/softmax_cross_entropy_loss"
  input: "training_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_loss/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "training_loss/ScalarSummary"
  op: "ScalarSummary"
  input: "training_loss/ScalarSummary/tags"
  input: "training_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dnn/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/learning_rate/Assign"
  op: "Assign"
  input: "dnn/learning_rate"
  input: "dnn/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/learning_rate/read"
  op: "Identity"
  input: "dnn/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Fill"
  op: "Fill"
  input: "train_op/dnn/gradients/Shape"
  input: "train_op/dnn/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Reshape"
  op: "Reshape"
  input: "train_op/dnn/gradients/Fill"
  input: "train_op/dnn/gradients/training_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 800
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Tile"
  op: "Tile"
  input: "train_op/dnn/gradients/training_loss_grad/Reshape"
  input: "train_op/dnn/gradients/training_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 800
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Prod"
  op: "Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Shape"
  input: "train_op/dnn/gradients/training_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Prod_1"
  op: "Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Shape_1"
  input: "train_op/dnn/gradients/training_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Maximum"
  op: "Maximum"
  input: "train_op/dnn/gradients/training_loss_grad/Prod_1"
  input: "train_op/dnn/gradients/training_loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/floordiv"
  op: "FloorDiv"
  input: "train_op/dnn/gradients/training_loss_grad/Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Cast"
  op: "Cast"
  input: "train_op/dnn/gradients/training_loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/truediv"
  op: "RealDiv"
  input: "train_op/dnn/gradients/training_loss_grad/Tile"
  input: "train_op/dnn/gradients/training_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/zeros_like"
  op: "ZerosLike"
  input: "training_loss/softmax_cross_entropy_loss:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/PreventGradient"
  op: "PreventGradient"
  input: "training_loss/softmax_cross_entropy_loss:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/ExpandDims"
  op: "ExpandDims"
  input: "train_op/dnn/gradients/training_loss_grad/truediv"
  input: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/mul"
  op: "Mul"
  input: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/ExpandDims"
  input: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/mul"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/mul"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/training_loss/softmax_cross_entropy_loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 69
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 69
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 69
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "train_op/dnn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "train_op/dnn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  input: "train_op/dnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 26
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "train_op/dnn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 26
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_2/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_2/weights/part_0"
  input: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_2/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_2/biases/part_0"
  input: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/weights/part_0"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/biases/part_0"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update"
  op: "NoOp"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_2/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_2/biases/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyAdagrad"
}
node {
  name: "train_op/dnn/train/value"
  op: "Const"
  input: "^train_op/dnn/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train_op/dnn/train"
  op: "AssignAdd"
  input: "global_step"
  input: "train_op/dnn/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/control_dependency"
  op: "Identity"
  input: "training_loss"
  input: "^train_op/dnn/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/Cast"
  op: "Cast"
  input: "predictions/classes"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Equal"
  op: "Equal"
  input: "metrics/Cast"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/ToFloat"
  op: "Cast"
  input: "metrics/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/accuracy/total"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/accuracy/total/Assign"
  op: "Assign"
  input: "metrics/accuracy/total"
  input: "metrics/accuracy/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/accuracy/total/read"
  op: "Identity"
  input: "metrics/accuracy/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/accuracy/count"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/accuracy/count/Assign"
  op: "Assign"
  input: "metrics/accuracy/count"
  input: "metrics/accuracy/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/accuracy/count/read"
  op: "Identity"
  input: "metrics/accuracy/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 800
      }
    }
  }
}
node {
  name: "metrics/accuracy/ToFloat_1"
  op: "Cast"
  input: "metrics/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/accuracy/Sum"
  op: "Sum"
  input: "metrics/ToFloat"
  input: "metrics/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/AssignAdd"
  op: "AssignAdd"
  input: "metrics/accuracy/total"
  input: "metrics/accuracy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/AssignAdd_1"
  op: "AssignAdd"
  input: "metrics/accuracy/count"
  input: "metrics/accuracy/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/accuracy/Greater"
  op: "Greater"
  input: "metrics/accuracy/count/read"
  input: "metrics/accuracy/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/truediv"
  op: "RealDiv"
  input: "metrics/accuracy/total/read"
  input: "metrics/accuracy/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/accuracy/value"
  op: "Select"
  input: "metrics/accuracy/Greater"
  input: "metrics/accuracy/truediv"
  input: "metrics/accuracy/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/accuracy/Greater_1"
  op: "Greater"
  input: "metrics/accuracy/AssignAdd_1"
  input: "metrics/accuracy/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/truediv_1"
  op: "RealDiv"
  input: "metrics/accuracy/AssignAdd"
  input: "metrics/accuracy/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/accuracy/update_op"
  op: "Select"
  input: "metrics/accuracy/Greater_1"
  input: "metrics/accuracy/truediv_1"
  input: "metrics/accuracy/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "metrics/LessEqual"
  op: "LessEqual"
  input: "metrics/Rank"
  input: "metrics/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape should be either [batch_size, 1] or [batch_size]"
      }
    }
  }
}
node {
  name: "metrics/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape should be either [batch_size, 1] or [batch_size]"
      }
    }
  }
}
node {
  name: "metrics/Assert/Assert"
  op: "Assert"
  input: "metrics/LessEqual"
  input: "metrics/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "metrics/Reshape/shape"
  op: "Const"
  input: "^metrics/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/Reshape"
  op: "Reshape"
  input: "Const_1"
  input: "metrics/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 26
      }
    }
  }
}
node {
  name: "metrics/one_hot"
  op: "OneHot"
  input: "metrics/Reshape"
  input: "metrics/one_hot/depth"
  input: "metrics/one_hot/on_value"
  input: "metrics/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "metrics/Cast_1"
  op: "Cast"
  input: "metrics/one_hot"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/auc/Reshape"
  op: "Reshape"
  input: "predictions/probabilities"
  input: "metrics/auc/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20800
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "metrics/auc/Reshape_1"
  op: "Reshape"
  input: "metrics/Cast_1"
  input: "metrics/auc/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        tensor_content: "\225\277\326\263\317\251\244;\317\251$<\267\376v<\317\251\244<C\324\315<\267\376\366<\225\024\020=\317\251$=\t?9=C\324M=}ib=\267\376v=\370\311\205=\225\024\220=2_\232=\317\251\244=l\364\256=\t?\271=\246\211\303=C\324\315=\340\036\330=}i\342=\032\264\354=\267\376\366=\252\244\000>\370\311\005>G\357\n>\225\024\020>\3449\025>2_\032>\201\204\037>\317\251$>\036\317)>l\364.>\273\0314>\t?9>Wd>>\246\211C>\364\256H>C\324M>\221\371R>\340\036X>.D]>}ib>\313\216g>\032\264l>h\331q>\267\376v>\005$|>\252\244\200>Q7\203>\370\311\205>\240\\\210>G\357\212>\356\201\215>\225\024\220><\247\222>\3449\225>\213\314\227>2_\232>\331\361\234>\201\204\237>(\027\242>\317\251\244>v<\247>\036\317\251>\305a\254>l\364\256>\023\207\261>\273\031\264>b\254\266>\t?\271>\260\321\273>Wd\276>\377\366\300>\246\211\303>M\034\306>\364\256\310>\234A\313>C\324\315>\352f\320>\221\371\322>9\214\325>\340\036\330>\207\261\332>.D\335>\326\326\337>}i\342>$\374\344>\313\216\347>r!\352>\032\264\354>\301F\357>h\331\361>\017l\364>\267\376\366>^\221\371>\005$\374>\254\266\376>\252\244\000?\375\355\001?Q7\003?\245\200\004?\370\311\005?L\023\007?\240\\\010?\363\245\t?G\357\n?\2328\014?\356\201\r?B\313\016?\225\024\020?\351]\021?<\247\022?\220\360\023?\3449\025?7\203\026?\213\314\027?\337\025\031?2_\032?\206\250\033?\331\361\034?-;\036?\201\204\037?\324\315 ?(\027\"?{`#?\317\251$?#\363%?v<\'?\312\205(?\036\317)?q\030+?\305a,?\030\253-?l\364.?\300=0?\023\2071?g\3202?\273\0314?\016c5?b\2546?\265\3657?\t?9?]\210:?\260\321;?\004\033=?Wd>?\253\255??\377\366@?R@B?\246\211C?\372\322D?M\034F?\241eG?\364\256H?H\370I?\234AK?\357\212L?C\324M?\227\035O?\352fP?>\260Q?\221\371R?\345BT?9\214U?\214\325V?\340\036X?3hY?\207\261Z?\333\372[?.D]?\202\215^?\326\326_?) a?}ib?\320\262c?$\374d?xEf?\313\216g?\037\330h?r!j?\306jk?\032\264l?m\375m?\301Fo?\025\220p?h\331q?\274\"s?\017lt?c\265u?\267\376v?\nHx?^\221y?\262\332z?\005$|?Ym}?\254\266~?\001\000\200?"
      }
    }
  }
}
node {
  name: "metrics/auc/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/ExpandDims"
  op: "ExpandDims"
  input: "metrics/auc/Const"
  input: "metrics/auc/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@Q\000\000"
      }
    }
  }
}
node {
  name: "metrics/auc/Tile"
  op: "Tile"
  input: "metrics/auc/ExpandDims"
  input: "metrics/auc/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/transpose/Rank"
  op: "Rank"
  input: "metrics/auc/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/auc/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/transpose/sub"
  op: "Sub"
  input: "metrics/auc/transpose/Rank"
  input: "metrics/auc/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/auc/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/transpose/Range"
  op: "Range"
  input: "metrics/auc/transpose/Range/start"
  input: "metrics/auc/transpose/Rank"
  input: "metrics/auc/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/transpose/sub_1"
  op: "Sub"
  input: "metrics/auc/transpose/sub"
  input: "metrics/auc/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/transpose"
  op: "Transpose"
  input: "metrics/auc/Reshape"
  input: "metrics/auc/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Tile_1/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/auc/Tile_1"
  op: "Tile"
  input: "metrics/auc/transpose"
  input: "metrics/auc/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Greater"
  op: "Greater"
  input: "metrics/auc/Tile_1"
  input: "metrics/auc/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/LogicalNot"
  op: "LogicalNot"
  input: "metrics/auc/Greater"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Tile_2/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/auc/Tile_2"
  op: "Tile"
  input: "metrics/auc/Reshape_1"
  input: "metrics/auc/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/LogicalNot_1"
  op: "LogicalNot"
  input: "metrics/auc/Tile_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/auc/true_positives"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/auc/true_positives/Assign"
  op: "Assign"
  input: "metrics/auc/true_positives"
  input: "metrics/auc/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/auc/true_positives/read"
  op: "Identity"
  input: "metrics/auc/true_positives"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/LogicalAnd"
  op: "LogicalAnd"
  input: "metrics/auc/Tile_2"
  input: "metrics/auc/Greater"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/ToFloat_1"
  op: "Cast"
  input: "metrics/auc/LogicalAnd"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/Sum"
  op: "Sum"
  input: "metrics/auc/ToFloat_1"
  input: "metrics/auc/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/AssignAdd"
  op: "AssignAdd"
  input: "metrics/auc/true_positives"
  input: "metrics/auc/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/auc/false_negatives"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/auc/false_negatives/Assign"
  op: "Assign"
  input: "metrics/auc/false_negatives"
  input: "metrics/auc/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/auc/false_negatives/read"
  op: "Identity"
  input: "metrics/auc/false_negatives"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/LogicalAnd_1"
  op: "LogicalAnd"
  input: "metrics/auc/Tile_2"
  input: "metrics/auc/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/ToFloat_2"
  op: "Cast"
  input: "metrics/auc/LogicalAnd_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/Sum_1"
  op: "Sum"
  input: "metrics/auc/ToFloat_2"
  input: "metrics/auc/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/AssignAdd_1"
  op: "AssignAdd"
  input: "metrics/auc/false_negatives"
  input: "metrics/auc/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/auc/true_negatives"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/auc/true_negatives/Assign"
  op: "Assign"
  input: "metrics/auc/true_negatives"
  input: "metrics/auc/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/true_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/auc/true_negatives/read"
  op: "Identity"
  input: "metrics/auc/true_negatives"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/true_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/LogicalAnd_2"
  op: "LogicalAnd"
  input: "metrics/auc/LogicalNot_1"
  input: "metrics/auc/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/ToFloat_3"
  op: "Cast"
  input: "metrics/auc/LogicalAnd_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Sum_2/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/Sum_2"
  op: "Sum"
  input: "metrics/auc/ToFloat_3"
  input: "metrics/auc/Sum_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/AssignAdd_2"
  op: "AssignAdd"
  input: "metrics/auc/true_negatives"
  input: "metrics/auc/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/true_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/auc/false_positives"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/auc/false_positives/Assign"
  op: "Assign"
  input: "metrics/auc/false_positives"
  input: "metrics/auc/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/auc/false_positives/read"
  op: "Identity"
  input: "metrics/auc/false_positives"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/LogicalAnd_3"
  op: "LogicalAnd"
  input: "metrics/auc/LogicalNot_1"
  input: "metrics/auc/Greater"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/ToFloat_4"
  op: "Cast"
  input: "metrics/auc/LogicalAnd_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 20800
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Sum_3/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/Sum_3"
  op: "Sum"
  input: "metrics/auc/ToFloat_4"
  input: "metrics/auc/Sum_3/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/AssignAdd_3"
  op: "AssignAdd"
  input: "metrics/auc/false_positives"
  input: "metrics/auc/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "metrics/auc/add"
  op: "Add"
  input: "metrics/auc/true_positives/read"
  input: "metrics/auc/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/add_1"
  op: "Add"
  input: "metrics/auc/true_positives/read"
  input: "metrics/auc/false_negatives/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "metrics/auc/add_2"
  op: "Add"
  input: "metrics/auc/add_1"
  input: "metrics/auc/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/div"
  op: "RealDiv"
  input: "metrics/auc/add"
  input: "metrics/auc/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/add_3"
  op: "Add"
  input: "metrics/auc/false_positives/read"
  input: "metrics/auc/true_negatives/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/add_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "metrics/auc/add_4"
  op: "Add"
  input: "metrics/auc/add_3"
  input: "metrics/auc/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/div_1"
  op: "RealDiv"
  input: "metrics/auc/false_positives/read"
  input: "metrics/auc/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 199
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice"
  op: "StridedSlice"
  input: "metrics/auc/div_1"
  input: "metrics/auc/strided_slice/stack"
  input: "metrics/auc/strided_slice/stack_1"
  input: "metrics/auc/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/auc/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_1"
  op: "StridedSlice"
  input: "metrics/auc/div_1"
  input: "metrics/auc/strided_slice_1/stack"
  input: "metrics/auc/strided_slice_1/stack_1"
  input: "metrics/auc/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/auc/sub"
  op: "Sub"
  input: "metrics/auc/strided_slice"
  input: "metrics/auc/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 199
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_2"
  op: "StridedSlice"
  input: "metrics/auc/div"
  input: "metrics/auc/strided_slice_2/stack"
  input: "metrics/auc/strided_slice_2/stack_1"
  input: "metrics/auc/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/auc/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_3"
  op: "StridedSlice"
  input: "metrics/auc/div"
  input: "metrics/auc/strided_slice_3/stack"
  input: "metrics/auc/strided_slice_3/stack_1"
  input: "metrics/auc/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/auc/add_5"
  op: "Add"
  input: "metrics/auc/strided_slice_2"
  input: "metrics/auc/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "metrics/auc/truediv"
  op: "RealDiv"
  input: "metrics/auc/add_5"
  input: "metrics/auc/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Mul"
  op: "Mul"
  input: "metrics/auc/sub"
  input: "metrics/auc/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/value"
  op: "Sum"
  input: "metrics/auc/Mul"
  input: "metrics/auc/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/auc/add_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "metrics/auc/add_6"
  op: "Add"
  input: "metrics/auc/AssignAdd"
  input: "metrics/auc/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/add_7"
  op: "Add"
  input: "metrics/auc/AssignAdd"
  input: "metrics/auc/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/add_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "metrics/auc/add_8"
  op: "Add"
  input: "metrics/auc/add_7"
  input: "metrics/auc/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/div_2"
  op: "RealDiv"
  input: "metrics/auc/add_6"
  input: "metrics/auc/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/add_9"
  op: "Add"
  input: "metrics/auc/AssignAdd_3"
  input: "metrics/auc/AssignAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/add_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "metrics/auc/add_10"
  op: "Add"
  input: "metrics/auc/add_9"
  input: "metrics/auc/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/div_3"
  op: "RealDiv"
  input: "metrics/auc/AssignAdd_3"
  input: "metrics/auc/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 199
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_4"
  op: "StridedSlice"
  input: "metrics/auc/div_3"
  input: "metrics/auc/strided_slice_4/stack"
  input: "metrics/auc/strided_slice_4/stack_1"
  input: "metrics/auc/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/auc/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_5"
  op: "StridedSlice"
  input: "metrics/auc/div_3"
  input: "metrics/auc/strided_slice_5/stack"
  input: "metrics/auc/strided_slice_5/stack_1"
  input: "metrics/auc/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/auc/sub_1"
  op: "Sub"
  input: "metrics/auc/strided_slice_4"
  input: "metrics/auc/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 199
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_6"
  op: "StridedSlice"
  input: "metrics/auc/div_2"
  input: "metrics/auc/strided_slice_6/stack"
  input: "metrics/auc/strided_slice_6/stack_1"
  input: "metrics/auc/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/auc/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/auc/strided_slice_7"
  op: "StridedSlice"
  input: "metrics/auc/div_2"
  input: "metrics/auc/strided_slice_7/stack"
  input: "metrics/auc/strided_slice_7/stack_1"
  input: "metrics/auc/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/auc/add_11"
  op: "Add"
  input: "metrics/auc/strided_slice_6"
  input: "metrics/auc/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "metrics/auc/truediv_1"
  op: "RealDiv"
  input: "metrics/auc/add_11"
  input: "metrics/auc/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Mul_1"
  op: "Mul"
  input: "metrics/auc/sub_1"
  input: "metrics/auc/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "metrics/auc/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/auc/update_op"
  op: "Sum"
  input: "metrics/auc/Mul_1"
  input: "metrics/auc/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/softmax_cross_entropy_loss/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 800
      }
    }
  }
}
node {
  name: "metrics/softmax_cross_entropy_loss"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "dnn/logits/BiasAdd"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
        shape {
          dim {
            size: 800
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "metrics/eval_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/eval_loss"
  op: "Mean"
  input: "metrics/softmax_cross_entropy_loss"
  input: "metrics/eval_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/total/Assign"
  op: "Assign"
  input: "metrics/mean/total"
  input: "metrics/mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/total/read"
  op: "Identity"
  input: "metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/count/Assign"
  op: "Assign"
  input: "metrics/mean/count"
  input: "metrics/mean/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/count/read"
  op: "Identity"
  input: "metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/mean/ToFloat_1"
  op: "Cast"
  input: "metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Sum"
  op: "Sum"
  input: "metrics/eval_loss"
  input: "metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "metrics/mean/total"
  input: "metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "metrics/mean/count"
  input: "metrics/mean/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater"
  op: "Greater"
  input: "metrics/mean/count/read"
  input: "metrics/mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv"
  op: "RealDiv"
  input: "metrics/mean/total/read"
  input: "metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/value"
  op: "Select"
  input: "metrics/mean/Greater"
  input: "metrics/mean/truediv"
  input: "metrics/mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1"
  op: "Greater"
  input: "metrics/mean/AssignAdd_1"
  input: "metrics/mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv_1"
  op: "RealDiv"
  input: "metrics/mean/AssignAdd"
  input: "metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/update_op"
  op: "Select"
  input: "metrics/mean/Greater_1"
  input: "metrics/mean/truediv_1"
  input: "metrics/mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^dnn/hiddenlayer_0/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_0/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_1/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_1/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_2/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_2/biases/part_0/Assign"
  input: "^dnn/logits/weights/part_0/Assign"
  input: "^dnn/logits/biases/part_0/Assign"
  input: "^dnn/learning_rate/Assign"
  input: "^dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/biases/part_0/Adagrad/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "metrics/accuracy/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "metrics/accuracy/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "metrics/auc/true_positives"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "metrics/auc/false_negatives"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "metrics/auc/true_negatives"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/true_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "metrics/auc/false_positives"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/auc/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  attr {
    key: "N"
    value {
      i: 26
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/hiddenlayer_2/weights/part_0"
        string_val: "dnn/hiddenlayer_2/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/learning_rate"
        string_val: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
        string_val: "dnn/dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/dnn/logits/biases/part_0/Adagrad"
        string_val: "metrics/accuracy/total"
        string_val: "metrics/accuracy/count"
        string_val: "metrics/auc/true_positives"
        string_val: "metrics/auc/false_negatives"
        string_val: "metrics/auc/true_negatives"
        string_val: "metrics/auc/false_positives"
        string_val: "metrics/mean/total"
        string_val: "metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 26
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 26
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  attr {
    key: "N"
    value {
      i: 18
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/hiddenlayer_2/weights/part_0"
        string_val: "dnn/hiddenlayer_2/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/learning_rate"
        string_val: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
        string_val: "dnn/dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/dnn/logits/biases/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^metrics/accuracy/total/Assign"
  input: "^metrics/accuracy/count/Assign"
  input: "^metrics/auc/true_positives/Assign"
  input: "^metrics/auc/false_negatives/Assign"
  input: "^metrics/auc/true_negatives/Assign"
  input: "^metrics/auc/false_positives/Assign"
  input: "^metrics/mean/total/Assign"
  input: "^metrics/mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "dnn/hiddenlayer_0_fraction_of_zero_values"
  input: "dnn/hiddenlayer_0_activation"
  input: "dnn/hiddenlayer_1_fraction_of_zero_values"
  input: "dnn/hiddenlayer_1_activation"
  input: "dnn/hiddenlayer_2_fraction_of_zero_values"
  input: "dnn/hiddenlayer_2_activation"
  input: "dnn/logits_fraction_of_zero_values"
  input: "dnn/logits_activation"
  input: "training_loss/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_3d08de712faa433fb4c25e2296d3dd7c/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
        string_val: "dnn/hiddenlayer_0/biases/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/weights"
        string_val: "dnn/hiddenlayer_0/weights/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/biases"
        string_val: "dnn/hiddenlayer_1/biases/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/weights"
        string_val: "dnn/hiddenlayer_1/weights/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/biases"
        string_val: "dnn/hiddenlayer_2/biases/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/weights"
        string_val: "dnn/hiddenlayer_2/weights/t_0/Adagrad"
        string_val: "dnn/learning_rate"
        string_val: "dnn/logits/biases"
        string_val: "dnn/logits/biases/t_0/Adagrad"
        string_val: "dnn/logits/weights"
        string_val: "dnn/logits/weights/t_0/Adagrad"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: "30 0,30"
        string_val: "30 0,30"
        string_val: "69 30 0,69:0,30"
        string_val: "69 30 0,69:0,30"
        string_val: "20 0,20"
        string_val: "20 0,20"
        string_val: "30 20 0,30:0,20"
        string_val: "30 20 0,30:0,20"
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "20 10 0,20:0,10"
        string_val: ""
        string_val: "26 0,26"
        string_val: "26 0,26"
        string_val: "10 26 0,10:0,26"
        string_val: "10 26 0,10:0,26"
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_2/biases/part_0/read"
  input: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_2/weights/part_0/read"
  input: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/read"
  input: "dnn/learning_rate"
  input: "dnn/logits/biases/part_0/read"
  input: "dnn/dnn/logits/biases/part_0/Adagrad/read"
  input: "dnn/logits/weights/part_0/read"
  input: "dnn/dnn/logits/weights/part_0/Adagrad/read"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "30 0,30"
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "30 0,30"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "69 30 0,69:0,30"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "69 30 0,69:0,30"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "20 0,20"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "20 0,20"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "30 20 0,30:0,20"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "30 20 0,30:0,20"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_2/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dnn/hiddenlayer_2/biases/part_0"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_2/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_2/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "20 10 0,20:0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dnn/hiddenlayer_2/weights/part_0"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_2/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "20 10 0,20:0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dnn/learning_rate"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "26 0,26"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "26 0,26"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 26 0,10:0,26"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 26 0,10:0,26"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 21
}
